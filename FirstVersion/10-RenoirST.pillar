!Maîtriser les feuilles de styles avec RenoirSt

!! Installation de RenoirSt

Le framework RenoirSt est disponible dans le catalogue Pharo. Il vous suffit donc d'ouvrir le Catalog Browser et de sélectionner RenoirSt. Pour Développer avec Seaside, il est recommander d'installer RenoirStPlusSeaside qui comprend RenoirSt ainsi que le code nécessaire à une intégration correcte au serveur d'applications de Pharo.

[[[
Metacello new
  baseline: 'RenoirSt';
  repository: 'github://gcotelli/RenoirSt:stable-pharo-50/source';
  load
]]]

  RenoirStPlusSeaside

inconvénient  de la solution

!! Intégration d'une feuille de styles

Pour éviter que la feuille de style soit reconstruite systèmatiquement à chaque appel de la méthode ==style== de ==TBApplicationRootComponent==, nous allons utiliser une variable d'instance afin de la mettre en cache. Pour cela, ajouter la variable d'instance ==css== à ==TBApplicationRootComponent==.

[[[
  WAComponent subclass: #TBApplicationRootComponent
	  instanceVariableNames: 'main css'
	  classVariableNames: ''
	  category: 'TinyBlog-Components'
]]]

La méthode ==TBApplicationRootComponent >> styleSheet== contiendra la définition de la feuille de styles et est appelé par la méthode ==initialize==. Pour l'instant, contentez vous de retourner une chaine vide.

[[[
TBApplicationRootComponent >> styleSheet
	^''

TBApplicationRootComponent >> initialize
	super initialize.
	css := self styleSheet.
	main := TBPostsListComponent new.     
]]]

A partir de maintenant, vous avez la possibilité de modifier l'apparence de TinyBlog.

!! Améliorer le visuel

Jusque maintenant, TinyBlog n'a pas été spécialement soigné visuellement. Il utilise le style de base fourni par le framework BootStrap et c'est vrai, il n'est pas très sexy. Grâce à la feuille de styles construite à l'aide de RenoirSt, vous allez lui donner un look plus travaillé.

Commençons par l'affichage des posts. Celui ci a été défini dans ==TBPostComponent== selon une très mauvaise méthode puisque l'apparence du titre et du sous titre sont uniquement définis par les balises HTML <h2> et <h6> mais parce que aucune classe CSS n'a été spécifiée. Corrigez le code à l'aide de cette nouvelle version de la méthode:

[[[
TBPostComponent >> renderContentOn: html
	html paragraph class: 'title'; with: self title.
   	html paragraph class: 'subtitle'; with: self date.
   	html paragraph class: 'content'; with: self text  
]]]

Vous pouvez maintenant modifier le style de ces éléments dans la méthode ==stylesheet==. Commencez par fixer la taille du titre. Elle est fixée à 200% de la taille par défaut dans le navigateur.

[[[
styleSheet
	^(CascadingStyleSheetBuilder new 
		declareRuleSetFor: [ :selector | selector paragraph class: 'title' ]
			with: [ :style | style fontSize: 200 percent ];
		build) asString
]]]

Le sous-titre est écrit en italique et le contenu est justifié.

[[[
styleSheet
	^(CascadingStyleSheetBuilder new 
		declareRuleSetFor: [ :selector | selector paragraph class: 'title' ]
			with: [ :style | style fontSize: 200 percent ];
		declareRuleSetFor: [ :selector | selector paragraph class: 'subtitle' ]
			with: [ :style | style fontStyle: CssConstants italic ];
		declareRuleSetFor: [ :selector | selector paragraph class: 'content' ]
			with: [ :style | style textAlign: CssConstants justify ];	
		build) asString
]]]

Le titre peut être amélioré en faisant en sorte que le premier caractère soit mis en valeur. Il sera plus grand et obligatoirement écrit à l'aide d'une lettre majuscule. Le titre est souligné à l'aide d'un trait fin. 

[[[
styleSheet
	^(CascadingStyleSheetBuilder new 
		declareRuleSetFor: [ :selector | selector paragraph class: 'title' ]
			with: [ :style | style fontSize: 200 percent ];
		declareRuleSetFor: [ :selector | selector paragraph class: 'subtitle' ]
			with: [ :style | style fontStyle: CssConstants italic ];
		declareRuleSetFor: [ :selector | selector paragraph class: 'content' ]
			with: [ :style | style textAlign: CssConstants justify ];
		declareRuleSetFor: [ :selector | (selector paragraph class: 'title') firstLetter ]
			with: [ :style | 
				style 
					fontSize: 150 percent;
					textTransform: CssConstants capitalize
			];
		declareRuleSetFor: [ :selector | selector paragraph class: 'title' ]
			with: [ :style | style borderBottomStyle: CssConstants solid ];
		declareRuleSetFor: [ :selector | selector paragraph class: 'title' ]
			with: [ :style | style borderWidth: 1px ];
		declareRuleSetFor: [ :selector | selector paragraph class: 'title' ]
			with: [ :style | style borderColor: CssSVGColors black ];
		build) asString
]]]

