OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:22:09.232026+02:00' ],		#prior : OmReference [ 'Pharo.11x4hyazp2lpjhvtm4jw7ty44', '7' ],		#self : OmReference [ '1' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WAComponent',				#traitCompositionSource : '{}',				#definitionSource : 'WAComponent subclass: #TBHeaderComponent\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBHeaderComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBHeaderComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBHeaderComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBHeaderComponent,					#isMetaSide : false				},				#parent : @7,				#content : 'I am a simple component to manage the default header.\rI am factorised on ScreenComponent.\r ',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WAComponent',				#traitCompositionSource : '{}',				#definitionSource : 'WAComponent subclass: #TBHeaderComponent\r\tinstanceVariableNames: \'component\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBHeaderComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBHeaderComponent,						#isMetaSide : false					},					#name : #component,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBHeaderComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBHeaderComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBHeaderComponent,					#isMetaSide : false				},				#parent : @21,				#content : 'I am a simple component to manage the default header.\rI am factorised on ScreenComponent.\r ',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:22:14.324989+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'component:',			#protocol : #'as yet unclassified',			#sourceCode : 'component: anObject\r         component := anObject',			#stamp : 'StephaneDucasse 8/19/2018 13:22',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:22:14.381536+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'component:',			#protocol : #'as yet unclassified',			#sourceCode : 'component: anObject\r         component := anObject',			#stamp : 'StephaneDucasse 8/19/2018 13:22',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'component:',			#protocol : #accessing,			#sourceCode : 'component: anObject\r         component := anObject',			#stamp : 'StephaneDucasse 8/19/2018 13:22',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:22:18.78266+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #component,			#protocol : #accessing,			#sourceCode : 'component\r         ^ component',			#stamp : 'StephaneDucasse 8/19/2018 13:22',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:22:31.622428+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBHeaderComponent class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'as yet unclassified',			#sourceCode : 'from: aComponent\r         ^ self new\r          component: aComponent;\r          yourself',			#stamp : 'StephaneDucasse 8/19/2018 13:22',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:22:31.672713+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBHeaderComponent class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'as yet unclassified',			#sourceCode : 'from: aComponent\r         ^ self new\r          component: aComponent;\r          yourself',			#stamp : 'StephaneDucasse 8/19/2018 13:22',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBHeaderComponent class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aComponent\r         ^ self new\r          component: aComponent;\r          yourself',			#stamp : 'StephaneDucasse 8/19/2018 13:22',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:22:44.697793+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBScreenComponent,				#isMetaSide : false			},			#name : #createHeaderComponent,			#protocol : #initialization,			#sourceCode : 'createHeaderComponent\r\t^ TBHeaderComponent new',			#stamp : 'Luc 8/10/2018 11:57',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBScreenComponent,				#isMetaSide : false			},			#name : #createHeaderComponent,			#protocol : #initialization,			#sourceCode : 'createHeaderComponent\r        ^ TBHeaderComponent from: self',			#stamp : 'StephaneDucasse 8/19/2018 13:22',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:22:55.702112+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'renderSimpleAdminButtonOn:',			#protocol : #rendering,			#sourceCode : 'renderSimpleAdminButtonOn: html\r  html form: [\r     html tbsNavbarButton\r       tbsPullRight;\r       with: [\r            html tbsGlyphIcon iconListAlt.\r            html text: \' Admin View\' ]]',			#stamp : 'StephaneDucasse 8/19/2018 12:12',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'renderSimpleAdminButtonOn:',			#protocol : #rendering,			#sourceCode : 'renderSimpleAdminButtonOn: html\r        html form: [\r        html tbsNavbarButton\r          tbsPullRight;\r          callback: [ component goToAdministrationView ];\r          with: [\r              html tbsGlyphIcon iconListAlt.\r              html text: \' Admin View\' ]]',			#stamp : 'StephaneDucasse 8/19/2018 13:22',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:23:09.974705+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #goToAdministrationView,			#protocol : #'as yet unclassified',			#sourceCode : 'goToAdministrationView\r        self call: TBAdminComponent new',			#stamp : 'StephaneDucasse 8/19/2018 13:23',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:26:19.183037+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBHeaderComponent',				#traitCompositionSource : '{}',				#definitionSource : 'TBHeaderComponent subclass: #TBAdminHeaderComponent\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBAdminHeaderComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBAdminHeaderComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBAdminHeaderComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBAdminHeaderComponent,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:26:27.132329+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminHeaderComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderButtonsOn: html\r         html form: [ self renderDisconnectButtonOn: html ]',			#stamp : 'StephaneDucasse 8/19/2018 13:26',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:26:27.187247+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminHeaderComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderButtonsOn: html\r         html form: [ self renderDisconnectButtonOn: html ]',			#stamp : 'StephaneDucasse 8/19/2018 13:26',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminHeaderComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #rendering,			#sourceCode : 'renderButtonsOn: html\r         html form: [ self renderDisconnectButtonOn: html ]',			#stamp : 'StephaneDucasse 8/19/2018 13:26',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:27:28.397731+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #createHeaderComponent,			#protocol : #rendering,			#sourceCode : 'createHeaderComponent\r   ^ TBAdminHeaderComponent from: self',			#stamp : 'StephaneDucasse 8/19/2018 13:27',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:28:12.442457+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminHeaderComponent,				#isMetaSide : false			},			#name : #'renderDisconnectButtonOn:',			#protocol : #rendering,			#sourceCode : 'renderDisconnectButtonOn: html\r         html tbsNavbarButton\r\r             tbsPullRight;\r            callback: [ component goToPostListView ];\r            with: [\r               html text: \'Disconnect \'.\r               html tbsGlyphIcon iconLogout ]',			#stamp : 'StephaneDucasse 8/19/2018 13:28',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T13:28:24.725097+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #goToPostListView,			#protocol : #rendering,			#sourceCode : 'goToPostListView\r        self answer',			#stamp : 'StephaneDucasse 8/19/2018 13:28',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:42:18.780648+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WAComponent',				#traitCompositionSource : '{}',				#definitionSource : 'WAComponent subclass: #TBAuthentificationComponent\r\tinstanceVariableNames: \'password account component\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBAuthentificationComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBAuthentificationComponent,						#isMetaSide : false					},					#name : #password,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBAuthentificationComponent,						#isMetaSide : false					},					#name : #account,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBAuthentificationComponent,						#isMetaSide : false					},					#name : #component,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBAuthentificationComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBAuthentificationComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBAuthentificationComponent,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:42:31.297448+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #account,			#protocol : #'as yet unclassified',			#sourceCode : 'account\r   ^ account',			#stamp : 'StephaneDucasse 8/19/2018 20:42',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:42:31.364688+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #account,			#protocol : #'as yet unclassified',			#sourceCode : 'account\r   ^ account',			#stamp : 'StephaneDucasse 8/19/2018 20:42',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #account,			#protocol : #accessing,			#sourceCode : 'account\r   ^ account',			#stamp : 'StephaneDucasse 8/19/2018 20:42',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:42:36.120293+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #'account:',			#protocol : #accessing,			#sourceCode : 'account: anObject\r   account := anObject',			#stamp : 'StephaneDucasse 8/19/2018 20:42',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:42:40.532128+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #password,			#protocol : #accessing,			#sourceCode : 'password\r   ^ password',			#stamp : 'StephaneDucasse 8/19/2018 20:42',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:42:46.899327+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #'password:',			#protocol : #accessing,			#sourceCode : 'password: anObject\r   password := anObject',			#stamp : 'StephaneDucasse 8/19/2018 20:42',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:42:53.139816+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #component,			#protocol : #accessing,			#sourceCode : 'component\r   ^ component',			#stamp : 'StephaneDucasse 8/19/2018 20:42',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:42:58.407831+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #'component:',			#protocol : #accessing,			#sourceCode : 'component: anObject\r   component := anObject',			#stamp : 'StephaneDucasse 8/19/2018 20:42',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:43:11.044661+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBAuthentificationComponent class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'as yet unclassified',			#sourceCode : 'from: aComponent\r   ^ self new\r      component: aComponent;\r      yourself',			#stamp : 'StephaneDucasse 8/19/2018 20:43',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:43:11.101634+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBAuthentificationComponent class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'as yet unclassified',			#sourceCode : 'from: aComponent\r   ^ self new\r      component: aComponent;\r      yourself',			#stamp : 'StephaneDucasse 8/19/2018 20:43',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBAuthentificationComponent class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aComponent\r   ^ self new\r      component: aComponent;\r      yourself',			#stamp : 'StephaneDucasse 8/19/2018 20:43',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:43:39.567616+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderContentOn: html\r   html tbsModal\r      id: \'myAuthDialog\';\r      with: [\r         html tbsModalDialog: [\r            html tbsModalContent: [\r               self renderHeaderOn: html.\r               self renderBodyOn: html ] ] ]',			#stamp : 'StephaneDucasse 8/19/2018 20:43',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:43:39.632893+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderContentOn: html\r   html tbsModal\r      id: \'myAuthDialog\';\r      with: [\r         html tbsModalDialog: [\r            html tbsModalContent: [\r               self renderHeaderOn: html.\r               self renderBodyOn: html ] ] ]',			#stamp : 'StephaneDucasse 8/19/2018 20:43',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r   html tbsModal\r      id: \'myAuthDialog\';\r      with: [\r         html tbsModalDialog: [\r            html tbsModalContent: [\r               self renderHeaderOn: html.\r               self renderBodyOn: html ] ] ]',			#stamp : 'StephaneDucasse 8/19/2018 20:43',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:44:05.445818+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #'renderHeaderOn:',			#protocol : #rendering,			#sourceCode : 'renderHeaderOn: html\r   html\r      tbsModalHeader: [\r         html tbsModalCloseIcon.\r         html tbsModalTitle\r            level: 4;\r            with: \'Authentication\' ]\r',			#stamp : 'StephaneDucasse 8/19/2018 20:44',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:44:17.554081+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #'renderBodyOn:',			#protocol : #rendering,			#sourceCode : 'renderBodyOn: html\r    html\r        tbsModalBody: [\r            html tbsForm: [\r                self renderAccountFieldOn: html.\r                self renderPasswordFieldOn: html.\r                html tbsModalFooter: [ self renderButtonsOn: html ]\r]]',			#stamp : 'StephaneDucasse 8/19/2018 20:44',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:44:35.993565+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #'renderAccountFieldOn:',			#protocol : #rendering,			#sourceCode : 'renderAccountFieldOn: html\r   html\r      tbsFormGroup: [ html label with: \'Account\'.\r         html textInput\r            tbsFormControl;\r            attributeAt: \'autofocus\' put: \'true\';\r            callback: [ :value | account := value ];\r            value: account ]',			#stamp : 'StephaneDucasse 8/19/2018 20:44',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:44:51.157343+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #'renderPasswordFieldOn:',			#protocol : #rendering,			#sourceCode : 'renderPasswordFieldOn: html\r   html tbsFormGroup: [\r\r\r       html label with: \'Password\'.\r      html passwordInput\r         tbsFormControl;\r         callback: [ :value | password := value ];\r         value: password ]',			#stamp : 'StephaneDucasse 8/19/2018 20:44',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:45:40.352839+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #rendering,			#sourceCode : 'renderButtonsOn: html\r   html tbsButton\r      attributeAt: \'type\' put: \'button\';\r      attributeAt: \'data-dismiss\' put: \'modal\';\r      beDefault;\r      value: \'Cancel\'.\r   html tbsSubmitButton\r      bePrimary;\r      callback: [ self validate ];\r      value: \'SignIn\'',			#stamp : 'StephaneDucasse 8/19/2018 20:45',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:46:04.43625+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAuthentificationComponent,				#isMetaSide : false			},			#name : #validate,			#protocol : #rendering,			#sourceCode : 'validate\r  ^ component tryConnectionWithLogin: self account andPassword: self\rpassword\r',			#stamp : 'StephaneDucasse 8/19/2018 20:46',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:46:26.080243+02:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #rendering,			#sourceCode : 'renderButtonsOn: html\r   self renderSimpleAdminButtonOn: html',			#stamp : 'StephaneDucasse 8/19/2018 12:12',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #rendering,			#sourceCode : 'renderButtonsOn: html\r   self rendeModalLoginButtonOn: html',			#stamp : 'StephaneDucasse 8/19/2018 20:46',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:46:39.550612+02:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #rendering,			#sourceCode : 'renderButtonsOn: html\r   self rendeModalLoginButtonOn: html',			#stamp : 'StephaneDucasse 8/19/2018 20:46',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #rendering,			#sourceCode : 'renderButtonsOn: html\r\tself renderModalLoginButtonOn: html',			#stamp : 'StephaneDucasse 8/19/2018 20:46',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T20:59:45.775821+02:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'renderModalLoginButtonOn:',			#protocol : #rendering,			#sourceCode : 'renderModalLoginButtonOn: html\r         html render: (TBAuthentificationComponent from: component).\r         html tbsNavbarButton\r            tbsPullRight;\r            attributeAt: \'data-target\' put: \'#myAuthDialog\';\r            attributeAt: \'data-toggle\' put: \'modal\';\r            with: [\r               html tbsGlyphIcon iconLock.\r               html text: \' Login\' ]',			#stamp : 'StephaneDucasse 8/19/2018 20:59',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:18:58.848316+02:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'tryConnectionWithLogin:andPassword:',			#protocol : #'as yet unclassified',			#sourceCode : 'tryConnectionWithLogin: login andPassword:\r            password\r          (login = \'admin\' and: [ password = \'topsecret\' ])\r                ifTrue: [ self goToAdministrationView ]\r                ifFalse: [ self loginErrorOccured ]',			#stamp : 'StephaneDucasse 8/19/2018 21:18',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:26:37.846523+02:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBScreenComponent',				#traitCompositionSource : '{}',				#definitionSource : 'TBScreenComponent subclass: #TBPostsListComponent\r\tinstanceVariableNames: \'currentCategory\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBPostsListComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostsListComponent,						#isMetaSide : false					},					#name : #currentCategory,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostsListComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostsListComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostsListComponent,					#isMetaSide : false				},				#parent : @7,				#content : 'I\'m responsible for displaying a list of posts. I delegare to the post component the display of a single post.\rI\'m in the contact with a category component. ',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBScreenComponent',				#traitCompositionSource : '{}',				#definitionSource : 'TBScreenComponent subclass: #TBPostsListComponent\r\tinstanceVariableNames: \'currentCategory showLoginError\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBPostsListComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostsListComponent,						#isMetaSide : false					},					#name : #currentCategory,					#parent : @23				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostsListComponent,						#isMetaSide : false					},					#name : #showLoginError,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostsListComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostsListComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostsListComponent,					#isMetaSide : false				},				#parent : @23,				#content : 'I\'m responsible for displaying a list of posts. I delegare to the post component the display of a single post.\rI\'m in the contact with a category component. ',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:26:37.998907+02:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'renderLoginErrorMessageIfAnyOn:',			#protocol : #rendering,			#sourceCode : 'renderLoginErrorMessageIfAnyOn: html\r   self hasLoginError ifTrue: [ \r      showLoginError := false.\r      html tbsAlert \r         beDanger ;\r         with: self loginErrorMessage\r   ]',			#stamp : 'StephaneDucasse 8/19/2018 21:26',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:26:47.854989+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #loginErrorMessage,			#protocol : #rendering,			#sourceCode : 'loginErrorMessage\r   ^ \'Incorrect login and/or password\'',			#stamp : 'StephaneDucasse 8/19/2018 21:26',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:26:54.355565+02:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #hasLoginError,			#protocol : #rendering,			#sourceCode : 'hasLoginError\r   ^ showLoginError ifNil: [ false ]',			#stamp : 'StephaneDucasse 8/19/2018 21:26',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:27:00.565005+02:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBScreenComponent',				#traitCompositionSource : '{}',				#definitionSource : 'TBScreenComponent subclass: #TBPostsListComponent\r\tinstanceVariableNames: \'currentCategory showLoginError\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBPostsListComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostsListComponent,						#isMetaSide : false					},					#name : #currentCategory,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostsListComponent,						#isMetaSide : false					},					#name : #showLoginError,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostsListComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostsListComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostsListComponent,					#isMetaSide : false				},				#parent : @7,				#content : 'I\'m responsible for displaying a list of posts. I delegare to the post component the display of a single post.\rI\'m in the contact with a category component. ',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		},		#protocol : #testing	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:27:04.154939+02:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #hasLoginError,			#protocol : #rendering,			#sourceCode : 'hasLoginError\r   ^ showLoginError ifNil: [ false ]',			#stamp : 'StephaneDucasse 8/19/2018 21:26',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #hasLoginError,			#protocol : #testing,			#sourceCode : 'hasLoginError\r   ^ showLoginError ifNil: [ false ]',			#stamp : 'StephaneDucasse 8/19/2018 21:26',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:27:11.48692+02:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBScreenComponent',				#traitCompositionSource : '{}',				#definitionSource : 'TBScreenComponent subclass: #TBPostsListComponent\r\tinstanceVariableNames: \'currentCategory showLoginError\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBPostsListComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostsListComponent,						#isMetaSide : false					},					#name : #currentCategory,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostsListComponent,						#isMetaSide : false					},					#name : #showLoginError,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostsListComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostsListComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostsListComponent,					#isMetaSide : false				},				#parent : @7,				#content : 'I\'m responsible for displaying a list of posts. I delegare to the post component the display of a single post.\rI\'m in the contact with a category component. ',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		},		#protocol : #error	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:27:16.568947+02:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #loginErrorMessage,			#protocol : #rendering,			#sourceCode : 'loginErrorMessage\r   ^ \'Incorrect login and/or password\'',			#stamp : 'StephaneDucasse 8/19/2018 21:26',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #loginErrorMessage,			#protocol : #error,			#sourceCode : 'loginErrorMessage\r   ^ \'Incorrect login and/or password\'',			#stamp : 'StephaneDucasse 8/19/2018 21:26',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:27:19.140425+02:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'renderLoginErrorMessageIfAnyOn:',			#protocol : #rendering,			#sourceCode : 'renderLoginErrorMessageIfAnyOn: html\r   self hasLoginError ifTrue: [ \r      showLoginError := false.\r      html tbsAlert \r         beDanger ;\r         with: self loginErrorMessage\r   ]',			#stamp : 'StephaneDucasse 8/19/2018 21:26',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'renderLoginErrorMessageIfAnyOn:',			#protocol : #error,			#sourceCode : 'renderLoginErrorMessageIfAnyOn: html\r   self hasLoginError ifTrue: [ \r      showLoginError := false.\r      html tbsAlert \r         beDanger ;\r         with: self loginErrorMessage\r   ]',			#stamp : 'StephaneDucasse 8/19/2018 21:26',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:27:30.455007+02:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #loginErrorOccurred,			#protocol : #accessing,			#sourceCode : 'loginErrorOccurred\r\tshowLoginError := true',			#stamp : 'StephaneDucasse 8/19/2018 21:27',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:27:39.227356+02:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #goToAdministrationView,			#protocol : #'as yet unclassified',			#sourceCode : 'goToAdministrationView\r        self call: TBAdminComponent new',			#stamp : 'StephaneDucasse 8/19/2018 13:23',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #goToAdministrationView,			#protocol : #login,			#sourceCode : 'goToAdministrationView\r        self call: TBAdminComponent new',			#stamp : 'StephaneDucasse 8/19/2018 13:23',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:27:39.23057+02:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'tryConnectionWithLogin:andPassword:',			#protocol : #'as yet unclassified',			#sourceCode : 'tryConnectionWithLogin: login andPassword:\r            password\r          (login = \'admin\' and: [ password = \'topsecret\' ])\r                ifTrue: [ self goToAdministrationView ]\r                ifFalse: [ self loginErrorOccured ]',			#stamp : 'StephaneDucasse 8/19/2018 21:18',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'tryConnectionWithLogin:andPassword:',			#protocol : #login,			#sourceCode : 'tryConnectionWithLogin: login andPassword:\r            password\r          (login = \'admin\' and: [ password = \'topsecret\' ])\r                ifTrue: [ self goToAdministrationView ]\r                ifFalse: [ self loginErrorOccured ]',			#stamp : 'StephaneDucasse 8/19/2018 21:18',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:28:14.578964+02:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'tryConnectionWithLogin:andPassword:',			#protocol : #login,			#sourceCode : 'tryConnectionWithLogin: login andPassword:\r            password\r          (login = \'admin\' and: [ password = \'topsecret\' ])\r                ifTrue: [ self goToAdministrationView ]\r                ifFalse: [ self loginErrorOccured ]',			#stamp : 'StephaneDucasse 8/19/2018 21:18',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'tryConnectionWithLogin:andPassword:',			#protocol : #login,			#sourceCode : 'tryConnectionWithLogin: login andPassword: password\r\t(login = \'admin\' and: [ password = \'topsecret\' ])\r\t\tifTrue: [ self goToAdministrationView ]\r\t\tifFalse: [ self loginErrorOccurred ]',			#stamp : 'StephaneDucasse 8/19/2018 21:28',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:30:04.783135+02:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'renderPostColumnOn:',			#protocol : #rendering,			#sourceCode : 'renderPostColumnOn: html\r   html tbsColumn\r         extraSmallSize: 12;\r         smallSize: 10;\r         mediumSize: 8;\r         with: [ self basicRenderPostsOn: html ]',			#stamp : 'Luc 8/10/2018 14:48',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'renderPostColumnOn:',			#protocol : #rendering,			#sourceCode : 'renderPostColumnOn: html\r   html tbsColumn\r      extraSmallSize: 12;\r      smallSize: 10;\r      mediumSize: 8;\r      with: [ \r         self renderLoginErrorMessageIfAnyOn: html. \r         self basicRenderPostsOn: html ] ',			#stamp : 'StephaneDucasse 8/19/2018 21:30',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:31:50.12028+02:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #TBAdministrator\r\tinstanceVariableNames: \'login password\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog\''			},			#name : #TBAdministrator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBAdministrator,						#isMetaSide : false					},					#name : #login,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBAdministrator,						#isMetaSide : false					},					#name : #password,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBAdministrator class\r\tinstanceVariableNames: \'\''				},				#name : #'TBAdministrator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBAdministrator,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:31:57.715264+02:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdministrator,				#isMetaSide : false			},			#name : #login,			#protocol : #'as yet unclassified',			#sourceCode : 'login\r   ^ login',			#stamp : 'StephaneDucasse 8/19/2018 21:31',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:31:57.762633+02:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdministrator,				#isMetaSide : false			},			#name : #login,			#protocol : #'as yet unclassified',			#sourceCode : 'login\r   ^ login',			#stamp : 'StephaneDucasse 8/19/2018 21:31',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdministrator,				#isMetaSide : false			},			#name : #login,			#protocol : #accessing,			#sourceCode : 'login\r   ^ login',			#stamp : 'StephaneDucasse 8/19/2018 21:31',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:32:02.284237+02:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdministrator,				#isMetaSide : false			},			#name : #'login:',			#protocol : #accessing,			#sourceCode : 'login: anObject\r   login := anObject',			#stamp : 'StephaneDucasse 8/19/2018 21:32',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:32:06.642556+02:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdministrator,				#isMetaSide : false			},			#name : #password,			#protocol : #accessing,			#sourceCode : 'password\r   ^ password',			#stamp : 'StephaneDucasse 8/19/2018 21:32',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:32:11.51744+02:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdministrator,				#isMetaSide : false			},			#name : #'password:',			#protocol : #accessing,			#sourceCode : 'password: anObject\r   password := (MD5 hashMessage: anObject)',			#stamp : 'StephaneDucasse 8/19/2018 21:32',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:33:48.502234+02:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBAdministrator class',				#isMetaSide : true			},			#name : #'login:password:',			#protocol : #'as yet unclassified',			#sourceCode : 'login: login password: password\r\t^ self new \r\t\tlogin: login;\r\t\tpassword: password;\r\t\tyourself\t',			#stamp : 'StephaneDucasse 8/19/2018 21:33',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:37:13.067559+02:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #TBBlog\r\tinstanceVariableNames: \'posts\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog\''			},			#name : #TBBlog,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBBlog,						#isMetaSide : false					},					#name : #posts,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBBlog class\r\tinstanceVariableNames: \'uniqueInstance\''				},				#name : #'TBBlog class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'TBBlog class',							#isMetaSide : true						},						#name : #uniqueInstance,						#parent : @14					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBBlog,					#isMetaSide : false				},				#parent : @7,				#content : 'a TBBlog represents a blog that contains posts.\r\rTBBlog is a Voyage root.\rThe singleton blog object is stored in a Voyage repository that can be attached to a memory or a Mongo backend.\r\rHow to reset the database:\r\r\tTBBlog reset.\r\tTBBlog createDemoPosts',				#stamp : 'LucFabresse 8/6/2018 16:03'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #TBBlog\r\tinstanceVariableNames: \'adminUser posts\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog\''			},			#name : #TBBlog,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBBlog,						#isMetaSide : false					},					#name : #adminUser,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBBlog,						#isMetaSide : false					},					#name : #posts,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBBlog class\r\tinstanceVariableNames: \'uniqueInstance\''				},				#name : #'TBBlog class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'TBBlog class',							#isMetaSide : true						},						#name : #uniqueInstance,						#parent : @34					}				],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBBlog,					#isMetaSide : false				},				#parent : @25,				#content : 'a TBBlog represents a blog that contains posts.\r\rTBBlog is a Voyage root.\rThe singleton blog object is stored in a Voyage repository that can be attached to a memory or a Mongo backend.\r\rHow to reset the database:\r\r\tTBBlog reset.\r\tTBBlog createDemoPosts',				#stamp : 'LucFabresse 8/6/2018 16:03'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:37:29.45758+02:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #administrator,			#protocol : #'as yet unclassified',			#sourceCode : 'administrator\r   ^ adminUser',			#stamp : 'StephaneDucasse 8/19/2018 21:37',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:37:34.38944+02:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #administrator,			#protocol : #'as yet unclassified',			#sourceCode : 'administrator\r   ^ adminUser',			#stamp : 'StephaneDucasse 8/19/2018 21:37',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #administrator,			#protocol : #accessing,			#sourceCode : 'administrator\r   ^ adminUser',			#stamp : 'StephaneDucasse 8/19/2018 21:37',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:39:43.267666+02:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBBlog class',				#isMetaSide : true			},			#name : #defaultAdminPassword,			#protocol : #'class initialization',			#sourceCode : 'defaultAdminPassword\r   ^ \'topsecret\'',			#stamp : 'StephaneDucasse 8/19/2018 21:39',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:39:48.440646+02:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBBlog class',				#isMetaSide : true			},			#name : #defaultAdminLogin,			#protocol : #'class initialization',			#sourceCode : 'defaultAdminLogin\r   ^ \'admin\'',			#stamp : 'StephaneDucasse 8/19/2018 21:39',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:40:19.812586+02:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #createAdministrator,			#protocol : #initialization,			#sourceCode : 'createAdministrator\r   ^ TBAdministrator login: self class defaultAdminLogin password: self class defaultAdminPassword',			#stamp : 'StephaneDucasse 8/19/2018 21:40',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:40:41.061013+02:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\tposts := OrderedCollection new',			#stamp : 'LucFabresse 3/18/2016 14:47',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r   super initialize.\r   posts := OrderedCollection new.\r   adminUser := self createAdministrator',			#stamp : 'StephaneDucasse 8/19/2018 21:40',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:46:05.11598+02:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'tryConnectionWithLogin:andPassword:',			#protocol : #login,			#sourceCode : 'tryConnectionWithLogin: login andPassword: password\r\t(login = \'admin\' and: [ password = \'topsecret\' ])\r\t\tifTrue: [ self goToAdministrationView ]\r\t\tifFalse: [ self loginErrorOccurred ]',			#stamp : 'StephaneDucasse 8/19/2018 21:28',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'tryConnectionWithLogin:andPassword:',			#protocol : #login,			#sourceCode : 'tryConnectionWithLogin: login andPassword: password\r   (login = self blog administrator login and: [ \r      (MD5 hashMessage: password) = self blog administrator password ])\r         ifTrue: [ self goToAdministrationView ]\r         ifFalse: [ self loginErrorOccurred ]',			#stamp : 'StephaneDucasse 8/19/2018 21:46',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:50:06.660642+02:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WASession',				#traitCompositionSource : '{}',				#definitionSource : 'WASession subclass: #TBSession\r\tinstanceVariableNames: \'currentAdmin\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBSession,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBSession,						#isMetaSide : false					},					#name : #currentAdmin,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBSession class\r\tinstanceVariableNames: \'\''				},				#name : #'TBSession class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBSession,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:50:40.415579+02:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #currentAdmin,			#protocol : #'as yet unclassified',			#sourceCode : 'currentAdmin\r    ^ currentAdmin',			#stamp : 'StephaneDucasse 8/19/2018 21:50',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:50:40.480724+02:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #currentAdmin,			#protocol : #'as yet unclassified',			#sourceCode : 'currentAdmin\r    ^ currentAdmin',			#stamp : 'StephaneDucasse 8/19/2018 21:50',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #currentAdmin,			#protocol : #accessing,			#sourceCode : 'currentAdmin\r    ^ currentAdmin',			#stamp : 'StephaneDucasse 8/19/2018 21:50',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:50:44.99118+02:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #'currentAdmin:',			#protocol : #accessing,			#sourceCode : 'currentAdmin: anObject\r    currentAdmin := anObject',			#stamp : 'StephaneDucasse 8/19/2018 21:50',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:50:49.665994+02:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #isLogged,			#protocol : #accessing,			#sourceCode : 'isLogged\r    ^ self currentAdmin notNil',			#stamp : 'StephaneDucasse 8/19/2018 21:50',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:51:14.561056+02:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBApplicationRootComponent class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r   "self initialize"\r   | app |\r   app := WAAdmin register: self asApplicationAt: \'TinyBlog\'.\r   app\r      addLibrary: JQDeploymentLibrary;\r      addLibrary: JQUiDeploymentLibrary;\r      addLibrary: TBSDeploymentLibrary',			#stamp : 'LucFabresse 8/6/2018 16:07',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBApplicationRootComponent class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r      "self initialize"\r      | app |\r      app := WAAdmin register: self asApplicationAt: \'TinyBlog\'.\r      app\r         preferenceAt: #sessionClass put: TBSession.\r      app\r         addLibrary: JQDeploymentLibrary;\r         addLibrary: JQUiDeploymentLibrary;\r         addLibrary: TBSDeploymentLibrary',			#stamp : 'StephaneDucasse 8/19/2018 21:51',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:51:50.490117+02:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'tryConnectionWithLogin:andPassword:',			#protocol : #login,			#sourceCode : 'tryConnectionWithLogin: login andPassword: password\r   (login = self blog administrator login and: [ \r      (MD5 hashMessage: password) = self blog administrator password ])\r         ifTrue: [ self goToAdministrationView ]\r         ifFalse: [ self loginErrorOccurred ]',			#stamp : 'StephaneDucasse 8/19/2018 21:46',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'tryConnectionWithLogin:andPassword:',			#protocol : #login,			#sourceCode : 'tryConnectionWithLogin: login andPassword: password\r   (login = self blog administrator login and: [ \r      (MD5 hashMessage: password) = self blog administrator password ])\r         ifTrue: [ \r            self session currentAdmin: self blog administrator.\r            self goToAdministrationView ]\r         ifFalse: [ self loginErrorOccurred ]',			#stamp : 'StephaneDucasse 8/19/2018 21:51',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:53:26.074002+02:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #rendering,			#sourceCode : 'renderButtonsOn: html\r\tself renderModalLoginButtonOn: html',			#stamp : 'StephaneDucasse 8/19/2018 20:46',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #rendering,			#sourceCode : 'renderButtonsOn: html\r    self session isLogged\r        ifTrue: [ self renderSimpleAdminButtonOn: html ]\r\t\t  ifFalse: [ self renderModalLoginButtonOn: html ]  ',			#stamp : 'StephaneDucasse 8/19/2018 21:53',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:53:57.864807+02:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #reset,			#protocol : #'as yet unclassified',			#sourceCode : 'reset\r   currentAdmin := nil.\r\tself requestContext redirectTo: self application url.\r\tself unregister.',			#stamp : 'StephaneDucasse 8/19/2018 21:53',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:53:57.943373+02:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #reset,			#protocol : #'as yet unclassified',			#sourceCode : 'reset\r   currentAdmin := nil.\r\tself requestContext redirectTo: self application url.\r\tself unregister.',			#stamp : 'StephaneDucasse 8/19/2018 21:53',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #reset,			#protocol : #accessing,			#sourceCode : 'reset\r   currentAdmin := nil.\r\tself requestContext redirectTo: self application url.\r\tself unregister.',			#stamp : 'StephaneDucasse 8/19/2018 21:53',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:54:03.178084+02:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WASession',				#traitCompositionSource : '{}',				#definitionSource : 'WASession subclass: #TBSession\r\tinstanceVariableNames: \'currentAdmin\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBSession,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBSession,						#isMetaSide : false					},					#name : #currentAdmin,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBSession class\r\tinstanceVariableNames: \'\''				},				#name : #'TBSession class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBSession,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		},		#protocol : #reste	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:54:13.454745+02:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #reset,			#protocol : #accessing,			#sourceCode : 'reset\r   currentAdmin := nil.\r\tself requestContext redirectTo: self application url.\r\tself unregister.',			#stamp : 'StephaneDucasse 8/19/2018 21:53',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #reset,			#protocol : #reset,			#sourceCode : 'reset\r   currentAdmin := nil.\r\tself requestContext redirectTo: self application url.\r\tself unregister.',			#stamp : 'StephaneDucasse 8/19/2018 21:53',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:54:16.707793+02:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WASession',				#traitCompositionSource : '{}',				#definitionSource : 'WASession subclass: #TBSession\r\tinstanceVariableNames: \'currentAdmin\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBSession,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBSession,						#isMetaSide : false					},					#name : #currentAdmin,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBSession class\r\tinstanceVariableNames: \'\''				},				#name : #'TBSession class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBSession,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		},		#protocol : #testing	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:54:19.96592+02:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #isLogged,			#protocol : #accessing,			#sourceCode : 'isLogged\r    ^ self currentAdmin notNil',			#stamp : 'StephaneDucasse 8/19/2018 21:50',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSession,				#isMetaSide : false			},			#name : #isLogged,			#protocol : #testing,			#sourceCode : 'isLogged\r    ^ self currentAdmin notNil',			#stamp : 'StephaneDucasse 8/19/2018 21:50',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:55:05.769792+02:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminHeaderComponent,				#isMetaSide : false			},			#name : #'renderDisconnectButtonOn:',			#protocol : #rendering,			#sourceCode : 'renderDisconnectButtonOn: html\r         html tbsNavbarButton\r\r             tbsPullRight;\r            callback: [ component goToPostListView ];\r            with: [\r               html text: \'Disconnect \'.\r               html tbsGlyphIcon iconLogout ]',			#stamp : 'StephaneDucasse 8/19/2018 13:28',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminHeaderComponent,				#isMetaSide : false			},			#name : #'renderDisconnectButtonOn:',			#protocol : #rendering,			#sourceCode : 'renderDisconnectButtonOn: html\r   html tbsNavbarButton \r      tbsPullRight; \r      callback: [ self session reset ];\r      with: [  \r         html text: \'Disconnect \'.\r         html tbsGlyphIcon iconLogout ]',			#stamp : 'StephaneDucasse 8/19/2018 21:55',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:55:32.789532+02:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminHeaderComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #rendering,			#sourceCode : 'renderButtonsOn: html\r         html form: [ self renderDisconnectButtonOn: html ]',			#stamp : 'StephaneDucasse 8/19/2018 13:26',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminHeaderComponent,				#isMetaSide : false			},			#name : #'renderButtonsOn:',			#protocol : #rendering,			#sourceCode : 'renderButtonsOn: html\r\thtml form: [ \r\t\tself renderDisconnectButtonOn: html.\r\t\tself renderPublicViewButtonOn: html ]',			#stamp : 'StephaneDucasse 8/19/2018 21:55',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T21:55:42.332582+02:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminHeaderComponent,				#isMetaSide : false			},			#name : #'renderPublicViewButtonOn:',			#protocol : #rendering,			#sourceCode : 'renderPublicViewButtonOn: html\r   self session isLogged ifTrue: [ \t\t \r      html tbsNavbarButton \r         tbsPullRight; \r         callback: [ component goToPostListView ];\r         with: [  \r            html tbsGlyphIcon iconEyeOpen.\r            html text: \' Public View\' ]]',			#stamp : 'StephaneDucasse 8/19/2018 21:55',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:00:48.423175+02:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'TinyBlog-StephaneDucasse.chap8_v2.mcz',		#repositoryDescription : '/Users/ducasse/Workspace/FirstCircle/MyBooks/Bk-Writing/TinyBlogTutorial/TinyBlogImages6/pharo-local/package-cache'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:01:05.997872+02:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'TinyBlog-StephaneDucasse.chap8_v2.mcz',		#repositoryDescription : 'http://smalltalkhub.com/mc/PharoMooc/TinyBlog/main/'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:01:33.018702+02:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter8:',			#protocol : #versions,			#sourceCode : 'versionChapter8: spec \r   <version: \'versionChapter8\' imports: #(\'0.1-baseline\')>\r\tspec for: #common do: [\r\t\tspec blessing: #stable.\r\t\tspec package: \'TinyBlog\' with: \'TinyBlog-LucFabresse.chap8_v1\'\r\t].',			#stamp : 'LucFabresse 8/6/2018 14:33',			#package : #ConfigurationOfTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter8:',			#protocol : #versions,			#sourceCode : 'versionChapter8: spec\r\t<version: \'versionChapter8\' imports: #(\'0.1-baseline\')>\r\tspec\r\t\tfor: #common\r\t\tdo: [ spec blessing: #stable.\r\t\t\tspec package: \'TinyBlog\' with: \'TinyBlog-StephaneDucasse.chap8_v2\' ]',			#stamp : 'StephaneDucasse 8/19/2018 22:01',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:01:47.05581+02:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'ConfigurationOfTinyBlog-StephaneDucasse.27',		#repositoryDescription : '/Users/ducasse/Workspace/FirstCircle/MyBooks/Bk-Writing/TinyBlogTutorial/TinyBlogImages6/pharo-local/package-cache'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:01:49.313166+02:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'ConfigurationOfTinyBlog-StephaneDucasse.27',		#repositoryDescription : 'http://smalltalkhub.com/mc/PharoMooc/TinyBlog/main/'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:35:20.060588+02:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBSMagritteReport',				#traitCompositionSource : '{}',				#definitionSource : 'TBSMagritteReport subclass: #TBPostsReport\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBPostsReport,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostsReport class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostsReport class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostsReport,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:36:50.357694+02:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'as yet unclassified',			#sourceCode : 'from: aBlog\r   | allBlogs |\r   allBlogs := aBlog allBlogPosts.\r   ^ self rows: allBlogs description: allBlogs anyOne magritteDescription',			#stamp : 'StephaneDucasse 8/19/2018 22:36',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:36:50.412648+02:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'as yet unclassified',			#sourceCode : 'from: aBlog\r   | allBlogs |\r   allBlogs := aBlog allBlogPosts.\r   ^ self rows: allBlogs description: allBlogs anyOne magritteDescription',			#stamp : 'StephaneDucasse 8/19/2018 22:36',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r   | allBlogs |\r   allBlogs := aBlog allBlogPosts.\r   ^ self rows: allBlogs description: allBlogs anyOne magritteDescription',			#stamp : 'StephaneDucasse 8/19/2018 22:36',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:38:14.763684+02:00' ],		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBScreenComponent',				#traitCompositionSource : '{}',				#definitionSource : 'TBScreenComponent subclass: #TBAdminComponent\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBAdminComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBAdminComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBAdminComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBAdminComponent,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBScreenComponent',				#traitCompositionSource : '{}',				#definitionSource : 'TBScreenComponent subclass: #TBAdminComponent\r\tinstanceVariableNames: \'report\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBAdminComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBAdminComponent,						#isMetaSide : false					},					#name : #report,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBAdminComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBAdminComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBAdminComponent,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:38:14.973947+02:00' ],		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #report,			#protocol : #'as yet unclassified',			#sourceCode : 'TBScreenComponent subclass: #TBAdminComponent\r\tinstanceVariableNames: \'report\'\r\tclassVariableNames: \'\'\r\tpackage: \'TinyBlog-Components\'',			#stamp : 'StephaneDucasse 8/19/2018 22:38',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:38:15.014452+02:00' ],		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #report,			#protocol : #'as yet unclassified',			#sourceCode : 'TBScreenComponent subclass: #TBAdminComponent\r\tinstanceVariableNames: \'report\'\r\tclassVariableNames: \'\'\r\tpackage: \'TinyBlog-Components\'',			#stamp : 'StephaneDucasse 8/19/2018 22:38',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #report,			#protocol : #accessing,			#sourceCode : 'TBScreenComponent subclass: #TBAdminComponent\r\tinstanceVariableNames: \'report\'\r\tclassVariableNames: \'\'\r\tpackage: \'TinyBlog-Components\'',			#stamp : 'StephaneDucasse 8/19/2018 22:38',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:38:56.500247+02:00' ],		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #'report:',			#protocol : #accessing,			#sourceCode : 'report: aReport\r   report := aReport',			#stamp : 'StephaneDucasse 8/19/2018 22:38',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:39:37.374167+02:00' ],		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #children,			#protocol : #accessing,			#sourceCode : 'children\r   ^ super children copyWith: self report',			#stamp : 'StephaneDucasse 8/19/2018 22:39',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:40:12.543288+02:00' ],		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r   super initialize.\r   self report: (TBPostsReport from: self blog)',			#stamp : 'StephaneDucasse 8/19/2018 22:40',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:40:12.597336+02:00' ],		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r   super initialize.\r   self report: (TBPostsReport from: self blog)',			#stamp : 'StephaneDucasse 8/19/2018 22:40',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r   super initialize.\r   self report: (TBPostsReport from: self blog)',			#stamp : 'StephaneDucasse 8/19/2018 22:40',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:40:33.03693+02:00' ],		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tsuper renderContentOn: html.\r\thtml\r\t\ttbsContainer: [ html heading: \'Blog Admin\'.\r\t\t\thtml horizontalRule ] ',			#stamp : 'StephaneDucasse 8/19/2018 12:11',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBAdminComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r   super renderContentOn: html.\r   html tbsContainer: [\r      html heading: \'Blog Admin\'.\r      html horizontalRule.\r      html render: self report ]',			#stamp : 'StephaneDucasse 8/19/2018 22:40',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:47:25.634079+02:00' ],		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'filteredDescriptionsFrom:',			#protocol : #'instance creation',			#sourceCode : 'filteredDescriptionsFrom: aBlogPost\r   ^ aBlogPost magritteDescription select: [ :each | #(title category date) includes: each accessor selector ]',			#stamp : 'StephaneDucasse 8/19/2018 22:47',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:47:57.259015+02:00' ],		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r   | allBlogs |\r   allBlogs := aBlog allBlogPosts.\r   ^ self rows: allBlogs description: allBlogs anyOne magritteDescription',			#stamp : 'StephaneDucasse 8/19/2018 22:36',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r   | allBlogs |\r   allBlogs := aBlog allBlogPosts.\r   ^ self rows: allBlogs description: (self filteredDescriptionsFrom: allBlogs anyOne)',			#stamp : 'StephaneDucasse 8/19/2018 22:47',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:48:24.303636+02:00' ],		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'filteredDescriptionsFrom:',			#protocol : #'instance creation',			#sourceCode : 'filteredDescriptionsFrom: aBlogPost\r   ^ aBlogPost magritteDescription select: [ :each | #(title category date) includes: each accessor selector ]',			#stamp : 'StephaneDucasse 8/19/2018 22:47',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'filteredDescriptionsFrom:',			#protocol : #'instance creation',			#sourceCode : 'filteredDescriptionsFrom: aBlogPost\r\t"Filter only some descriptions for the report columns."\r\t^ aBlogPost magritteDescription\r\t\tselect: [ :each | #(title category date) includes: each accessor selector ]',			#stamp : 'StephaneDucasse 8/19/2018 22:48',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:51:26.39646+02:00' ],		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBSMagritteReport',				#traitCompositionSource : '{}',				#definitionSource : 'TBSMagritteReport subclass: #TBPostsReport\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBPostsReport,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostsReport class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostsReport class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostsReport,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBSMagritteReport',				#traitCompositionSource : '{}',				#definitionSource : 'TBSMagritteReport subclass: #TBPostsReport\r\tinstanceVariableNames: \'blog\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBPostsReport,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostsReport,						#isMetaSide : false					},					#name : #blog,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostsReport class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostsReport class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostsReport,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:51:31.038273+02:00' ],		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #blog,			#protocol : #'as yet unclassified',			#sourceCode : 'blog\r   ^ blog',			#stamp : 'StephaneDucasse 8/19/2018 22:51',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:51:31.089886+02:00' ],		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #blog,			#protocol : #'as yet unclassified',			#sourceCode : 'blog\r   ^ blog',			#stamp : 'StephaneDucasse 8/19/2018 22:51',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #blog,			#protocol : #accessing,			#sourceCode : 'blog\r   ^ blog',			#stamp : 'StephaneDucasse 8/19/2018 22:51',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:51:36.848396+02:00' ],		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'blog:',			#protocol : #accessing,			#sourceCode : 'blog: aTBBlog\r   blog := aTBBlog',			#stamp : 'StephaneDucasse 8/19/2018 22:51',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-19T22:52:00.733246+02:00' ],		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r   | allBlogs |\r   allBlogs := aBlog allBlogPosts.\r   ^ self rows: allBlogs description: (self filteredDescriptionsFrom: allBlogs anyOne)',			#stamp : 'StephaneDucasse 8/19/2018 22:47',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r    | report blogPosts |\r    blogPosts := aBlog allBlogPosts.\r    report := self rows: blogPosts description: (self filteredDescriptionsFrom: blogPosts anyOne).\r    report blog: aBlog.\r    report addColumn: (MACommandColumn new\r        addCommandOn: report  selector: #viewPost: text: \'View\'; yourself;\r        addCommandOn: report selector: #editPost: text: \'Edit\'; yourself;\r        addCommandOn: report selector: #deletePost: text: \'Delete\'; yourself).\r     ^ report',			#stamp : 'StephaneDucasse 8/19/2018 22:52',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T09:51:17.298839+02:00' ],		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tsuper renderContentOn: html.\r\thtml tbsContainer: [\r\t\thtml tbsRow\r\t\t\tshowGrid;\r\t\t\twith: [ self renderCategoryColumnOn: html.\r                  self renderPostColumnOn: html ] ]',			#stamp : 'Luc 8/10/2018 14:48',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r         html tbsGlyphIcon iconPencil.\r         html anchor\r            callback: [ self addPost ];\r            with: \'Add post\'.\r         super renderContentOn: html',			#stamp : 'StephaneDucasse 8/20/2018 09:51',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T13:45:25.986832+02:00' ],		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r         html tbsGlyphIcon iconPencil.\r         html anchor\r            callback: [ self addPost ];\r            with: \'Add post\'.\r         super renderContentOn: html',			#stamp : 'StephaneDucasse 8/20/2018 09:51',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tsuper renderContentOn: html.\r\thtml tbsContainer: [\r\t\thtml tbsRow\r\t\t\tshowGrid;\r\t\t\twith: [ self renderCategoryColumnOn: html.\r                  self renderPostColumnOn: html ] ]',			#stamp : 'Luc 8/10/2018 14:48',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T13:45:39.466362+02:00' ],		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderContentOn: html\r\thtml tbsGlyphIcon iconPencil.\r\thtml anchor\r\t\tcallback: [ self addPost ];\r\t\twith: \'Add post\'.\r\tsuper renderContentOn: html',			#stamp : 'StephaneDucasse 8/20/2018 13:45',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T13:45:39.519879+02:00' ],		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderContentOn: html\r\thtml tbsGlyphIcon iconPencil.\r\thtml anchor\r\t\tcallback: [ self addPost ];\r\t\twith: \'Add post\'.\r\tsuper renderContentOn: html',			#stamp : 'StephaneDucasse 8/20/2018 13:45',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\thtml tbsGlyphIcon iconPencil.\r\thtml anchor\r\t\tcallback: [ self addPost ];\r\t\twith: \'Add post\'.\r\tsuper renderContentOn: html',			#stamp : 'StephaneDucasse 8/20/2018 13:45',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:10:34.635282+02:00' ],		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r    | report blogPosts |\r    blogPosts := aBlog allBlogPosts.\r    report := self rows: blogPosts description: (self filteredDescriptionsFrom: blogPosts anyOne).\r    report blog: aBlog.\r    report addColumn: (MACommandColumn new\r        addCommandOn: report  selector: #viewPost: text: \'View\'; yourself;\r        addCommandOn: report selector: #editPost: text: \'Edit\'; yourself;\r        addCommandOn: report selector: #deletePost: text: \'Delete\'; yourself).\r     ^ report',			#stamp : 'StephaneDucasse 8/19/2018 22:52',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r\t| report blogPosts |\r\tblogPosts := aBlog allBlogPosts.\r\treport := self\r\t\trows: blogPosts\r\t\tdescription: (blogPosts anyOne).\r\treport blog: aBlog.\r\treport\r\t\taddColumn:\r\t\t\t(MACommandColumn new\r\t\t\t\taddCommandOn: report selector: #viewPost: text: \'View\';\r\t\t\t\tyourself;\r\t\t\t\taddCommandOn: report selector: #editPost: text: \'Edit\';\r\t\t\t\tyourself;\r\t\t\t\taddCommandOn: report selector: #deletePost: text: \'Delete\';\r\t\t\t\tyourself).\r\t^ report',			#stamp : 'StephaneDucasse 8/20/2018 14:10',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:11:33.221672+02:00' ],		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r\t| report blogPosts |\r\tblogPosts := aBlog allBlogPosts.\r\treport := self\r\t\trows: blogPosts\r\t\tdescription: (blogPosts anyOne).\r\treport blog: aBlog.\r\treport\r\t\taddColumn:\r\t\t\t(MACommandColumn new\r\t\t\t\taddCommandOn: report selector: #viewPost: text: \'View\';\r\t\t\t\tyourself;\r\t\t\t\taddCommandOn: report selector: #editPost: text: \'Edit\';\r\t\t\t\tyourself;\r\t\t\t\taddCommandOn: report selector: #deletePost: text: \'Delete\';\r\t\t\t\tyourself).\r\t^ report',			#stamp : 'StephaneDucasse 8/20/2018 14:10',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r\t| report blogPosts |\r\tblogPosts := aBlog allBlogPosts.\r\treport := self rows: blogPosts description: blogPosts anyOne magritteDescription.\r\treport blog: aBlog.\r\treport\r\t\taddColumn:\r\t\t\t(MACommandColumn new\r\t\t\t\taddCommandOn: report selector: #viewPost: text: \'View\';\r\t\t\t\tyourself;\r\t\t\t\taddCommandOn: report selector: #editPost: text: \'Edit\';\r\t\t\t\tyourself;\r\t\t\t\taddCommandOn: report selector: #deletePost: text: \'Delete\';\r\t\t\t\tyourself).\r\t^ report',			#stamp : 'StephaneDucasse 8/20/2018 14:11',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:12:39.042296+02:00' ],		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r\t| report blogPosts |\r\tblogPosts := aBlog allBlogPosts.\r\treport := self rows: blogPosts description: blogPosts anyOne magritteDescription.\r\treport blog: aBlog.\r\treport\r\t\taddColumn:\r\t\t\t(MACommandColumn new\r\t\t\t\taddCommandOn: report selector: #viewPost: text: \'View\';\r\t\t\t\tyourself;\r\t\t\t\taddCommandOn: report selector: #editPost: text: \'Edit\';\r\t\t\t\tyourself;\r\t\t\t\taddCommandOn: report selector: #deletePost: text: \'Delete\';\r\t\t\t\tyourself).\r\t^ report',			#stamp : 'StephaneDucasse 8/20/2018 14:11',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r         | allBlogs |\r         allBlogs := aBlog allBlogPosts.\r         ^ self rows: allBlogs description: allBlogs anyOne\r           magritteDescription',			#stamp : 'StephaneDucasse 8/20/2018 14:12',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:13:37.049109+02:00' ],		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ]	},	#content : EpProtocolAddition {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'TBPost class\r\tinstanceVariableNames: \'\''			},			#name : #'TBPost class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Object',					#traitCompositionSource : '{}',					#definitionSource : 'Object subclass: #TBPost\r\tinstanceVariableNames: \'category date text title visible\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog\''				},				#name : #TBPost,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPost,							#isMetaSide : false						},						#name : #category,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPost,							#isMetaSide : false						},						#name : #date,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPost,							#isMetaSide : false						},						#name : #text,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPost,							#isMetaSide : false						},						#name : #title,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPost,							#isMetaSide : false						},						#name : #visible,						#parent : @12					}				],				#metaClass : @7,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #TBPost,						#isMetaSide : false					},					#parent : @12,					#content : 'A  TBPost is a blog post.\r\r',					#stamp : 'StephaneDucasse 12/4/2015 14:51'				},				#classVariables : OrderedCollection [ ],				#category : #TinyBlog,				#package : #TinyBlog,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #description	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:13:42.528894+02:00' ],		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #descriptionTitle,			#protocol : #description,			#sourceCode : 'descriptionTitle\r         <magritteDescription>\r         ^ MAStringDescription new\r            accessor: #title;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:13:47.464404+02:00' ],		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #descriptionText,			#protocol : #description,			#sourceCode : 'descriptionText\r         <magritteDescription>\r         ^ MAMemoDescription new\r            accessor: #text;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:13:54.009051+02:00' ],		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #descriptionCategory,			#protocol : #description,			#sourceCode : 'descriptionCategory\r         <magritteDescription>\r         ^ MAStringDescription new\r            accessor: #category;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:14:00.053865+02:00' ],		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #descriptionDate,			#protocol : #description,			#sourceCode : 'descriptionDate\r         <magritteDescription>\r         ^ MADateDescription new\r            accessor: #date;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:14',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:14:06.176357+02:00' ],		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #descriptionVisible,			#protocol : #description,			#sourceCode : 'descriptionVisible\r         <magritteDescription>\r         ^ MABooleanDescription new\r            accessor: #visible;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:14',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:15:12.244626+02:00' ],		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ]	},	#content : EpUnknownRefactoring {		#printString : 'a RBSwapMethodRefactoring'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ],		#time : DateAndTime [ '2018-08-20T14:15:12.259122+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionCategory,			#protocol : #description,			#sourceCode : 'descriptionCategory\r         <magritteDescription>\r         ^ MAStringDescription new\r            accessor: #category;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:15',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ],		#time : DateAndTime [ '2018-08-20T14:15:12.260509+02:00' ],		#trigger : OmReference [ '121' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #descriptionCategory,			#protocol : #description,			#sourceCode : 'descriptionCategory\r         <magritteDescription>\r         ^ MAStringDescription new\r            accessor: #category;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:15:18.032803+02:00' ],		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ]	},	#content : EpUnknownRefactoring {		#printString : 'a RBSwapMethodRefactoring'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ],		#time : DateAndTime [ '2018-08-20T14:15:18.045188+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionDate,			#protocol : #description,			#sourceCode : 'descriptionDate\r         <magritteDescription>\r         ^ MADateDescription new\r            accessor: #date;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:15',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ],		#time : DateAndTime [ '2018-08-20T14:15:18.04639+02:00' ],		#trigger : OmReference [ '124' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #descriptionDate,			#protocol : #description,			#sourceCode : 'descriptionDate\r         <magritteDescription>\r         ^ MADateDescription new\r            accessor: #date;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:14',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:15:30.690636+02:00' ],		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ]	},	#content : EpUnknownRefactoring {		#printString : 'a RBSwapMethodRefactoring'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ],		#time : DateAndTime [ '2018-08-20T14:15:30.705872+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionText,			#protocol : #description,			#sourceCode : 'descriptionText\r         <magritteDescription>\r         ^ MAMemoDescription new\r            accessor: #text;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:15',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ],		#time : DateAndTime [ '2018-08-20T14:15:30.707208+02:00' ],		#trigger : OmReference [ '127' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #descriptionText,			#protocol : #description,			#sourceCode : 'descriptionText\r         <magritteDescription>\r         ^ MAMemoDescription new\r            accessor: #text;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:15:44.954329+02:00' ],		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ]	},	#content : EpUnknownRefactoring {		#printString : 'a RBSwapMethodRefactoring'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ],		#time : DateAndTime [ '2018-08-20T14:15:44.969379+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionTitle,			#protocol : #description,			#sourceCode : 'descriptionTitle\r         <magritteDescription>\r         ^ MAStringDescription new\r            accessor: #title;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:15',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ],		#time : DateAndTime [ '2018-08-20T14:15:44.970818+02:00' ],		#trigger : OmReference [ '130' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #descriptionTitle,			#protocol : #description,			#sourceCode : 'descriptionTitle\r         <magritteDescription>\r         ^ MAStringDescription new\r            accessor: #title;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:15:52.314345+02:00' ],		#prior : OmReference [ '132' ],		#self : OmReference [ '133' ]	},	#content : EpUnknownRefactoring {		#printString : 'a RBSwapMethodRefactoring'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '133' ],		#self : OmReference [ '134' ],		#time : DateAndTime [ '2018-08-20T14:15:52.329418+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionVisible,			#protocol : #description,			#sourceCode : 'descriptionVisible\r         <magritteDescription>\r         ^ MABooleanDescription new\r            accessor: #visible;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:15',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '134' ],		#self : OmReference [ '135' ],		#time : DateAndTime [ '2018-08-20T14:15:52.330691+02:00' ],		#trigger : OmReference [ '133' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #descriptionVisible,			#protocol : #description,			#sourceCode : 'descriptionVisible\r         <magritteDescription>\r         ^ MABooleanDescription new\r            accessor: #visible;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:14',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:17:57.514178+02:00' ],		#prior : OmReference [ '135' ],		#self : OmReference [ '136' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r         | allBlogs |\r         allBlogs := aBlog allBlogPosts.\r         ^ self rows: allBlogs description: allBlogs anyOne\r           magritteDescription',			#stamp : 'StephaneDucasse 8/20/2018 14:12',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r         | allBlogs |\r         allBlogs := aBlog allBlogPosts.\r         ^ self rows: allBlogs description: (self\r           filteredDescriptionsFrom: allBlogs anyOne)',			#stamp : 'StephaneDucasse 8/20/2018 14:17',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:18:53.747426+02:00' ],		#prior : OmReference [ '136' ],		#self : OmReference [ '137' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionTitle,			#protocol : #description,			#sourceCode : 'descriptionTitle\r         <magritteDescription>\r         ^ MAStringDescription new\r            accessor: #title;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:15',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionTitle,			#protocol : #description,			#sourceCode : 'descriptionTitle\r         <magritteDescription>\r         ^ MAStringDescription new\r            label: \'Title\';\r            priority: 100;\r            accessor: #title;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:18',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:18:58.421064+02:00' ],		#prior : OmReference [ '137' ],		#self : OmReference [ '138' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionText,			#protocol : #description,			#sourceCode : 'descriptionText\r         <magritteDescription>\r         ^ MAMemoDescription new\r            accessor: #text;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:15',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionText,			#protocol : #description,			#sourceCode : 'descriptionText\r         <magritteDescription>\r         ^ MAMemoDescription new\r            label: \'Text\';\r            priority: 200;\r            accessor: #text;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:18',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:19:06.112852+02:00' ],		#prior : OmReference [ '138' ],		#self : OmReference [ '139' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionCategory,			#protocol : #description,			#sourceCode : 'descriptionCategory\r         <magritteDescription>\r         ^ MAStringDescription new\r            accessor: #category;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:15',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionCategory,			#protocol : #description,			#sourceCode : 'descriptionCategory\r   <magritteDescription>\r   ^ MAStringDescription new\r      label: \'Category\';\r      priority: 300;\r      accessor: #category;\r      yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:19',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:19:11.425607+02:00' ],		#prior : OmReference [ '139' ],		#self : OmReference [ '140' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionDate,			#protocol : #description,			#sourceCode : 'descriptionDate\r         <magritteDescription>\r         ^ MADateDescription new\r            accessor: #date;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:15',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionDate,			#protocol : #description,			#sourceCode : 'descriptionDate\r   <magritteDescription>\r   ^ MADateDescription new\r      label: \'Date\';\r      priority: 400;\r      accessor: #date;\r      beRequired;\r      yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:19',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:19:16.880654+02:00' ],		#prior : OmReference [ '140' ],		#self : OmReference [ '141' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionVisible,			#protocol : #description,			#sourceCode : 'descriptionVisible\r         <magritteDescription>\r         ^ MABooleanDescription new\r            accessor: #visible;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:15',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionVisible,			#protocol : #description,			#sourceCode : 'descriptionVisible\r   <magritteDescription>\r   ^ MABooleanDescription new\r      label: \'Visible\';\r      priority: 500;\r      accessor: #visible;\r      beRequired;\r      yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:19',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:27:42.733156+02:00' ],		#prior : OmReference [ '141' ],		#self : OmReference [ '142' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r         | allBlogs |\r         allBlogs := aBlog allBlogPosts.\r         ^ self rows: allBlogs description: (self\r           filteredDescriptionsFrom: allBlogs anyOne)',			#stamp : 'StephaneDucasse 8/20/2018 14:17',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r          | report blogPosts |\r          blogPosts := aBlog allBlogPosts.\r          report := self rows: blogPosts description: (self\r           filteredDescriptionsFrom: blogPosts anyOne).\r          report blog: aBlog.\r          report addColumn: (MACommandColumn new\r              addCommandOn: report selector: #viewPost: text: \'View\';\r           yourself;\r              addCommandOn: report selector: #editPost: text: \'Edit\';\r           yourself;\r              addCommandOn: report selector: #deletePost: text: \'Delete\';\r           yourself).\r^ report',			#stamp : 'StephaneDucasse 8/20/2018 14:27',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:28:01.394975+02:00' ],		#prior : OmReference [ '142' ],		#self : OmReference [ '143' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBSMagritteReport',				#traitCompositionSource : '{}',				#definitionSource : 'TBSMagritteReport subclass: #TBPostsReport\r\tinstanceVariableNames: \'blog\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBPostsReport,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostsReport,						#isMetaSide : false					},					#name : #blog,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostsReport class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostsReport class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostsReport,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		},		#protocol : #operations	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:28:36.678357+02:00' ],		#prior : OmReference [ '143' ],		#self : OmReference [ '144' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #addCommands,			#protocol : #operations,			#sourceCode : 'addCommands\r\tself addColumn: (MACommandColumn new\r\t\t\t\taddCommandOn: self selector: #viewPost: text: \'View\';\r\t\t\t\tyourself;\r\t\t\t\taddCommandOn: self selector: #editPost: text: \'Edit\';\r\t\t\t\tyourself;\r\t\t\t\taddCommandOn: self \r\t\t\t\t\tselector: #deletePost:\r\t\t\t\t\ttext: \'Delete\';\r\t\t\t\tyourself).',			#stamp : 'StephaneDucasse 8/20/2018 14:28',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T14:28:53.504621+02:00' ],		#prior : OmReference [ '144' ],		#self : OmReference [ '145' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r          | report blogPosts |\r          blogPosts := aBlog allBlogPosts.\r          report := self rows: blogPosts description: (self\r           filteredDescriptionsFrom: blogPosts anyOne).\r          report blog: aBlog.\r          report addColumn: (MACommandColumn new\r              addCommandOn: report selector: #viewPost: text: \'View\';\r           yourself;\r              addCommandOn: report selector: #editPost: text: \'Edit\';\r           yourself;\r              addCommandOn: report selector: #deletePost: text: \'Delete\';\r           yourself).\r^ report',			#stamp : 'StephaneDucasse 8/20/2018 14:27',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostsReport class',				#isMetaSide : true			},			#name : #'from:',			#protocol : #'instance creation',			#sourceCode : 'from: aBlog\r\t| report blogPosts |\r\tblogPosts := aBlog allBlogPosts.\r\treport := self\r\t\trows: blogPosts\r\t\tdescription: (self filteredDescriptionsFrom: blogPosts anyOne).\r\treport blog: aBlog.\r\treport addCommands.\r\t^ report',			#stamp : 'StephaneDucasse 8/20/2018 14:28',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T17:38:55.798754+02:00' ],		#prior : OmReference [ '145' ],		#self : OmReference [ '146' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'CollectionGroupedByOrderTest-pf.2'		]	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '146' ],		#self : OmReference [ '147' ],		#time : DateAndTime [ '2018-08-20T17:38:56.127853+02:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #CollectionGroupedByOrderTest,		#affectedPackageName : #CollectionGroupedByOrderTest	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '147' ],		#self : OmReference [ '148' ],		#time : DateAndTime [ '2018-08-20T17:38:56.251113+02:00' ],		#trigger : OmReference [ '146' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #CollectionGroupedByOrderTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'CollectionGroupedByOrderTest\''			},			#name : #CollectionGroupedByOrderTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CollectionGroupedByOrderTest class\r\tinstanceVariableNames: \'\''				},				#name : #'CollectionGroupedByOrderTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CollectionGroupedByOrderTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #CollectionGroupedByOrderTest,			#package : #CollectionGroupedByOrderTest,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '148' ],		#self : OmReference [ '149' ],		#time : DateAndTime [ '2018-08-20T17:38:56.50574+02:00' ],		#trigger : OmReference [ '146' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CollectionGroupedByOrderTest,				#isMetaSide : false			},			#name : #testGroupedByGroupsOrderSimple,			#protocol : #tests,			#sourceCode : 'testGroupedByGroupsOrderSimple\r\t| dataCollection grouped keys |\r\t"test of preserving groups order according to source collection order"\r\tdataCollection := OrderedCollection new\r\t\tadd: #(\'ZZZ\' \'1\');\r\t\tadd: #(\'ZZZ\' \'2\');\r\t\tadd: #(\'ZZZ\' \'3\');\r\t\tadd: #(\'SSS\' \'4\');\r\t\tadd: #(\'SSS\' \'5\');\r\t\tadd: #(\'SSS\' \'6\');\r\t\tadd: #(\'BFLM\' \'X\');\r\t\tadd: #(\'AAA\' \'1\');\r\t\tadd: #(\'AAA\' \'2\');\r\t\tyourself.\r\t\r\tgrouped := dataCollection groupedBy: [ :arrItem | arrItem at: 1 ].\r\tkeys := grouped keys.\r\tself assert: (keys at: 1) equals: \'ZZZ\'.\r\tself assert: (keys at: 2) equals: \'SSS\'.\r\tself assert: (keys at: 3) equals: \'BFLM\'.\r\tself assert: (keys at: 4) equals: \'AAA\'.',			#stamp : 'pf 8/16/2018 20:30',			#package : #CollectionGroupedByOrderTest		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#prior : OmReference [ '149' ],		#self : OmReference [ '150' ],		#time : DateAndTime [ '2018-08-20T17:38:56.507819+02:00' ],		#trigger : OmReference [ '146' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CollectionGroupedByOrderTest,				#isMetaSide : false			},			#name : #testGroupedByGroupsOrderWithSortedCollectionOfDates,			#protocol : #tests,			#sourceCode : 'testGroupedByGroupsOrderWithSortedCollectionOfDates\r\t| dataCollection grouped keys |\r\t"data collection full of Date instances is sorted ascending"\r\tdataCollection := OrderedCollection new.\r\t0 to: 10 do: [ :i | 0 to: 5 do: [ :j | dataCollection add: (Date year: 2000 month: 1 day: 1) + i years + j weeks ] ].\r\t\r\t"group dates collection by year"\r\tgrouped := dataCollection groupedBy: [ :dateItem | dateItem year ].\r\r\t"test if groups (Years) order is preserved after groupedBy"\t\r\tkeys := grouped keys.\r\t1 to: grouped size do: [ :i |\r\t\tself assert: (keys at: i) equals: 2000 + i - 1.\r\t\t].\r',			#stamp : 'pf 8/16/2018 20:24',			#package : #CollectionGroupedByOrderTest		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T19:13:02.304311+02:00' ],		#prior : OmReference [ '150' ],		#self : OmReference [ '151' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'renderAddPostForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderAddPostForm: aPost\r    ^ aPost asComponent\r        addDecoration: (TBSMagritteFormDecoration buttons: { #save -> \'Add post\' .  #cancel -> \'Cancel\'});\r        yourself',			#stamp : 'StephaneDucasse 8/20/2018 19:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T19:13:02.378107+02:00' ],		#prior : OmReference [ '151' ],		#self : OmReference [ '152' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'renderAddPostForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderAddPostForm: aPost\r    ^ aPost asComponent\r        addDecoration: (TBSMagritteFormDecoration buttons: { #save -> \'Add post\' .  #cancel -> \'Cancel\'});\r        yourself',			#stamp : 'StephaneDucasse 8/20/2018 19:13',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'renderAddPostForm:',			#protocol : #rendering,			#sourceCode : 'renderAddPostForm: aPost\r    ^ aPost asComponent\r        addDecoration: (TBSMagritteFormDecoration buttons: { #save -> \'Add post\' .  #cancel -> \'Cancel\'});\r        yourself',			#stamp : 'StephaneDucasse 8/20/2018 19:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T19:13:09.024315+02:00' ],		#prior : OmReference [ '152' ],		#self : OmReference [ '153' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #addPost,			#protocol : #rendering,			#sourceCode : 'addPost\r    | post |\r    post := self call: (self renderAddPostForm: TBPost new).\r    post ifNotNil: [ blog writeBlogPost: post ]',			#stamp : 'StephaneDucasse 8/20/2018 19:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:30:00.785641+02:00' ],		#prior : OmReference [ '153' ],		#self : OmReference [ '154' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'renderViewPostForm:',			#protocol : #rendering,			#sourceCode : 'renderViewPostForm: aPost\r   ^ aPost asComponent addDecoration: (\r      TBSMagritteFormDecoration buttons: { #cancel -> \'Back\' });\r      yourself',			#stamp : 'StephaneDucasse 8/20/2018 20:30',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:30:06.288099+02:00' ],		#prior : OmReference [ '154' ],		#self : OmReference [ '155' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'viewPost:',			#protocol : #rendering,			#sourceCode : 'viewPost: aPost\r   self call: (self renderViewPostForm: aPost)',			#stamp : 'StephaneDucasse 8/20/2018 20:30',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:30:14.326455+02:00' ],		#prior : OmReference [ '155' ],		#self : OmReference [ '156' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'renderEditPostForm:',			#protocol : #rendering,			#sourceCode : 'renderEditPostForm: aPost\r   ^ aPost asComponent addDecoration: (\r      TBSMagritteFormDecoration buttons: {\r         #save -> \'Save post\'.\r         #cancel -> \'Cancel\'});\r      yourself',			#stamp : 'StephaneDucasse 8/20/2018 20:30',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:30:27.368121+02:00' ],		#prior : OmReference [ '156' ],		#self : OmReference [ '157' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'editPost:',			#protocol : #rendering,			#sourceCode : 'editPost: aPost\r   \r           | post |\r          post := self call: (self renderEditPostForm: aPost).\r          post ifNotNil: [ blog save ]',			#stamp : 'StephaneDucasse 8/20/2018 20:30',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:34:54.573982+02:00' ],		#prior : OmReference [ '157' ],		#self : OmReference [ '158' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'renderViewPostForm:',			#protocol : #rendering,			#sourceCode : 'renderViewPostForm: aPost\r   ^ aPost asComponent addDecoration: (\r      TBSMagritteFormDecoration buttons: { #cancel -> \'Back\' });\r      yourself',			#stamp : 'StephaneDucasse 8/20/2018 20:30',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'renderViewPostForm:',			#protocol : #rendering,			#sourceCode : 'renderViewPostForm: aPost\r\t^ aPost asComponent\r\t\taddDecoration:\r\t\t\t(TBSMagritteFormDecoration buttons: {(#cancel -> \'Back\')});\r\t\t\t   readonly: true;\r\t\tyourself',			#stamp : 'StephaneDucasse 8/20/2018 20:34',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:38:28.221901+02:00' ],		#prior : OmReference [ '158' ],		#self : OmReference [ '159' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MAContainerComponent,				#isMetaSide : false			},			#name : #'renderEditPostForm:',			#protocol : #actions,			#sourceCode : 'renderEditPostForm: aPost\r   ^ aPost asComponent addDecoration: (\r      TBSMagritteFormDecoration buttons: {\r         #save -> \'Save post\'.\r         #cancel -> \'Cancel\'});\r      yourself',			#stamp : 'StephaneDucasse 8/20/2018 20:38',			#package : #Magritte-Seaside		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:38:47.562397+02:00' ],		#prior : OmReference [ '159' ],		#self : OmReference [ '160' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'editPost:',			#protocol : #rendering,			#sourceCode : 'editPost: aPost\r   \r           | post |\r          post := self call: (self renderEditPostForm: aPost).\r          post ifNotNil: [ blog save ]',			#stamp : 'StephaneDucasse 8/20/2018 20:30',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'editPost:',			#protocol : #rendering,			#sourceCode : 'editPost: aPost\r   | post |\r   post := self call: (self renderEditPostForm: aPost).\r   post ifNotNil: [ blog save ]',			#stamp : 'StephaneDucasse 8/20/2018 20:38',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:42:51.639481+02:00' ],		#prior : OmReference [ '160' ],		#self : OmReference [ '161' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'deletePost:',			#protocol : #'as yet unclassified',			#sourceCode : 'deletePost: aPost\r    (self confirm: \'Do you want remove this post ?\')\r        ifTrue: [ blog removeBlogPost: aPost ]',			#stamp : 'StephaneDucasse 8/20/2018 20:42',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:43:00.026693+02:00' ],		#prior : OmReference [ '161' ],		#self : OmReference [ '162' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBSMagritteReport',				#traitCompositionSource : '{}',				#definitionSource : 'TBSMagritteReport subclass: #TBPostsReport\r\tinstanceVariableNames: \'blog\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBPostsReport,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostsReport,						#isMetaSide : false					},					#name : #blog,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostsReport class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostsReport class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostsReport,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		},		#protocol : #crud	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:43:04.490932+02:00' ],		#prior : OmReference [ '162' ],		#self : OmReference [ '163' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'deletePost:',			#protocol : #'as yet unclassified',			#sourceCode : 'deletePost: aPost\r    (self confirm: \'Do you want remove this post ?\')\r        ifTrue: [ blog removeBlogPost: aPost ]',			#stamp : 'StephaneDucasse 8/20/2018 20:42',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'deletePost:',			#protocol : #crud,			#sourceCode : 'deletePost: aPost\r    (self confirm: \'Do you want remove this post ?\')\r        ifTrue: [ blog removeBlogPost: aPost ]',			#stamp : 'StephaneDucasse 8/20/2018 20:42',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:43:08.685661+02:00' ],		#prior : OmReference [ '163' ],		#self : OmReference [ '164' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #addPost,			#protocol : #rendering,			#sourceCode : 'addPost\r    | post |\r    post := self call: (self renderAddPostForm: TBPost new).\r    post ifNotNil: [ blog writeBlogPost: post ]',			#stamp : 'StephaneDucasse 8/20/2018 19:13',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #addPost,			#protocol : #crud,			#sourceCode : 'addPost\r    | post |\r    post := self call: (self renderAddPostForm: TBPost new).\r    post ifNotNil: [ blog writeBlogPost: post ]',			#stamp : 'StephaneDucasse 8/20/2018 19:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:43:10.995916+02:00' ],		#prior : OmReference [ '164' ],		#self : OmReference [ '165' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'editPost:',			#protocol : #rendering,			#sourceCode : 'editPost: aPost\r   | post |\r   post := self call: (self renderEditPostForm: aPost).\r   post ifNotNil: [ blog save ]',			#stamp : 'StephaneDucasse 8/20/2018 20:38',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'editPost:',			#protocol : #crud,			#sourceCode : 'editPost: aPost\r   | post |\r   post := self call: (self renderEditPostForm: aPost).\r   post ifNotNil: [ blog save ]',			#stamp : 'StephaneDucasse 8/20/2018 20:38',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:43:13.976671+02:00' ],		#prior : OmReference [ '165' ],		#self : OmReference [ '166' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'viewPost:',			#protocol : #rendering,			#sourceCode : 'viewPost: aPost\r   self call: (self renderViewPostForm: aPost)',			#stamp : 'StephaneDucasse 8/20/2018 20:30',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'viewPost:',			#protocol : #crud,			#sourceCode : 'viewPost: aPost\r   self call: (self renderViewPostForm: aPost)',			#stamp : 'StephaneDucasse 8/20/2018 20:30',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:43:48.852021+02:00' ],		#prior : OmReference [ '166' ],		#self : OmReference [ '167' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #'removeBlogPost:',			#protocol : #operations,			#sourceCode : 'removeBlogPost: aPost\r    posts remove: aPost ifAbsent: [ ].\r    self save.',			#stamp : 'StephaneDucasse 8/20/2018 20:43',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:44:17.316955+02:00' ],		#prior : OmReference [ '167' ],		#self : OmReference [ '168' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #testRemoveBlogPost,			#protocol : #tests,			#sourceCode : 'testRemoveBlogPost\r    self assert: blog size equals: 1.\r    blog removeBlogPost: blog allBlogPosts anyOne.\r    self assert: blog size equals: 0',			#stamp : 'StephaneDucasse 8/20/2018 20:44',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:46:58.286233+02:00' ],		#prior : OmReference [ '168' ],		#self : OmReference [ '169' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #refreshReport,			#protocol : #operations,			#sourceCode : 'refreshReport\r    self rows: blog allBlogPosts.\r    self refresh.',			#stamp : 'StephaneDucasse 8/20/2018 20:46',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:47:17.277282+02:00' ],		#prior : OmReference [ '169' ],		#self : OmReference [ '170' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #addPost,			#protocol : #crud,			#sourceCode : 'addPost\r    | post |\r    post := self call: (self renderAddPostForm: TBPost new).\r    post ifNotNil: [ blog writeBlogPost: post ]',			#stamp : 'StephaneDucasse 8/20/2018 19:13',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #addPost,			#protocol : #crud,			#sourceCode : 'addPost\r    | post |\r    post := self call: (self renderAddPostForm: TBPost new).\r    post ifNotNil: [\r        blog writeBlogPost: post.\r        self refreshReport\r    ]',			#stamp : 'StephaneDucasse 8/20/2018 20:47',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:47:36.852576+02:00' ],		#prior : OmReference [ '170' ],		#self : OmReference [ '171' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'deletePost:',			#protocol : #crud,			#sourceCode : 'deletePost: aPost\r    (self confirm: \'Do you want remove this post ?\')\r        ifTrue: [ blog removeBlogPost: aPost ]',			#stamp : 'StephaneDucasse 8/20/2018 20:42',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsReport,				#isMetaSide : false			},			#name : #'deletePost:',			#protocol : #crud,			#sourceCode : 'deletePost: aPost\r    (self confirm: \'Do you want remove this post ?\')\r        ifTrue: [ blog removeBlogPost: aPost.\r                 self refreshReport ]',			#stamp : 'StephaneDucasse 8/20/2018 20:47',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:49:53.397226+02:00' ],		#prior : OmReference [ '171' ],		#self : OmReference [ '172' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionContainer,			#protocol : #description,			#sourceCode : 'descriptionContainer\r    <magritteContainer>\r    ^ super descriptionContainer\r        componentRenderer: TBSMagritteFormRenderer;\r        yourself',			#stamp : 'StephaneDucasse 8/20/2018 20:49',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:50:51.716821+02:00' ],		#prior : OmReference [ '172' ],		#self : OmReference [ '173' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionTitle,			#protocol : #description,			#sourceCode : 'descriptionTitle\r         <magritteDescription>\r         ^ MAStringDescription new\r            label: \'Title\';\r            priority: 100;\r            accessor: #title;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:18',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionTitle,			#protocol : #description,			#sourceCode : 'descriptionTitle\r    <magritteDescription>\r    ^ MAStringDescription new\r        label: \'Title\';\r        priority: 100;\r        accessor: #title;\r        requiredErrorMessage: \'A blog post must have a title.\';\r        comment: \'Please enter a title\';\r        componentClass: TBSMagritteTextInputComponent;\r        beRequired;\r        yourself',			#stamp : 'StephaneDucasse 8/20/2018 20:50',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:50:58.137259+02:00' ],		#prior : OmReference [ '173' ],		#self : OmReference [ '174' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionText,			#protocol : #description,			#sourceCode : 'descriptionText\r         <magritteDescription>\r         ^ MAMemoDescription new\r            label: \'Text\';\r            priority: 200;\r            accessor: #text;\r            beRequired;\r            yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:18',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionText,			#protocol : #description,			#sourceCode : 'descriptionText\r    <magritteDescription>\r    ^ MAMemoDescription new\r        label: \'Text\';\r        priority: 200;\r        accessor: #text;\r        beRequired;\r        requiredErrorMessage: \'A blog post must contain a text.\';\r        comment: \'Please enter a text\';\r        componentClass: TBSMagritteTextAreaComponent;\r        yourself',			#stamp : 'StephaneDucasse 8/20/2018 20:50',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:51:05.613039+02:00' ],		#prior : OmReference [ '174' ],		#self : OmReference [ '175' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionCategory,			#protocol : #description,			#sourceCode : 'descriptionCategory\r   <magritteDescription>\r   ^ MAStringDescription new\r      label: \'Category\';\r      priority: 300;\r      accessor: #category;\r      yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:19',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionCategory,			#protocol : #description,			#sourceCode : 'descriptionCategory\r    <magritteDescription>\r    ^ MAStringDescription new\r        label: \'Category\';\r        priority: 300;\r        accessor: #category;\r        comment: \'Unclassified if empty\';\r        componentClass: TBSMagritteTextInputComponent;\r        yourself',			#stamp : 'StephaneDucasse 8/20/2018 20:51',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T20:51:12.983236+02:00' ],		#prior : OmReference [ '175' ],		#self : OmReference [ '176' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionVisible,			#protocol : #description,			#sourceCode : 'descriptionVisible\r   <magritteDescription>\r   ^ MABooleanDescription new\r      label: \'Visible\';\r      priority: 500;\r      accessor: #visible;\r      beRequired;\r      yourself',			#stamp : 'StephaneDucasse 8/20/2018 14:19',			#package : #TinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #descriptionVisible,			#protocol : #description,			#sourceCode : 'descriptionVisible\r    <magritteDescription>\r    ^ MABooleanDescription new\r        checkboxLabel: \'Visible\';\r        priority: 500;\r        accessor: #visible;\r        componentClass: TBSMagritteCheckboxComponent;\r        beRequired;\r        yourself',			#stamp : 'StephaneDucasse 8/20/2018 20:51',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:09:03.944131+02:00' ],		#prior : OmReference [ '176' ],		#self : OmReference [ '177' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MAElementComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tself isReadonly\r\t\tifTrue: [ self renderViewerOn: html ]\r\t\tifFalse: [ self renderEditorOn: html ]',			#stamp : 'lr 3/9/2006 11:33',			#package : #Magritte-Seaside		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MAElementComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tself isReadonly\r\t\tifTrue: [ self halt. self renderViewerOn: html ]\r\t\tifFalse: [ self renderEditorOn: html ]',			#stamp : 'StephaneDucasse 8/20/2018 21:09',			#package : #Magritte-Seaside		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:10:01.02997+02:00' ],		#prior : OmReference [ '177' ],		#self : OmReference [ '178' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MAElementComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tself isReadonly\r\t\tifTrue: [ self halt. self renderViewerOn: html ]\r\t\tifFalse: [ self renderEditorOn: html ]',			#stamp : 'StephaneDucasse 8/20/2018 21:09',			#package : #Magritte-Seaside		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MAElementComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tself isReadonly\r\t\tifTrue: [ self renderViewerOn: html ]\r\t\tifFalse: [ self renderEditorOn: html ]',			#stamp : 'StephaneDucasse 8/20/2018 21:10',			#package : #Magritte-Seaside		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:15:57.981007+02:00' ],		#prior : OmReference [ '178' ],		#self : OmReference [ '179' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'TinyBlog-StephaneDucasse.chap9_v2.mcz-StephaneDucasse.1',		#repositoryDescription : '/Users/ducasse/Workspace/FirstCircle/MyBooks/Bk-Writing/TinyBlogTutorial/TinyBlogImages6/pharo-local/package-cache'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:16:00.858315+02:00' ],		#prior : OmReference [ '179' ],		#self : OmReference [ '180' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'TinyBlog-StephaneDucasse.chap9_v2.mcz-StephaneDucasse.1',		#repositoryDescription : 'http://smalltalkhub.com/mc/PharoMooc/TinyBlog/main/'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:16:32.807017+02:00' ],		#prior : OmReference [ '180' ],		#self : OmReference [ '181' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter9:',			#protocol : #versions,			#sourceCode : 'versionChapter9: spec \r   <version: \'versionChapter9\' imports: #(\'0.1-baseline\')>\r\tspec for: #common do: [\r\t\tspec blessing: #stable.\r\t\tspec package: \'TinyBlog\' with: \'TinyBlog-LucFabresse.chap9_v1\'\r\t].',			#stamp : 'LucFabresse 8/6/2018 14:33',			#package : #ConfigurationOfTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter9:',			#protocol : #versions,			#sourceCode : 'versionChapter9: spec\r\t<version: \'versionChapter9\' imports: #(\'0.1-baseline\')>\r\tspec\r\t\tfor: #common\r\t\tdo: [ spec blessing: #stable.\r\t\t\tspec package: \'TinyBlog\' with: \'TinyBlog-StephaneDucasse.chap9_v2.mcz-StephaneDucasse.1\' ]',			#stamp : 'StephaneDucasse 8/20/2018 21:16',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:16:44.522917+02:00' ],		#prior : OmReference [ '181' ],		#self : OmReference [ '182' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'ConfigurationOfTinyBlog-StephaneDucasse.28',		#repositoryDescription : '/Users/ducasse/Workspace/FirstCircle/MyBooks/Bk-Writing/TinyBlogTutorial/TinyBlogImages6/pharo-local/package-cache'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:16:45.993908+02:00' ],		#prior : OmReference [ '182' ],		#self : OmReference [ '183' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'ConfigurationOfTinyBlog-StephaneDucasse.28',		#repositoryDescription : 'http://smalltalkhub.com/mc/PharoMooc/TinyBlog/main/'	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:33:13.508173+02:00' ],		#prior : OmReference [ '183' ],		#self : OmReference [ '184' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MAElementComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tself isReadonly\r\t\tifTrue: [ self renderViewerOn: html ]\r\t\tifFalse: [ self renderEditorOn: html ]',			#stamp : 'StephaneDucasse 8/20/2018 21:10',			#package : #Magritte-Seaside		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MAElementComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tself isReadonly\r\t\tifTrue: [ self halt. self renderViewerOn: html ]\r\t\tifFalse: [ self renderEditorOn: html ]',			#stamp : 'StephaneDucasse 8/20/2018 21:33',			#package : #Magritte-Seaside		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:36:56.42232+02:00' ],		#prior : OmReference [ '184' ],		#self : OmReference [ '185' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\tself renderComment: aDescription.\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'DiegoLont 12/4/2013 15:00',			#package : #Bootstrap-Magritte-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\tself isReadonly ifFalse: [ self renderComment: aDescription].\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'StephaneDucasse 8/20/2018 21:36',			#package : #Bootstrap-Magritte-Core		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:37:15.729389+02:00' ],		#prior : OmReference [ '185' ],		#self : OmReference [ '186' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MAElementComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tself isReadonly\r\t\tifTrue: [ self halt. self renderViewerOn: html ]\r\t\tifFalse: [ self renderEditorOn: html ]',			#stamp : 'StephaneDucasse 8/20/2018 21:33',			#package : #Magritte-Seaside		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MAElementComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tself isReadonly\r\t\tifTrue: [ self renderViewerOn: html ]\r\t\tifFalse: [ self renderEditorOn: html ]',			#stamp : 'StephaneDucasse 8/20/2018 21:37',			#package : #Magritte-Seaside		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:37:33.942966+02:00' ],		#prior : OmReference [ '186' ],		#self : OmReference [ '187' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\tself isReadonly ifFalse: [ self renderComment: aDescription].\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'StephaneDucasse 8/20/2018 21:36',			#package : #Bootstrap-Magritte-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\tself isReadOnly ifFalse: [ self renderComment: aDescription].\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'StephaneDucasse 8/20/2018 21:37',			#package : #Bootstrap-Magritte-Core		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:37:50.012025+02:00' ],		#prior : OmReference [ '187' ],		#self : OmReference [ '188' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\tself isReadOnly ifFalse: [ self renderComment: aDescription].\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'StephaneDucasse 8/20/2018 21:37',			#package : #Bootstrap-Magritte-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\taDescription isReadOnly ifFalse: [ self renderComment: aDescription].\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'StephaneDucasse 8/20/2018 21:37',			#package : #Bootstrap-Magritte-Core		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:37:59.485804+02:00' ],		#prior : OmReference [ '188' ],		#self : OmReference [ '189' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\taDescription isReadOnly ifFalse: [ self renderComment: aDescription].\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'StephaneDucasse 8/20/2018 21:37',			#package : #Bootstrap-Magritte-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\taDescription isReadonly ifFalse: [ self renderComment: aDescription].\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'StephaneDucasse 8/20/2018 21:37',			#package : #Bootstrap-Magritte-Core		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:42:54.904115+02:00' ],		#prior : OmReference [ '189' ],		#self : OmReference [ '190' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\taDescription isReadonly ifFalse: [ self renderComment: aDescription].\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'StephaneDucasse 8/20/2018 21:37',			#package : #Bootstrap-Magritte-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\tself halt. aDescription isReadonly ifFalse: [ self renderComment: aDescription].\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'StephaneDucasse 8/20/2018 21:42',			#package : #Bootstrap-Magritte-Core		}	}}OmEntry {	#tags : {		#author : 'StephaneDucasse',		#time : DateAndTime [ '2018-08-20T21:43:28.04298+02:00' ],		#prior : OmReference [ '190' ],		#self : OmReference [ '191' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\tself halt. aDescription isReadonly ifFalse: [ self renderComment: aDescription].\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'StephaneDucasse 8/20/2018 21:42',			#package : #Bootstrap-Magritte-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBSMagritteFormRenderer,				#isMetaSide : false			},			#name : #'renderElement:',			#protocol : #rendering,			#sourceCode : 'renderElement: aDescription\r\taDescription group = group\r\t\tifFalse: [ self renderGroup: aDescription ].\r\t\t\r\thtml tbsFormGroup\r\t\tclass: (self classFor: aDescription);\r\t\twith: [\r\t\t\t| tag |\r\t\t\tself renderLabel: aDescription.\r\t\t\ttag := html div\r\t\t\t\tclass: \'controls\';\r\t\t\t\tyourself.\r\t\t\tself formHorizontal ifTrue: [ tag class: \'col-sm-10\' ].\r\t\t\ttag\r\t\t\t\twith: [ \r\t\t\t\t\tself renderControl: aDescription.\r\t\t\t\t\tcomponent isReadonly ifFalse: [ self renderComment: aDescription].\r\t\t\t\t\tself validationMessagesInline ifTrue: [ self renderInlineError: aDescription ] ] ]',			#stamp : 'StephaneDucasse 8/20/2018 21:43',			#package : #Bootstrap-Magritte-Core		}	}}