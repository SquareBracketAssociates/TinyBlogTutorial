OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:43:55.589782+02:00' ],		#prior : OmReference [ 'Pharo.89a2y179kv8difxclvtw9cvre', '29776' ],		#self : OmReference [ '1' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'ConfigurationOfTinyBlog-LucFabresse.26'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ],		#time : DateAndTime [ '2018-08-16T16:43:56.059268+02:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #ConfigurationOfTinyBlog,		#affectedPackageName : #ConfigurationOfTinyBlog	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ],		#time : DateAndTime [ '2018-08-16T16:43:56.131458+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ConfigurationOfTinyBlog\r\tinstanceVariableNames: \'project\'\r\tclassVariableNames: \'LastVersionLoad\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ConfigurationOfTinyBlog\''			},			#name : #ConfigurationOfTinyBlog,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfTinyBlog,						#isMetaSide : false					},					#name : #project,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ConfigurationOfTinyBlog class\r\tinstanceVariableNames: \'\''				},				#name : #'ConfigurationOfTinyBlog class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ConfigurationOfTinyBlog,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfTinyBlog,						#isMetaSide : false					},					#name : #LastVersionLoad,					#parent : @8				}			],			#category : #ConfigurationOfTinyBlog,			#package : #ConfigurationOfTinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ],		#time : DateAndTime [ '2018-08-16T16:43:56.273219+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #DevelopmentSupport,			#protocol : #'development support',			#sourceCode : 'DevelopmentSupport\r\r"See the methods in the \'development support\' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."\r\t<apiDocumentation>',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ],		#time : DateAndTime [ '2018-08-16T16:43:56.278201+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #'baseConfigurationClassIfAbsent:',			#protocol : #private,			#sourceCode : 'baseConfigurationClassIfAbsent: aBlock\r\r\t^Smalltalk\r\t\tat: #\'ConfigurationOf\'\r\t\tifAbsent: [ \r\t\t\tself ensureMetacelloBaseConfiguration.\r\t\t\tSmalltalk at: #\'ConfigurationOf\' ifAbsent: aBlock ].',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ],		#time : DateAndTime [ '2018-08-16T16:43:56.280639+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #ensureMetacello,			#protocol : #private,			#sourceCode : 'ensureMetacello\r\r\t(self baseConfigurationClassIfAbsent: []) ensureMetacello',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ],		#time : DateAndTime [ '2018-08-16T16:43:56.282657+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #ensureMetacelloBaseConfiguration,			#protocol : #private,			#sourceCode : 'ensureMetacelloBaseConfiguration\r  Smalltalk\r    at: #\'ConfigurationOf\'\r    ifAbsent: [ \r      | repository version |\r      repository := MCHttpRepository\r        location: \'http://smalltalkhub.com/mc/dkh/metacello/main\'\r        user: \'\'\r        password: \'\'.\r      repository\r        versionReaderForFileNamed: \'Metacello-Base-dkh.107\'\r        do: [ :reader | \r          version := reader version.\r          version load.\r          version workingCopy repositoryGroup addRepository: repository ] ]',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ],		#time : DateAndTime [ '2018-08-16T16:43:56.284568+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #isMetacelloConfig,			#protocol : #'metacello tool support',			#sourceCode : 'isMetacelloConfig\r\t"Answer true and the Metacello tools will operate on you"\r\t\r\t^true',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ],		#time : DateAndTime [ '2018-08-16T16:43:56.286812+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #load,			#protocol : #loading,			#sourceCode : 'load\r\t"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."\r\r\t"self load"\r\r\t<apiDocumentation>\r\t^(self project version: #stable) load',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ],		#time : DateAndTime [ '2018-08-16T16:43:56.288767+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #loadBleedingEdge,			#protocol : #loading,			#sourceCode : 'loadBleedingEdge\r\t"Load the latest versions of the mcz files defined for this project. It is not likely that the #bleedingEdge has been tested."\r\r\t"self loadBleedingEdge"\r\r\t<apiDocumentation>\r\t^(self project version: #bleedingEdge) load',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ],		#time : DateAndTime [ '2018-08-16T16:43:56.290541+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #loadDevelopment,			#protocol : #loading,			#sourceCode : 'loadDevelopment\r\t"Load the #development version defined for this platform. The #development version will change over time and is not expected to be stable."\r\r\t"self loadDevelopment"\r\r\t<apiDocumentation>\r\t^(self project version: #development) load',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ],		#time : DateAndTime [ '2018-08-16T16:43:56.292459+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #loadFinalApp,			#protocol : #'Loading Corrections',			#sourceCode : 'loadFinalApp\r\t^(self project version: #stable) load',			#stamp : 'LucFabresse 8/25/2016 18:22',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ],		#time : DateAndTime [ '2018-08-16T16:43:56.294483+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #loadWeek1Correction,			#protocol : #'Loading Corrections',			#sourceCode : 'loadWeek1Correction\r\t^(self project version: #week1solution) load',			#stamp : 'LucFabresse 8/25/2016 18:20',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ],		#time : DateAndTime [ '2018-08-16T16:43:56.296152+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #loadWeek2Correction,			#protocol : #'Loading Corrections',			#sourceCode : 'loadWeek2Correction\r\t^(self project version: #week2solution) load',			#stamp : 'LucFabresse 8/25/2016 18:21',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ],		#time : DateAndTime [ '2018-08-16T16:43:56.297809+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #loadWeek3Correction,			#protocol : #'Loading Corrections',			#sourceCode : 'loadWeek3Correction\r\t^(self project version: #week3solution) load',			#stamp : 'LucFabresse 8/25/2016 18:21',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ],		#time : DateAndTime [ '2018-08-16T16:43:56.299511+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #loadWeek4Correction,			#protocol : #'Loading Corrections',			#sourceCode : 'loadWeek4Correction\r\t^(self project version: #week4solution) load',			#stamp : 'LucFabresse 8/25/2016 18:21',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ],		#time : DateAndTime [ '2018-08-16T16:43:56.30147+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #project,			#protocol : #accessing,			#sourceCode : 'project\r\r\t^self new project',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ],		#time : DateAndTime [ '2018-08-16T16:43:56.303203+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfTinyBlog class',				#isMetaSide : true			},			#name : #validate,			#protocol : #'development support',			#sourceCode : 'validate\r\t"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). \r\tErrors identify specification issues that will result in unexpected behaviour when you load the configuration. \r\tCritical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.\r\tWarnings identify specification issues that are technically correct, but are worth take a look at."\r\r\t"self validate"\r\r\t<apiDocumentation>\r\tself ensureMetacello.\r\t^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ],		#time : DateAndTime [ '2018-08-16T16:43:56.305321+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'baseline01:',			#protocol : #baselines,			#sourceCode : 'baseline01: spec\r\t<version: \'0.1-baseline\'>\r\r\tspec for: #\'common\' do: [\r\t\tspec blessing: #\'baseline\'.\r\t\tspec repository: \'http://smalltalkhub.com/mc/PharoMooc/TinyBlog/main/\'.\r\t\tspec project: \'PharoWeb\' with: [\r\t\t\t\tspec\r\t\t\t\t\tclassName: #ConfigurationOfPharoWeb;\r\t\t\t\t\tversionString: #\'stable\';\r\t\t\t\t\trepository: \'http://smalltalkhub.com/mc/PharoExtras/PharoWeb/main/\' ].\r\t\tspec package: #TinyBlog\r\t\t\twith: [ spec requires: \'PharoWeb\' ].\r\t\t\r\t\tspec group: \'default\' with:   #( #TinyBlog )\t\r\t].\r',			#stamp : 'Luc 8/23/2016 15:13',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ],		#time : DateAndTime [ '2018-08-16T16:43:56.307221+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'chapter2solution:',			#protocol : #'solutions by chapter',			#sourceCode : 'chapter2solution: spec\r\t<symbolicVersion: #\'chapter2solution\'>\r  \tspec for: #\'common\' version: \'versionChapter2\'.',			#stamp : 'LucFabresse 8/6/2018 14:31',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ],		#time : DateAndTime [ '2018-08-16T16:43:56.309339+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'chapter3solution:',			#protocol : #'solutions by chapter',			#sourceCode : 'chapter3solution: spec\r   <symbolicVersion: #\'chapter3solution\'>\r  \tspec for: #\'common\' version: \'versionChapter3\'',			#stamp : 'LucFabresse 8/6/2018 14:31',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ],		#time : DateAndTime [ '2018-08-16T16:43:56.311172+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'chapter4solution:',			#protocol : #'solutions by chapter',			#sourceCode : 'chapter4solution: spec\r   <symbolicVersion: #\'chapter4solution\'>\r  \tspec for: #\'common\' version: \'versionChapter4\'',			#stamp : 'LucFabresse 8/6/2018 14:31',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ],		#time : DateAndTime [ '2018-08-16T16:43:56.313001+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'chapter5solution:',			#protocol : #'solutions by chapter',			#sourceCode : 'chapter5solution: spec\r   <symbolicVersion: #\'chapter5solution\'>\r  \tspec for: #\'common\' version: \'versionChapter5\'',			#stamp : 'LucFabresse 8/6/2018 14:31',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ],		#time : DateAndTime [ '2018-08-16T16:43:56.314922+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'chapter6solution:',			#protocol : #'solutions by chapter',			#sourceCode : 'chapter6solution: spec\r   <symbolicVersion: #\'chapter6solution\'>\r  \tspec for: #\'common\' version: \'versionChapter6\'',			#stamp : 'LucFabresse 8/6/2018 14:31',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ],		#time : DateAndTime [ '2018-08-16T16:43:56.317099+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'chapter7solution:',			#protocol : #'solutions by chapter',			#sourceCode : 'chapter7solution: spec\r   <symbolicVersion: #\'chapter7solution\'>\r  \tspec for: #\'common\' version: \'versionChapter7\'',			#stamp : 'LucFabresse 8/6/2018 14:32',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ],		#time : DateAndTime [ '2018-08-16T16:43:56.319059+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'chapter8solution:',			#protocol : #'solutions by chapter',			#sourceCode : 'chapter8solution: spec\r   <symbolicVersion: #\'chapter8solution\'>\r  \tspec for: #\'common\' version: \'versionChapter8\'',			#stamp : 'LucFabresse 8/6/2018 14:32',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ],		#time : DateAndTime [ '2018-08-16T16:43:56.321018+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'chapter9solution:',			#protocol : #'solutions by chapter',			#sourceCode : 'chapter9solution: spec\r   <symbolicVersion: #\'chapter9solution\'>\r  \tspec for: #\'common\' version: \'versionChapter9\'',			#stamp : 'LucFabresse 8/6/2018 14:32',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ],		#time : DateAndTime [ '2018-08-16T16:43:56.323176+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #customProjectAttributes,			#protocol : #accessing,			#sourceCode : 'customProjectAttributes\r    "Edit to return a collection of any custom attributes e.g. for conditional loading: Array with: #\'Condition1\' with: #\'Condition2.\r\tFor more information see: http://code.google.com/p/metacello/wiki/CustomProjectAttrributes "\r\r    ^ #()',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ],		#time : DateAndTime [ '2018-08-16T16:43:56.325205+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'development:',			#protocol : #'symbolic versions',			#sourceCode : 'development: spec\r\t<symbolicVersion: #\'development\'>\r\r\tspec for: #\'common\' version: \'0.1-baseline\'.\r',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ],		#time : DateAndTime [ '2018-08-16T16:43:56.327266+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #project,			#protocol : #accessing,			#sourceCode : 'project\r    ^ project\r        ifNil: [ \r            "Bootstrap Metacello if it is not already loaded"\r            self class ensureMetacello.\r            project := MetacelloMCProject new projectAttributes: self customProjectAttributes.\t"Create the Metacello project"\r            (Smalltalk at: #\'MetacelloVersionConstructor\') on: self project: project.\t"Construct the project"\r            project loadType: #\'linear\'.\t"change to #atomic if desired"\r            project ]',			#stamp : 'LucFabresse 3/18/2016 10:04',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ],		#time : DateAndTime [ '2018-08-16T16:43:56.329215+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'stable:',			#protocol : #'symbolic versions',			#sourceCode : 'stable: spec\r\t<symbolicVersion: #\'stable\'>\r\r\tspec for: #\'common\' version: \'versionChapter9\'.\r',			#stamp : 'LucFabresse 8/13/2018 11:42',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ],		#time : DateAndTime [ '2018-08-16T16:43:56.331432+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter2:',			#protocol : #versions,			#sourceCode : 'versionChapter2: spec \r   <version: \'versionChapter2\' imports: #(\'0.1-baseline\')>\r\tspec for: #common do: [\r\t\tspec blessing: #stable.\r\t\tspec package: \'TinyBlog\' with: \'TinyBlog-LucFabresse.chap2_v1\'\r\t].',			#stamp : 'LucFabresse 8/6/2018 14:32',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ],		#time : DateAndTime [ '2018-08-16T16:43:56.333285+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter3:',			#protocol : #versions,			#sourceCode : 'versionChapter3: spec \r   <version: \'versionChapter3\' imports: #(\'0.1-baseline\')>\r\tspec for: #common do: [\r\t\tspec blessing: #stable.\r\t\tspec package: \'TinyBlog\' with: \'TinyBlog-LucFabresse.chap3_v1\'\r\t].',			#stamp : 'LucFabresse 8/6/2018 14:32',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ],		#time : DateAndTime [ '2018-08-16T16:43:56.335175+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter4:',			#protocol : #versions,			#sourceCode : 'versionChapter4: spec \r   <version: \'versionChapter4\' imports: #(\'0.1-baseline\')>\r\tspec for: #common do: [\r\t\tspec blessing: #stable.\r\t\tspec package: \'TinyBlog\' with: \'TinyBlog-LucFabresse.chap4_v1\'\r\t].',			#stamp : 'LucFabresse 8/6/2018 14:33',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ],		#time : DateAndTime [ '2018-08-16T16:43:56.337033+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter5:',			#protocol : #versions,			#sourceCode : 'versionChapter5: spec \r   <version: \'versionChapter5\' imports: #(\'0.1-baseline\')>\r\tspec for: #common do: [\r\t\tspec blessing: #stable.\r\t\tspec package: \'TinyBlog\' with: \'TinyBlog-LucFabresse.chap5_v1\'\r\t].',			#stamp : 'LucFabresse 8/6/2018 14:33',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ],		#time : DateAndTime [ '2018-08-16T16:43:56.339158+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter6:',			#protocol : #versions,			#sourceCode : 'versionChapter6: spec \r   <version: \'versionChapter6\' imports: #(\'0.1-baseline\')>\r\tspec for: #common do: [\r\t\tspec blessing: #stable.\r\t\tspec package: \'TinyBlog\' with: \'TinyBlog-LucFabresse.chap6_v2\'\r\t].',			#stamp : 'Luc 8/10/2018 15:24',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ],		#time : DateAndTime [ '2018-08-16T16:43:56.34102+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter7:',			#protocol : #versions,			#sourceCode : 'versionChapter7: spec \r   <version: \'versionChapter7\' imports: #(\'0.1-baseline\')>\r\tspec for: #common do: [\r\t\tspec blessing: #stable.\r\t\tspec package: \'TinyBlog\' with: \'TinyBlog-LucFabresse.chap7_v1\'\r\t].',			#stamp : 'LucFabresse 8/6/2018 14:33',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ],		#time : DateAndTime [ '2018-08-16T16:43:56.34292+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter8:',			#protocol : #versions,			#sourceCode : 'versionChapter8: spec \r   <version: \'versionChapter8\' imports: #(\'0.1-baseline\')>\r\tspec for: #common do: [\r\t\tspec blessing: #stable.\r\t\tspec package: \'TinyBlog\' with: \'TinyBlog-LucFabresse.chap8_v1\'\r\t].',			#stamp : 'LucFabresse 8/6/2018 14:33',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ],		#time : DateAndTime [ '2018-08-16T16:43:56.345178+02:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfTinyBlog,				#isMetaSide : false			},			#name : #'versionChapter9:',			#protocol : #versions,			#sourceCode : 'versionChapter9: spec \r   <version: \'versionChapter9\' imports: #(\'0.1-baseline\')>\r\tspec for: #common do: [\r\t\tspec blessing: #stable.\r\t\tspec package: \'TinyBlog\' with: \'TinyBlog-LucFabresse.chap9_v1\'\r\t].',			#stamp : 'LucFabresse 8/6/2018 14:33',			#package : #ConfigurationOfTinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:43:56.866975+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'BaselineOfVoyage-EstebanLorenzano.1471364195'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ],		#time : DateAndTime [ '2018-08-16T16:43:57.009957+02:00' ],		#trigger : @3	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfVoyage,				#isMetaSide : false			},			#name : #'magritte:',			#protocol : #'external projects',			#sourceCode : 'magritte: spec\r\tspec \r\t\tbaseline: \'Magritte\' \r\t\t\twith: [ spec repository: \'github://magritte-metamodel/magritte:v3.5.2/source\';\r\t\t\tloads: #( \'Core\' ) ]',			#stamp : ' 8/16/2018 00:07:11',			#package : #BaselineOfVoyage		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ],		#time : DateAndTime [ '2018-08-16T16:43:57.106232+02:00' ],		#trigger : OmReference [ '40' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfVoyage,				#isMetaSide : false			},			#name : #'imageWorker:',			#protocol : #'external projects',			#sourceCode : 'imageWorker: spec\r\tspec project: \'ImageWorker\' with: [ \r\t\tspec\r\t\t\tclassName: \'ConfigurationOfImageWorker\';\r\t\t\tfile: \'ConfigurationOfImageWorker\';\r\t\t\tversion: #development;\r\t\t\trepository: \'http://www.smalltalkhub.com/mc/PharoExtras/ImageWorker/main\' ]',			#stamp : ' 8/16/2018 00:07:11',			#package : #BaselineOfVoyage		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ],		#time : DateAndTime [ '2018-08-16T16:43:57.118651+02:00' ],		#trigger : OmReference [ '40' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfVoyage,				#isMetaSide : false			},			#name : #'baseline:',			#protocol : #accessing,			#sourceCode : 'baseline: spec\r\t<baseline>\r\t\r\tspec for: #common do: [\r\t\tself magritte: spec.\r\t\tself mongoTalk: spec.\r\t\tself punqlite: spec.\r\t\tself imageWorker: spec.\r\t\t\r\t\tspec\r\t\t\t"core"\r\t\t\tpackage: \'Voyage-Model-Core\';\r\t\t\tpackage: \'Voyage-Model-Tests\' with: [ spec requires: \'Voyage-Model-Core\' ];\r\t\t\tpackage: \'Voyage-Memory-Core\' with: [ spec requires: \'Voyage-Model-Core\' ];\r\t\t\tpackage: \'Voyage-Memory-Tests\' with: [ spec requires: \'Voyage-Memory-Core\' ];\r\t\t\tpackage: \'Voyage-JSON\' with: [ spec requires: #(\'Voyage-Model-Core\' \'Magritte\') ];\r\t\t\tpackage: \'Voyage-JSON-Tests\' with: [ spec requires: \'Voyage-JSON\' ];\r\t\t\t"mongo"\r\t\t\tpackage: \'Voyage-Mongo-Core\' with: [ spec requires: #(\'MongoTalk\' \'Voyage-Model-Core\') ];\r\t\t\tpackage: \'Voyage-Mongo-Tests\';\r\t\t\tpackage: \'Voyage-Mongo-MultipleImageTests\' with: [ spec requires: #(\'Voyage-Mongo-Tests\' \'ImageWorker\') ];\r\t\t\t"unqlite"\r\t\t\tpackage: \'Voyage-UnQLite\' with: [ spec requires: #(\'PunQLite\' \'Voyage-Model-Core\') ];\r\t\t\tpackage: \'Voyage-UnQLite-Tests\';\t\t\t\r\t\t\t"utils"\r\t\t\tpackage: \'Voyage-Seaside-Container\' with: [ spec requires: \'Voyage-Model-Core\' ];\r\t\t\tpackage: \'Voyage-Mongo-Utils\' with: [ spec requires: #(\'Voyage-Mongo-Core\') ].\r\t\t\t\r\t\tspec\r\t\t\tgroup: \'default\' with: #(\'core\' \'memory\' \'mongo tests\');\r\t\t\tgroup: \'core\' with: #(\'Voyage-Model-Core\');\r\t\t\tgroup: \'memory\' with: #(\'Voyage-Memory-Core\');\r\t\t\tgroup: \'memory tests\' with: #(\'Voyage-Memory-Tests\');\r\t\t\tgroup: \'mongo\' with: #(\'Voyage-JSON\' \'Voyage-Mongo-Core\' \'Voyage-Mongo-Utils\');\r\t\t\tgroup: \'mongo tests\' with: #(\'mongo\' \'Voyage-Model-Tests\' \'Voyage-JSON-Tests\' \'Voyage-Mongo-Tests\');\r\t\t\tgroup: \'mongo tests multiple\' with: #(\'mongo tests\' \'Voyage-Mongo-MultipleImageTests\');\r\t\t\tgroup: \'unqlite\' with: #(\'Voyage-JSON\' \'Voyage-UnQLite\');\r\t\t\tgroup: \'unqlite tests\' with: #(\'unqlite\' \'Voyage-Model-Tests\' \'Voyage-JSON-Tests\' \'Voyage-UnQLite-Tests\') ].',			#stamp : ' 8/16/2018 00:07:11',			#package : #BaselineOfVoyage		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfVoyage,				#isMetaSide : false			},			#name : #'baseline:',			#protocol : #accessing,			#sourceCode : 'baseline: spec\r\t<baseline>\r\t\r\tspec for: #common do: [\r\t\tself magritte3: spec.\r\t\tself mongoTalk: spec.\r\t\tself punqlite: spec.\r\t\t\r\t\tspec\r\t\t\t"core"\r\t\t\tpackage: \'Voyage-Model-Core\';\r\t\t\tpackage: \'Voyage-Model-Tests\' with: [ spec requires: \'Voyage-Model-Core\' ];\r\t\t\tpackage: \'Voyage-Memory-Core\' with: [ spec requires: \'Voyage-Model-Core\' ];\r\t\t\tpackage: \'Voyage-JSON\' with: [ spec requires: #(\'Voyage-Model-Core\' \'Magritte3\') ];\r\t\t\tpackage: \'Voyage-JSON-Tests\' with: [ spec requires: \'Voyage-JSON\' ];\r\t\t\t"mongo"\r\t\t\tpackage: \'Voyage-Mongo-Core\' with: [ spec requires: #(\'MongoTalk\' \'Voyage-Model-Core\') ];\r\t\t\tpackage: \'Voyage-Mongo-Tests\';\r\t\t\t"unqlite"\r\t\t\tpackage: \'Voyage-UnQLite\' with: [ spec requires: #(\'PunQLite\' \'Voyage-Model-Core\') ];\r\t\t\tpackage: \'Voyage-UnQLite-Tests\';\t\t\t\r\t\t\t"utils"\r\t\t\tpackage: \'Voyage-Seaside-Container\' with: [ spec requires: \'Voyage-Model-Core\' ];\r\t\t\tpackage: \'Voyage-Mongo-Utils\' with: [ spec requires: #(\'Voyage-Mongo-Core\') ].\r\t\t\t\r\t\tspec\r\t\t\tgroup: \'default\' with: #(\'core\' \'memory\' \'mongo tests\');\r\t\t\tgroup: \'core\' with: #(\'Voyage-Model-Core\');\r\t\t\tgroup: \'memory\' with: #(\'Voyage-Memory-Core\');\r\t\t\tgroup: \'mongo\' with: #(\'Voyage-JSON\' \'Voyage-Mongo-Core\' \'Voyage-Mongo-Utils\');\r\t\t\tgroup: \'mongo tests\' with: #(\'mongo\' \'Voyage-Model-Tests\' \'Voyage-JSON-Tests\' \'Voyage-Mongo-Tests\');\r\t\t\tgroup: \'unqlite\' with: #(\'Voyage-JSON\' \'Voyage-UnQLite\');\r\t\t\tgroup: \'unqlite tests\' with: #(\'unqlite\' \'Voyage-Model-Tests\' \'Voyage-JSON-Tests\' \'Voyage-UnQLite-Tests\') ].',			#stamp : 'EstebanLorenzano 8/3/2016 14:34',			#package : #BaselineOfVoyage		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ],		#time : DateAndTime [ '2018-08-16T16:43:57.121945+02:00' ],		#trigger : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfVoyage,				#isMetaSide : false			},			#name : #'magritte3:',			#protocol : #'external projects',			#sourceCode : 'magritte3: spec\r\tspec project: \'Magritte3\' with: [ \r\t\tspec\r\t\t\tclassName: \'ConfigurationOfMagritte3\';\r\t\t\tfile: \'ConfigurationOfMagritte3\';\r\t\t\tversion: #stable;\r\t\t\tloads: #( \'Core\' );\r\t\t\trepository: \'http://www.smalltalkhub.com/mc/Magritte/Magritte3/main\' ]',			#stamp : 'NorbertHartl 6/6/2016 12:55',			#package : #BaselineOfVoyage		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ],		#time : DateAndTime [ '2018-08-16T16:43:57.124429+02:00' ],		#trigger : OmReference [ '40' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfVoyage,				#isMetaSide : false			},			#name : #'mongoTalk:',			#protocol : #'external projects',			#sourceCode : 'mongoTalk: spec\r\tspec \r\t\tbaseline: \'MongoTalk\' \r\t\t\twith: [ spec repository: \'github://pharo-nosql/mongotalk:1.14/mc\' ];\r\t\timport: \'MongoTalk\'\r',			#stamp : ' 8/16/2018 00:07:11',			#package : #BaselineOfVoyage		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfVoyage,				#isMetaSide : false			},			#name : #'mongoTalk:',			#protocol : #'external projects',			#sourceCode : 'mongoTalk: spec\r\tspec \r\t\tbaseline: \'MongoTalk\' \r\t\t\twith: [ spec repository: \'github://pharo-nosql/mongotalk/mc\' ];\r\t\timport: \'MongoTalk\'',			#stamp : 'EstebanLorenzano 6/12/2016 15:13',			#package : #BaselineOfVoyage		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:01.307824+02:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'BaselineOfMongoTalk-NorbertHartl.1499359441'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ],		#time : DateAndTime [ '2018-08-16T16:44:01.464213+02:00' ],		#trigger : @3	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfMongoTalk,				#isMetaSide : false			},			#name : #'PBKDF2:',			#protocol : #'external projects',			#sourceCode : 'PBKDF2: spec\r\tspec\r\t\tbaseline: \'Cryptography\' with: [ \r\t\t\tspec \r\t\t\t\trepository: \'github://zweidenker/Cryptography:0.3/source\' ];\r\t\t\t\r\t\tproject: \'PBKDF2\' copyFrom: \'Cryptography\' with: [ \r\t\t\t\t spec loads: \'PBKDF2\'  ]',			#stamp : ' 8/16/2018 00:08:21',			#package : #BaselineOfMongoTalk		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfMongoTalk,				#isMetaSide : false			},			#name : #'PBKDF2:',			#protocol : #'external projects',			#sourceCode : 'PBKDF2: spec\r\tspec\r\t\tproject: \'PBKDF2\'\r\t\twith: [ \r\t\t\tspec\r\t\t\t\tclassName: #ConfigurationOfPBKDF2;\r\t\t\t\tversionString: #bleedingEdge;\r\t\t\t\trepository: \'http://smalltalkhub.com/mc/UdoSchneider/PBKDF2/main\' ]',			#stamp : 'NorbertHartl 7/5/2017 16:48',			#package : #BaselineOfMongoTalk		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ],		#time : DateAndTime [ '2018-08-16T16:44:01.55208+02:00' ],		#trigger : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfMongoTalk,				#isMetaSide : false			},			#name : #'grease:',			#protocol : #'external projects',			#sourceCode : 'grease: spec \r\tspec\r\t\tbaseline: \'Grease\' with: [ \r\t\t\tspec \r\t\t\t\trepository: \'github://SeasideSt/Grease:v1.3.0/repository\' ]',			#stamp : ' 8/16/2018 00:08:21',			#package : #BaselineOfMongoTalk		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BaselineOfMongoTalk,				#isMetaSide : false			},			#name : #'grease:',			#protocol : #'external projects',			#sourceCode : 'grease: spec \r\tspec project: \'Grease\' with: [\r\t\t\tspec\r\t\t\t\tclassName: #ConfigurationOfGrease;\r\t\t\t\tversionString: #\'stable\';\r\t\t\t\trepository: \'http://smalltalkhub.com/mc/Seaside/MetacelloConfigurations/main\' ]',			#stamp : 'EstebanLorenzano 6/9/2016 13:36',			#package : #BaselineOfMongoTalk		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:02.116536+02:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'ConfigurationOfPBKDF2-UdoSchneider.10'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ],		#time : DateAndTime [ '2018-08-16T16:44:02.595389+02:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #ConfigurationOfPBKDF2,		#affectedPackageName : #ConfigurationOfPBKDF2	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ],		#time : DateAndTime [ '2018-08-16T16:44:02.666217+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ConfigurationOfPBKDF2\r\tinstanceVariableNames: \'project\'\r\tclassVariableNames: \'LastVersionLoad\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ConfigurationOfPBKDF2\''			},			#name : #ConfigurationOfPBKDF2,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfPBKDF2,						#isMetaSide : false					},					#name : #project,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ConfigurationOfPBKDF2 class\r\tinstanceVariableNames: \'\''				},				#name : #'ConfigurationOfPBKDF2 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ConfigurationOfPBKDF2,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfPBKDF2,						#isMetaSide : false					},					#name : #LastVersionLoad,					#parent : @8				}			],			#category : #ConfigurationOfPBKDF2,			#package : #ConfigurationOfPBKDF2,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ],		#time : DateAndTime [ '2018-08-16T16:44:02.718801+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #DevelopmentSupport,			#protocol : #'development support',			#sourceCode : 'DevelopmentSupport\r\r"See the methods in the \'development support\' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."\r\t<apiDocumentation>\r',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ],		#time : DateAndTime [ '2018-08-16T16:44:02.725743+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #'baseConfigurationClassIfAbsent:',			#protocol : #private,			#sourceCode : 'baseConfigurationClassIfAbsent: aBlock\r\r\t^Smalltalk\r\t\tat: #MetacelloBaseConfiguration\r\t\tifAbsent: [ \r\t\t\tself ensureMetacelloBaseConfiguration.\r\t\t\tSmalltalk at: #MetacelloBaseConfiguration ifAbsent: aBlock ].\r',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ],		#time : DateAndTime [ '2018-08-16T16:44:02.730477+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #createNewDevelopmentVersion,			#protocol : #'development support',			#sourceCode : 'createNewDevelopmentVersion\r\t"Create a new development version using the #stable version as model."\r\r\t"self createNewDevelopmentVersion"\r\t\r\t"Note: you need 1.0-beta.28 or later for the class MetacelloToolBox"\r\r\tself ensureMetacello.\r\t(Smalltalk at: #MetacelloToolBox) createNewDevelopmentVersionIn: self description: \'\'',			#stamp : 'UdoSchneider 7/9/2014 14:34',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ],		#time : DateAndTime [ '2018-08-16T16:44:02.733273+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #ensureMetacello,			#protocol : #private,			#sourceCode : 'ensureMetacello\r\r\t(self baseConfigurationClassIfAbsent: []) ensureMetacello',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ],		#time : DateAndTime [ '2018-08-16T16:44:02.735934+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #ensureMetacelloBaseConfiguration,			#protocol : #private,			#sourceCode : 'ensureMetacelloBaseConfiguration\r\r\tSmalltalk\r\t\tat: #MetacelloBaseConfiguration\r\t\tifAbsent: [ \r\t\t\t| repository version |\r\t\t\trepository := MCHttpRepository location: \'http://seaside.gemstone.com/ss/metacello\' user: \'\' password: \'\'.\r\t\t\trepository\r\t\t\t\tversionReaderForFileNamed: \'Metacello-Base-DaleHenrichs.2.mcz\'\r\t\t\t\tdo: [ :reader | \r\t\t\t\t\tversion := reader version.\r\t\t\t\t\tversion load.\r\t\t\t\t\tversion workingCopy repositoryGroup addRepository: repository ] ]',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ],		#time : DateAndTime [ '2018-08-16T16:44:02.738675+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #isMetacelloConfig,			#protocol : #'metacello tool support',			#sourceCode : 'isMetacelloConfig\r\t"Answer true and the Metacello tools will operate on you"\r\t\r\t^true',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ],		#time : DateAndTime [ '2018-08-16T16:44:02.741438+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #load,			#protocol : #loading,			#sourceCode : 'load\r\t"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."\r\r\t"self load"\r\r\t<apiDocumentation>\r\t^(self project version: #stable) load',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ],		#time : DateAndTime [ '2018-08-16T16:44:02.743856+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #loadBleedingEdge,			#protocol : #loading,			#sourceCode : 'loadBleedingEdge\r\t"Load the latest versions of the mcz files defined for this project. It is not likely that the #bleedingEdge has been tested."\r\r\t"self loadBleedingEdge"\r\r\t<apiDocumentation>\r\t^(self project version: #bleedingEdge) load',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ],		#time : DateAndTime [ '2018-08-16T16:44:02.746477+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #loadDevelopment,			#protocol : #loading,			#sourceCode : 'loadDevelopment\r\t"Load the #development version defined for this platform. The #development version will change over time and is not expected to be stable."\r\r\t"self loadDevelopment"\r\r\t<apiDocumentation>\r\t^(self project version: #development) load',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ],		#time : DateAndTime [ '2018-08-16T16:44:02.748904+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #project,			#protocol : #accessing,			#sourceCode : 'project\r\r\t^self new project',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ],		#time : DateAndTime [ '2018-08-16T16:44:02.75171+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #'releaseDevelopmentVersion:',			#protocol : #'development support',			#sourceCode : 'releaseDevelopmentVersion: commitMessage\r\t"Release #development version (set version blessing to #release), update the #development and #stable symbolic versions and save the configuration."\r\r\t"self releaseDevelopmentVersion: \'- release version 1.0.2\'"\r\r\t"Note: you need 1.0-beta.28 or later for the class MetacelloToolBox"\r\r\tself ensureMetacello.\r\t(Smalltalk at: #MetacelloToolBox) releaseDevelopmentVersionIn: self description: commitMessage',			#stamp : 'UdoSchneider 7/9/2014 14:33',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ],		#time : DateAndTime [ '2018-08-16T16:44:02.754157+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #'updateToLatestPackageVersions:',			#protocol : #'development support',			#sourceCode : 'updateToLatestPackageVersions: descriptionString\r\t"Updates mcz file versions in current version"\r\r\t"self updateToLatestPackageVersions: \'- latest mcz files for 1.0.4\'"\r\r\t"Note: you need 1.0-beta.28 or later for the class MetacelloToolBox"\r\r\tself ensureMetacello.\r\t((Smalltalk at: #MetacelloToolBox) updateToLatestPackageVersionsIn: self description: descriptionString) isEmpty\r\t\tifTrue: [ self inform: \'All specs up to date\' ]',			#stamp : 'UdoSchneider 7/9/2014 14:34',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ],		#time : DateAndTime [ '2018-08-16T16:44:02.756483+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfPBKDF2 class',				#isMetaSide : true			},			#name : #validate,			#protocol : #'development support',			#sourceCode : 'validate\r\t"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). \r\tErrors identify specification issues that will result in unexpected behaviour when you load the configuration. \r\tCritical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.\r\tWarnings identify specification issues that are technically correct, but are worth take a look at."\r\r\t"self validate"\r\r\t<apiDocumentation>\r\tself ensureMetacello.\r\t^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ],		#time : DateAndTime [ '2018-08-16T16:44:02.759224+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'baseline001:',			#protocol : #baselines,			#sourceCode : 'baseline001: spec\r\t<version: \'0.0.1-baseline\'>\r\r\tspec for: #\'common\' do: [\r\t\tspec blessing: #\'baseline\'.\r\t\tspec repository: \'http://smalltalkhub.com/mc/udos/PBKDF2/main\'.\r\t\tspec \r\t\t\tpackage: \'PBKDF2-Core\';\r\t\t\tpackage: \'PBKDF2-Tests\' with: [\r\t\t\t\tspec requires: #(\'PBKDF2-Core\' ). ].\r\t\tspec \r\t\t\tgroup: \'default\' with: #(\'PBKDF2-Core\' );\r\t\t\tgroup: \'Tests\' with: #(\'PBKDF2-Tests\' ). ].\r',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ],		#time : DateAndTime [ '2018-08-16T16:44:02.761813+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'baseline002:',			#protocol : #baselines,			#sourceCode : 'baseline002: spec\r\t<version: \'0.0.2-baseline\'>\r\tspec\r\t\tfor: #common\r\t\tdo: [ \r\t\t\tspec blessing: #baseline.\r\t\t\tspec repository: \'http://smalltalkhub.com/mc/udos/PBKDF2/main\'.\r\t\t\tspec\r\t\t\t\tpackage: \'Cryptography\' with: [ spec repository: \'http://smalltalkhub.com/mc/Cryptography/Cryptography/main\' ];\r\t\t\t\tpackage: \'PBKDF2-Core\' with: [ spec requires: #(\'Cryptography\') ];\r\t\t\t\tpackage: \'PBKDF2-Tests\' with: [ spec requires: #(\'PBKDF2-Core\') ].\r\t\t\tspec\r\t\t\t\tgroup: \'default\' with: #(\'PBKDF2-Core\');\r\t\t\t\tgroup: \'Tests\' with: #(\'PBKDF2-Tests\') ]',			#stamp : 'UdoSchneider 7/9/2014 15:15',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ],		#time : DateAndTime [ '2018-08-16T16:44:02.764349+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'baseline003:',			#protocol : #baselines,			#sourceCode : 'baseline003: spec\r\t<version: \'0.0.3-baseline\'>\r\tspec\r\t\tfor: #common\r\t\tdo: [ \r\t\t\tspec blessing: #baseline.\r\t\t\tspec repository: \'http://smalltalkhub.com/mc/UdoSchneider/PBKDF2/main\'.\r\t\t\tspec\r\t\t\t\tpackage: \'Cryptography\' with: [ spec repository: \'http://smalltalkhub.com/mc/Cryptography/Cryptography/main\' ];\r\t\t\t\tpackage: \'PBKDF2-Core\' with: [ spec requires: #(\'Cryptography\') ];\r\t\t\t\tpackage: \'PBKDF2-Tests\' with: [ spec requires: #(\'PBKDF2-Core\') ].\r\t\t\tspec\r\t\t\t\tgroup: \'default\' with: #(\'PBKDF2-Core\');\r\t\t\t\tgroup: \'Tests\' with: #(\'PBKDF2-Tests\') ]',			#stamp : 'UdoSchneider 8/27/2014 15:35',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ],		#time : DateAndTime [ '2018-08-16T16:44:02.767061+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #customProjectAttributes,			#protocol : #accessing,			#sourceCode : 'customProjectAttributes\r\t "Edit to return a collection of any custom attributes e.g. for conditional loading: Array with: #\'Condition1\' with: #\'Condition2.\r\tFor more information see: http://code.google.com/p/metacello/wiki/CustomProjectAttrributes"\r\r\t^ #().',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ],		#time : DateAndTime [ '2018-08-16T16:44:02.770197+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'development:',			#protocol : #'symbolic versions',			#sourceCode : 'development: spec\r\t<symbolicVersion: #\'development\'>\r\r\tspec for: #\'common\' version: \'0.0.7\'.\r',			#stamp : 'UdoSchneider 7/5/2017 18:22',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ],		#time : DateAndTime [ '2018-08-16T16:44:02.772859+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #project,			#protocol : #accessing,			#sourceCode : 'project\r\r\t^ project ifNil: [ \r\t\t"Bootstrap Metacello if it is not already loaded"\r\t\t(self class baseConfigurationClassIfAbsent: []) ensureMetacello.\r\t\t"Construct Metacello project"\r\t\tproject := MetacelloMCProject new projectAttributes: self customProjectAttributes. \r\t\t(Smalltalk at: #MetacelloVersionConstructor) on: self project: project.\r\t\tproject loadType: #linear. "change to #atomic if desired"\r\t\tproject ]',			#stamp : 'UdoSchneider 7/9/2014 14:31',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ],		#time : DateAndTime [ '2018-08-16T16:44:02.775543+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'stable:',			#protocol : #'symbolic versions',			#sourceCode : 'stable: spec\r\t<symbolicVersion: #\'stable\'>\r\r\tspec for: #\'common\' version: \'0.0.6\'.\r',			#stamp : 'UdoSchneider 7/5/2017 18:22',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ],		#time : DateAndTime [ '2018-08-16T16:44:02.778117+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'version001:',			#protocol : #versions,			#sourceCode : 'version001: spec\r\t<version: \'0.0.1\' imports: #(\'0.0.1-baseline\' )>\r\r\tspec for: #\'common\' do: [\r\t\tspec blessing: #\'release\'.\r\t\tspec description: \'Initial development version\'.\r\t\tspec author: \'UdoSchneider\'.\r\t\tspec timestamp: \'7/9/2014 14:33\'.\r\t\tspec \r\t\t\tpackage: \'PBKDF2-Core\' with: \'PBKDF2-Core-UdoSchneider.1\';\r\t\t\tpackage: \'PBKDF2-Tests\' with: \'PBKDF2-Tests-UdoSchneider.1\'. ].\r',			#stamp : 'UdoSchneider 7/9/2014 14:48',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ],		#time : DateAndTime [ '2018-08-16T16:44:02.781219+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'version002:',			#protocol : #versions,			#sourceCode : 'version002: spec\r\t<version: \'0.0.2\' imports: #(\'0.0.2-baseline\' )>\r\r\tspec for: #\'common\' do: [\r\t\tspec blessing: #\'release\'.\r\t\tspec description: \'\'.\r\t\tspec author: \'UdoSchneider\'.\r\t\tspec timestamp: \'7/9/2014 14:48\'.\r\t\tspec \r\t\t\tpackage: \'PBKDF2-Core\' with: \'PBKDF2-Core-UdoSchneider.1\';\r\t\t\tpackage: \'PBKDF2-Tests\' with: \'PBKDF2-Tests-UdoSchneider.1\';\r\t\t\tpackage: \'Cryptography\' with: \'Cryptography-mtf.36\'. ].\r',			#stamp : 'UdoSchneider 7/9/2014 15:12',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ],		#time : DateAndTime [ '2018-08-16T16:44:02.78382+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'version003:',			#protocol : #versions,			#sourceCode : 'version003: spec\r\t<version: \'0.0.3\' imports: #(\'0.0.2-baseline\' )>\r\r\tspec for: #\'common\' do: [\r\t\tspec blessing: #\'release\'.\r\t\tspec description: \'\'.\r\t\tspec author: \'UdoSchneider\'.\r\t\tspec timestamp: \'7/9/2014 15:12\'.\r\t\tspec \r\t\t\tpackage: \'PBKDF2-Core\' with: \'PBKDF2-Core-UdoSchneider.1\';\r\t\t\tpackage: \'PBKDF2-Tests\' with: \'PBKDF2-Tests-UdoSchneider.1\';\r\t\t\tpackage: \'Cryptography\' with: \'Cryptography-mtf.36\'. ].\r',			#stamp : 'UdoSchneider 7/10/2014 14:58',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ],		#time : DateAndTime [ '2018-08-16T16:44:02.786509+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'version004:',			#protocol : #versions,			#sourceCode : 'version004: spec\r\t<version: \'0.0.4\' imports: #(\'0.0.3-baseline\' )>\r\r\tspec for: #\'common\' do: [\r\t\tspec blessing: #\'release\'.\r\t\tspec description: \'\'.\r\t\tspec author: \'UdoSchneider\'.\r\t\tspec timestamp: \'8/27/2014 15:34\'.\r\t\tspec \r\t\t\tpackage: \'PBKDF2-Core\' with: \'PBKDF2-Core-UdoSchneider.1\';\r\t\t\tpackage: \'PBKDF2-Tests\' with: \'PBKDF2-Tests-UdoSchneider.1\';\r\t\t\tpackage: \'Cryptography\' with: \'Cryptography-mtf.36\'. ].\r',			#stamp : 'UdoSchneider 8/27/2014 15:35',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ],		#time : DateAndTime [ '2018-08-16T16:44:02.790531+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'version005:',			#protocol : #versions,			#sourceCode : 'version005: spec\r\t<version: \'0.0.5\' imports: #(\'0.0.3-baseline\' )>\r\r\tspec for: #\'common\' do: [\r\t\tspec blessing: #\'development\'.\r\t\tspec description: \'\'.\r\t\tspec author: \'UdoSchneider\'.\r\t\tspec timestamp: \'8/27/2014 15:35\'.\r\t\tspec \r\t\t\tpackage: \'PBKDF2-Core\' with: \'PBKDF2-Core-UdoSchneider.1\';\r\t\t\tpackage: \'PBKDF2-Tests\' with: \'PBKDF2-Tests-UdoSchneider.1\';\r\t\t\tpackage: \'Cryptography\' with: \'Cryptography-mtf.36\'. ].\r',			#stamp : 'UdoSchneider 8/27/2014 15:35',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ],		#time : DateAndTime [ '2018-08-16T16:44:02.79347+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'version006:',			#protocol : #versions,			#sourceCode : 'version006: spec\r\t<version: \'0.0.6\' imports: #(\'0.0.3-baseline\' )>\r\r\tspec for: #\'common\' do: [\r\t\tspec blessing: #\'release\'.\r\t\tspec description: \'\'.\r\t\tspec author: \'UdoSchneider\'.\r\t\tspec timestamp: \'7/5/2017 18:20\'.\r\t\tspec \r\t\t\tpackage: \'PBKDF2-Core\' with: \'PBKDF2-Core-UdoSchneider.1\';\r\t\t\tpackage: \'PBKDF2-Tests\' with: \'PBKDF2-Tests-UdoSchneider.1\';\r\t\t\tpackage: \'Cryptography\' with: \'Cryptography-EstebanMaringolo.50\'. ].\r',			#stamp : 'UdoSchneider 7/5/2017 18:21',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ],		#time : DateAndTime [ '2018-08-16T16:44:02.796313+02:00' ],		#trigger : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfPBKDF2,				#isMetaSide : false			},			#name : #'version007:',			#protocol : #versions,			#sourceCode : 'version007: spec\r\t<version: \'0.0.7\' imports: #(\'0.0.3-baseline\' )>\r\r\tspec for: #\'common\' do: [\r\t\tspec blessing: #\'development\'.\r\t\tspec description: \'\'.\r\t\tspec author: \'UdoSchneider\'.\r\t\tspec timestamp: \'7/5/2017 18:20\'.\r\t\tspec \r\t\t\tpackage: \'PBKDF2-Core\' with: \'PBKDF2-Core-UdoSchneider.1\';\r\t\t\tpackage: \'PBKDF2-Tests\' with: \'PBKDF2-Tests-UdoSchneider.1\';\r\t\t\tpackage: \'Cryptography\' with: \'Cryptography-EstebanMaringolo.50\'. ].\r',			#stamp : 'UdoSchneider 7/5/2017 18:21',			#package : #ConfigurationOfPBKDF2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:08.29665+02:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Cryptography-EstebanMaringolo.50'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ],		#time : DateAndTime [ '2018-08-16T16:44:08.625203+02:00' ],		#trigger : @3	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ASN1ChoiceElement\r\tinstanceVariableNames: \'owner symbol type\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1ChoiceElement,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1ChoiceElement,						#isMetaSide : false					},					#name : #owner,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1ChoiceElement,						#isMetaSide : false					},					#name : #symbol,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1ChoiceElement,						#isMetaSide : false					},					#name : #type,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1ChoiceElement class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1ChoiceElement class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1ChoiceElement,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ],		#time : DateAndTime [ '2018-08-16T16:44:08.656863+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1ChoiceElement',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1ChoiceElement subclass: #ASN1StructureElement\r\tinstanceVariableNames: \'default optional\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1StructureElement,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1StructureElement,						#isMetaSide : false					},					#name : #default,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1StructureElement,						#isMetaSide : false					},					#name : #optional,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1StructureElement class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1StructureElement class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1StructureElement,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ],		#time : DateAndTime [ '2018-08-16T16:44:08.66303+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ASN1DefinitionModel\r\tinstanceVariableNames: \'subject asn1ClassName asn1DefinitionString fields resultObject currentObject currentField currentMutator currentAccessor fieldStack\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ASN1DefinitionModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #subject,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #asn1ClassName,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #asn1DefinitionString,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #fields,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #resultObject,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #currentObject,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #currentField,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #currentMutator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #currentAccessor,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #fieldStack,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1DefinitionModel class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1DefinitionModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1DefinitionModel,					#isMetaSide : false				},				#parent : @8,				#content : 'This class is used to parse an asn1Definition of a class.  \r\rUse the prama syntax to define the asn1 encoding\r    <ans1Definition: \'put definition here\'>\r\rfor example:\r\t<asn1Definition: \'CertificateList  ::=  SEQUENCE  {\r        tbsCertList          TBSCertList,\r        signatureAlgorithm   AlgorithmIdentifier,\r        signatureValue       BIT STRING  }\'>',				#stamp : 'RJT 9/2/2006 23:09'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'This class is used to parse an asn1Definition of a class.  \r\rUse the prama syntax to define the asn1 encoding\r    <ans1Definition: \'put definition here\'>\r\rfor example:\r\t<asn1Definition: \'CertificateList  ::=  SEQUENCE  {\r        tbsCertList          TBSCertList,\r        signatureAlgorithm   AlgorithmIdentifier,\r        signatureValue       BIT STRING  }\'>',		#newStamp : 'RJT 9/2/2006 23:09'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ],		#time : DateAndTime [ '2018-08-16T16:44:08.667093+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ASN1DefinitionModel\r\tinstanceVariableNames: \'subject asn1ClassName asn1DefinitionString fields resultObject currentObject currentField currentMutator currentAccessor fieldStack\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-DefinitionModel\''			},			#name : #ASN1DefinitionModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #subject,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #asn1ClassName,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #asn1DefinitionString,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #fields,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #resultObject,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #currentObject,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #currentField,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #currentMutator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #currentAccessor,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1DefinitionModel,						#isMetaSide : false					},					#name : #fieldStack,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1DefinitionModel class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1DefinitionModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1DefinitionModel,					#isMetaSide : false				},				#parent : @8,				#content : 'This class is used to parse an asn1Definition of a class.  \r\rUse the prama syntax to define the asn1 encoding\r    <ans1Definition: \'put definition here\'>\r\rfor example:\r\t<asn1Definition: \'CertificateList  ::=  SEQUENCE  {\r        tbsCertList          TBSCertList,\r        signatureAlgorithm   AlgorithmIdentifier,\r        signatureValue       BIT STRING  }\'>',				#stamp : 'RJT 9/2/2006 23:09'			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-DefinitionModel,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ],		#time : DateAndTime [ '2018-08-16T16:44:08.672771+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ASN1EndOfIndefiniteLengthMarker\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1EndOfIndefiniteLengthMarker,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1EndOfIndefiniteLengthMarker class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1EndOfIndefiniteLengthMarker class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1EndOfIndefiniteLengthMarker,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ],		#time : DateAndTime [ '2018-08-16T16:44:08.678308+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ASN1Entity\r\tinstanceVariableNames: \'symbol module\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1Entity,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Entity,						#isMetaSide : false					},					#name : #symbol,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Entity,						#isMetaSide : false					},					#name : #module,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1Entity class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1Entity class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1Entity,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ],		#time : DateAndTime [ '2018-08-16T16:44:08.686124+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Entity',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Entity subclass: #ASN1Type\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1Type,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1Type class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1Type class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1Type,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ],		#time : DateAndTime [ '2018-08-16T16:44:08.691473+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Type',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Type subclass: #ASN1BasicType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1BasicType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1BasicType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1BasicType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1BasicType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ],		#time : DateAndTime [ '2018-08-16T16:44:08.702878+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1BasicType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1BasicType subclass: #ASN1AnyDefinedByType\r\tinstanceVariableNames: \'definedBy typeMap defaultType\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1AnyDefinedByType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1AnyDefinedByType,						#isMetaSide : false					},					#name : #definedBy,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1AnyDefinedByType,						#isMetaSide : false					},					#name : #typeMap,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1AnyDefinedByType,						#isMetaSide : false					},					#name : #defaultType,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1AnyDefinedByType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1AnyDefinedByType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1AnyDefinedByType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ],		#time : DateAndTime [ '2018-08-16T16:44:08.708014+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1BasicType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1BasicType subclass: #ASN1AnyType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1AnyType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1AnyType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1AnyType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1AnyType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ],		#time : DateAndTime [ '2018-08-16T16:44:08.717179+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1BasicType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1BasicType subclass: #ASN1BooleanType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1BooleanType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1BooleanType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1BooleanType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1BooleanType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ],		#time : DateAndTime [ '2018-08-16T16:44:08.722665+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1BasicType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1BasicType subclass: #ASN1EndOfIndefiniteLengthType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1EndOfIndefiniteLengthType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1EndOfIndefiniteLengthType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1EndOfIndefiniteLengthType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1EndOfIndefiniteLengthType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ],		#time : DateAndTime [ '2018-08-16T16:44:08.72781+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1BasicType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1BasicType subclass: #ASN1IntegerType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1IntegerType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1IntegerType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1IntegerType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1IntegerType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ],		#time : DateAndTime [ '2018-08-16T16:44:08.733425+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1BasicType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1BasicType subclass: #ASN1NullType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1NullType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1NullType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1NullType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1NullType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ],		#time : DateAndTime [ '2018-08-16T16:44:08.739456+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1BasicType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1BasicType subclass: #ASN1ObjectIdentifierType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1ObjectIdentifierType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1ObjectIdentifierType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1ObjectIdentifierType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1ObjectIdentifierType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ],		#time : DateAndTime [ '2018-08-16T16:44:08.745478+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1BasicType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1BasicType subclass: #ASN1OctetsType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1OctetsType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1OctetsType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1OctetsType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1OctetsType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ],		#time : DateAndTime [ '2018-08-16T16:44:08.750564+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1OctetsType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1OctetsType subclass: #ASN1BitStringType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1BitStringType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1BitStringType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1BitStringType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1BitStringType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ],		#time : DateAndTime [ '2018-08-16T16:44:08.755598+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1OctetsType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1OctetsType subclass: #ASN1ByteArrayType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1ByteArrayType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1ByteArrayType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1ByteArrayType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1ByteArrayType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ],		#time : DateAndTime [ '2018-08-16T16:44:08.760613+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1OctetsType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1OctetsType subclass: #ASN1StringType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1StringType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1StringType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1StringType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1StringType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ],		#time : DateAndTime [ '2018-08-16T16:44:08.77336+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1OctetsType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1OctetsType subclass: #ASN1WrappedStringType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1WrappedStringType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1WrappedStringType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1WrappedStringType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1WrappedStringType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ],		#time : DateAndTime [ '2018-08-16T16:44:08.77844+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1WrappedStringType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1WrappedStringType subclass: #ASN1BMPStringType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1BMPStringType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1BMPStringType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1BMPStringType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1BMPStringType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ],		#time : DateAndTime [ '2018-08-16T16:44:08.784011+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1WrappedStringType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1WrappedStringType subclass: #ASN1GeneralStringType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1GeneralStringType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1GeneralStringType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1GeneralStringType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1GeneralStringType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ],		#time : DateAndTime [ '2018-08-16T16:44:08.788804+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1WrappedStringType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1WrappedStringType subclass: #ASN1IA5StringType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1IA5StringType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1IA5StringType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1IA5StringType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1IA5StringType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ],		#time : DateAndTime [ '2018-08-16T16:44:08.794528+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1WrappedStringType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1WrappedStringType subclass: #ASN1PrintableStringType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1PrintableStringType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1PrintableStringType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1PrintableStringType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1PrintableStringType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ],		#time : DateAndTime [ '2018-08-16T16:44:08.800824+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1WrappedStringType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1WrappedStringType subclass: #ASN1TeletexStringType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1TeletexStringType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1TeletexStringType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1TeletexStringType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1TeletexStringType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ],		#time : DateAndTime [ '2018-08-16T16:44:08.806822+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1WrappedStringType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1WrappedStringType subclass: #ASN1UniversalStringType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1UniversalStringType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1UniversalStringType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1UniversalStringType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1UniversalStringType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ],		#time : DateAndTime [ '2018-08-16T16:44:08.811679+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1WrappedStringType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1WrappedStringType subclass: #ASN1VisibleStringType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1VisibleStringType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1VisibleStringType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1VisibleStringType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1VisibleStringType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ],		#time : DateAndTime [ '2018-08-16T16:44:08.816584+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1BasicType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1BasicType subclass: #ASN1UTCTimeType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1UTCTimeType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1UTCTimeType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1UTCTimeType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1UTCTimeType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ],		#time : DateAndTime [ '2018-08-16T16:44:08.821765+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Type',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Type subclass: #ASN1ConstructedType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1ConstructedType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1ConstructedType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1ConstructedType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1ConstructedType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ],		#time : DateAndTime [ '2018-08-16T16:44:08.828158+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1ConstructedType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1ConstructedType subclass: #ASN1StructuredType\r\tinstanceVariableNames: \'elements\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1StructuredType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1StructuredType,						#isMetaSide : false					},					#name : #elements,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1StructuredType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1StructuredType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1StructuredType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ],		#time : DateAndTime [ '2018-08-16T16:44:08.835105+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1StructuredType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1StructuredType subclass: #ASN1ChoiceType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1ChoiceType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1ChoiceType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1ChoiceType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1ChoiceType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ],		#time : DateAndTime [ '2018-08-16T16:44:08.84828+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1StructuredType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1StructuredType subclass: #ASN1MappedType\r\tinstanceVariableNames: \'mapping\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1MappedType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1MappedType,						#isMetaSide : false					},					#name : #mapping,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1MappedType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1MappedType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1MappedType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ],		#time : DateAndTime [ '2018-08-16T16:44:08.856564+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1MappedType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1MappedType subclass: #ASN1MappedSequenceType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1MappedSequenceType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1MappedSequenceType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1MappedSequenceType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1MappedSequenceType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ],		#time : DateAndTime [ '2018-08-16T16:44:08.864912+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1MappedType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1MappedType subclass: #ASN1MappedSetType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1MappedSetType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1MappedSetType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1MappedSetType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1MappedSetType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ],		#time : DateAndTime [ '2018-08-16T16:44:08.872095+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1ConstructedType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1ConstructedType subclass: #ASN1UnmappedType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1UnmappedType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1UnmappedType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1UnmappedType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1UnmappedType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ],		#time : DateAndTime [ '2018-08-16T16:44:08.878697+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1UnmappedType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1UnmappedType subclass: #ASN1SequenceType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1SequenceType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1SequenceType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1SequenceType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1SequenceType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ],		#time : DateAndTime [ '2018-08-16T16:44:08.884531+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1UnmappedType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1UnmappedType subclass: #ASN1SetType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1SetType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1SetType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1SetType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1SetType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ],		#time : DateAndTime [ '2018-08-16T16:44:08.892037+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1ConstructedType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1ConstructedType subclass: #ASN1UnstructuredType\r\tinstanceVariableNames: \'elementType\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1UnstructuredType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1UnstructuredType,						#isMetaSide : false					},					#name : #elementType,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1UnstructuredType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1UnstructuredType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1UnstructuredType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ],		#time : DateAndTime [ '2018-08-16T16:44:08.899772+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1UnstructuredType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1UnstructuredType subclass: #ASN1SequenceOfType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1SequenceOfType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1SequenceOfType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1SequenceOfType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1SequenceOfType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ],		#time : DateAndTime [ '2018-08-16T16:44:08.905398+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1UnstructuredType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1UnstructuredType subclass: #ASN1SetOfType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1SetOfType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1SetOfType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1SetOfType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1SetOfType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ],		#time : DateAndTime [ '2018-08-16T16:44:08.911173+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Type',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Type subclass: #ASN1SubType\r\tinstanceVariableNames: \'parent tag\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1SubType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1SubType,						#isMetaSide : false					},					#name : #parent,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1SubType,						#isMetaSide : false					},					#name : #tag,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1SubType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1SubType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1SubType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ],		#time : DateAndTime [ '2018-08-16T16:44:08.922667+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1SubType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1SubType subclass: #ASN1AssignmentSubType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1AssignmentSubType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1AssignmentSubType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1AssignmentSubType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1AssignmentSubType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ],		#time : DateAndTime [ '2018-08-16T16:44:08.927423+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1SubType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1SubType subclass: #ASN1ExplicitSubType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1ExplicitSubType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1ExplicitSubType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1ExplicitSubType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1ExplicitSubType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ],		#time : DateAndTime [ '2018-08-16T16:44:08.933894+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1SubType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1SubType subclass: #ASN1ImplicitSubType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1ImplicitSubType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1ImplicitSubType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1ImplicitSubType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1ImplicitSubType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ],		#time : DateAndTime [ '2018-08-16T16:44:08.939458+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1SubType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1SubType subclass: #ASN1MappingSubType\r\tinstanceVariableNames: \'mapping mappingSymbol\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1MappingSubType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1MappingSubType,						#isMetaSide : false					},					#name : #mapping,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1MappingSubType,						#isMetaSide : false					},					#name : #mappingSymbol,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1MappingSubType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1MappingSubType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1MappingSubType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ],		#time : DateAndTime [ '2018-08-16T16:44:08.945129+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Type',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Type subclass: #ASN1WrapperType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1WrapperType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1WrapperType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1WrapperType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1WrapperType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ],		#time : DateAndTime [ '2018-08-16T16:44:08.950998+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1WrapperType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1WrapperType subclass: #ASN1WrapperConstructedType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1WrapperConstructedType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1WrapperConstructedType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1WrapperConstructedType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1WrapperConstructedType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ],		#time : DateAndTime [ '2018-08-16T16:44:08.956415+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1WrapperType',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1WrapperType subclass: #ASN1WrapperPrimitiveType\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1WrapperPrimitiveType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1WrapperPrimitiveType class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1WrapperPrimitiveType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1WrapperPrimitiveType,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ],		#time : DateAndTime [ '2018-08-16T16:44:08.962515+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Entity',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Entity subclass: #ASN1TypeReference\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Types\''			},			#name : #ASN1TypeReference,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1TypeReference class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1TypeReference class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1TypeReference,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Types,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ],		#time : DateAndTime [ '2018-08-16T16:44:08.967908+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ASN1Module\r\tinstanceVariableNames: \'name definitions imports\'\r\tclassVariableNames: \'Modules\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1\''			},			#name : #ASN1Module,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Module,						#isMetaSide : false					},					#name : #name,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Module,						#isMetaSide : false					},					#name : #definitions,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Module,						#isMetaSide : false					},					#name : #imports,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1Module class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1Module class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1Module,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Module,						#isMetaSide : false					},					#name : #Modules,					#parent : @8				}			],			#category : #Cryptography-ASN1,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ],		#time : DateAndTime [ '2018-08-16T16:44:08.973081+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ASN1Pragma\r\tinstanceVariableNames: \'pragma asn1name systemClass method\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-DefinitionModel\''			},			#name : #ASN1Pragma,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Pragma,						#isMetaSide : false					},					#name : #pragma,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Pragma,						#isMetaSide : false					},					#name : #asn1name,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Pragma,						#isMetaSide : false					},					#name : #systemClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Pragma,						#isMetaSide : false					},					#name : #method,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1Pragma class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1Pragma class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1Pragma,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-DefinitionModel,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ],		#time : DateAndTime [ '2018-08-16T16:44:08.978669+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Pragma',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Pragma subclass: #ASN1PragmaAccessor\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-DefinitionModel\''			},			#name : #ASN1PragmaAccessor,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1PragmaAccessor class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1PragmaAccessor class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1PragmaAccessor,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-DefinitionModel,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ],		#time : DateAndTime [ '2018-08-16T16:44:08.983614+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Pragma',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Pragma subclass: #ASN1PragmaMutator\r\tinstanceVariableNames: \'classOfMutatorArgument\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-DefinitionModel\''			},			#name : #ASN1PragmaMutator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1PragmaMutator,						#isMetaSide : false					},					#name : #classOfMutatorArgument,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1PragmaMutator class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1PragmaMutator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1PragmaMutator,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-DefinitionModel,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '132' ],		#self : OmReference [ '133' ],		#time : DateAndTime [ '2018-08-16T16:44:08.994665+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ASN1Stream\r\tinstanceVariableNames: \'stream currentTag\'\r\tclassVariableNames: \'TagToTypeDispatchTable\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1\''			},			#name : #ASN1Stream,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Stream,						#isMetaSide : false					},					#name : #stream,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Stream,						#isMetaSide : false					},					#name : #currentTag,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1Stream class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1Stream class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1Stream,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1Stream,						#isMetaSide : false					},					#name : #TagToTypeDispatchTable,					#parent : @8				}			],			#category : #Cryptography-ASN1,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '133' ],		#self : OmReference [ '134' ],		#time : DateAndTime [ '2018-08-16T16:44:09.000527+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ASN1TestModel\r\tinstanceVariableNames: \'testSlot1 testSlot2\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-Tests\''			},			#name : #ASN1TestModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1TestModel,						#isMetaSide : false					},					#name : #testSlot1,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1TestModel,						#isMetaSide : false					},					#name : #testSlot2,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1TestModel class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1TestModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1TestModel,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-Tests,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '134' ],		#self : OmReference [ '135' ],		#time : DateAndTime [ '2018-08-16T16:44:09.00571+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ASN1Value\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1Value,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1Value class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1Value class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1Value,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '135' ],		#self : OmReference [ '136' ],		#time : DateAndTime [ '2018-08-16T16:44:09.01047+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Value',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Value subclass: #ASN1AbstractString\r\tinstanceVariableNames: \'string\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1AbstractString,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1AbstractString,						#isMetaSide : false					},					#name : #string,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1AbstractString class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1AbstractString class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1AbstractString,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '136' ],		#self : OmReference [ '137' ],		#time : DateAndTime [ '2018-08-16T16:44:09.018046+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1AbstractString',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1AbstractString subclass: #ASN1BMPString\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1BMPString,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1BMPString class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1BMPString class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1BMPString,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '137' ],		#self : OmReference [ '138' ],		#time : DateAndTime [ '2018-08-16T16:44:09.023583+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1AbstractString',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1AbstractString subclass: #ASN1GeneralString\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1GeneralString,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1GeneralString class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1GeneralString class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1GeneralString,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '138' ],		#self : OmReference [ '139' ],		#time : DateAndTime [ '2018-08-16T16:44:09.028821+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1AbstractString',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1AbstractString subclass: #ASN1IA5String\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1IA5String,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1IA5String class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1IA5String class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1IA5String,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '139' ],		#self : OmReference [ '140' ],		#time : DateAndTime [ '2018-08-16T16:44:09.033908+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1AbstractString',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1AbstractString subclass: #ASN1PrintableString\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1PrintableString,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1PrintableString class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1PrintableString class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1PrintableString,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '140' ],		#self : OmReference [ '141' ],		#time : DateAndTime [ '2018-08-16T16:44:09.040581+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1AbstractString',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1AbstractString subclass: #ASN1TeletexString\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1TeletexString,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1TeletexString class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1TeletexString class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1TeletexString,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '141' ],		#self : OmReference [ '142' ],		#time : DateAndTime [ '2018-08-16T16:44:09.046913+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1AbstractString',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1AbstractString subclass: #ASN1UniversalString\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1UniversalString,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1UniversalString class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1UniversalString class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1UniversalString,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '142' ],		#self : OmReference [ '143' ],		#time : DateAndTime [ '2018-08-16T16:44:09.051928+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1AbstractString',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1AbstractString subclass: #ASN1VisibleString\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1VisibleString,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1VisibleString class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1VisibleString class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1VisibleString,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '143' ],		#self : OmReference [ '144' ],		#time : DateAndTime [ '2018-08-16T16:44:09.061701+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Value',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Value subclass: #ASN1BitString\r\tinstanceVariableNames: \'bytes bitsPadding\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1BitString,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1BitString,						#isMetaSide : false					},					#name : #bytes,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1BitString,						#isMetaSide : false					},					#name : #bitsPadding,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1BitString class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1BitString class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1BitString,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '144' ],		#self : OmReference [ '145' ],		#time : DateAndTime [ '2018-08-16T16:44:09.068188+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Value',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Value subclass: #ASN1ExplicitContextValue\r\tinstanceVariableNames: \'tagIndex tagValue tagIsPrimitive\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1ExplicitContextValue,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1ExplicitContextValue,						#isMetaSide : false					},					#name : #tagIndex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1ExplicitContextValue,						#isMetaSide : false					},					#name : #tagValue,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1ExplicitContextValue,						#isMetaSide : false					},					#name : #tagIsPrimitive,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1ExplicitContextValue class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1ExplicitContextValue class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1ExplicitContextValue,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '145' ],		#self : OmReference [ '146' ],		#time : DateAndTime [ '2018-08-16T16:44:09.074437+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Value',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Value subclass: #ASN1FieldDefinition\r\tinstanceVariableNames: \'fieldName tagIndex tagType explicitFieldDefinition implicitFieldDefinition defaultValue isExplicit isOptional\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-DefinitionModel\''			},			#name : #ASN1FieldDefinition,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1FieldDefinition,						#isMetaSide : false					},					#name : #fieldName,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1FieldDefinition,						#isMetaSide : false					},					#name : #tagIndex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1FieldDefinition,						#isMetaSide : false					},					#name : #tagType,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1FieldDefinition,						#isMetaSide : false					},					#name : #explicitFieldDefinition,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1FieldDefinition,						#isMetaSide : false					},					#name : #implicitFieldDefinition,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1FieldDefinition,						#isMetaSide : false					},					#name : #defaultValue,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1FieldDefinition,						#isMetaSide : false					},					#name : #isExplicit,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1FieldDefinition,						#isMetaSide : false					},					#name : #isOptional,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1FieldDefinition class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1FieldDefinition class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1FieldDefinition,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-DefinitionModel,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '146' ],		#self : OmReference [ '147' ],		#time : DateAndTime [ '2018-08-16T16:44:09.079677+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Value',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Value subclass: #ASN1Null\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1Null,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1Null class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1Null class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1Null,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '147' ],		#self : OmReference [ '148' ],		#time : DateAndTime [ '2018-08-16T16:44:09.086461+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ASN1Value',				#traitCompositionSource : '{}',				#definitionSource : 'ASN1Value subclass: #ASN1ObjectId\r\tinstanceVariableNames: \'oid description\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #ASN1ObjectId,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1ObjectId,						#isMetaSide : false					},					#name : #oid,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ASN1ObjectId,						#isMetaSide : false					},					#name : #description,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ASN1ObjectId class\r\tinstanceVariableNames: \'\''				},				#name : #'ASN1ObjectId class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ASN1ObjectId,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '148' ],		#self : OmReference [ '149' ],		#time : DateAndTime [ '2018-08-16T16:44:09.092022+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DSAPrivateKeyFileReader\r\tinstanceVariableNames: \'bytes decryptedBytes iv password\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Readers\''			},			#name : #DSAPrivateKeyFileReader,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DSAPrivateKeyFileReader,						#isMetaSide : false					},					#name : #bytes,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DSAPrivateKeyFileReader,						#isMetaSide : false					},					#name : #decryptedBytes,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DSAPrivateKeyFileReader,						#isMetaSide : false					},					#name : #iv,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DSAPrivateKeyFileReader,						#isMetaSide : false					},					#name : #password,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DSAPrivateKeyFileReader class\r\tinstanceVariableNames: \'\''				},				#name : #'DSAPrivateKeyFileReader class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DSAPrivateKeyFileReader,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Readers,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '149' ],		#self : OmReference [ '150' ],		#time : DateAndTime [ '2018-08-16T16:44:09.098145+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #OpenSSLKeyDerivationFunction\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Readers\''			},			#name : #OpenSSLKeyDerivationFunction,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'OpenSSLKeyDerivationFunction class\r\tinstanceVariableNames: \'\''				},				#name : #'OpenSSLKeyDerivationFunction class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #OpenSSLKeyDerivationFunction,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Readers,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '150' ],		#self : OmReference [ '151' ],		#time : DateAndTime [ '2018-08-16T16:44:09.104784+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pkcs12CRLBag\r\tinstanceVariableNames: \'crlId crlValue\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #Pkcs12CRLBag,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12CRLBag,						#isMetaSide : false					},					#name : #crlId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12CRLBag,						#isMetaSide : false					},					#name : #crlValue,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pkcs12CRLBag class\r\tinstanceVariableNames: \'\''				},				#name : #'Pkcs12CRLBag class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pkcs12CRLBag,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '151' ],		#self : OmReference [ '152' ],		#time : DateAndTime [ '2018-08-16T16:44:09.109875+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pkcs12CertBag\r\tinstanceVariableNames: \'certId certValue\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #Pkcs12CertBag,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12CertBag,						#isMetaSide : false					},					#name : #certId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12CertBag,						#isMetaSide : false					},					#name : #certValue,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pkcs12CertBag class\r\tinstanceVariableNames: \'\''				},				#name : #'Pkcs12CertBag class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pkcs12CertBag,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '152' ],		#self : OmReference [ '153' ],		#time : DateAndTime [ '2018-08-16T16:44:09.114997+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pkcs12KeyDerivationFunction\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #Pkcs12KeyDerivationFunction,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pkcs12KeyDerivationFunction class\r\tinstanceVariableNames: \'\''				},				#name : #'Pkcs12KeyDerivationFunction class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pkcs12KeyDerivationFunction,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '153' ],		#self : OmReference [ '154' ],		#time : DateAndTime [ '2018-08-16T16:44:09.120274+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pkcs12MacData\r\tinstanceVariableNames: \'mac macSalt iterations\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #Pkcs12MacData,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12MacData,						#isMetaSide : false					},					#name : #mac,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12MacData,						#isMetaSide : false					},					#name : #macSalt,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12MacData,						#isMetaSide : false					},					#name : #iterations,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pkcs12MacData class\r\tinstanceVariableNames: \'\''				},				#name : #'Pkcs12MacData class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pkcs12MacData,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '154' ],		#self : OmReference [ '155' ],		#time : DateAndTime [ '2018-08-16T16:44:09.133311+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pkcs12PFX\r\tinstanceVariableNames: \'version authSafe macData\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #Pkcs12PFX,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12PFX,						#isMetaSide : false					},					#name : #version,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12PFX,						#isMetaSide : false					},					#name : #authSafe,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12PFX,						#isMetaSide : false					},					#name : #macData,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pkcs12PFX class\r\tinstanceVariableNames: \'\''				},				#name : #'Pkcs12PFX class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pkcs12PFX,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '155' ],		#self : OmReference [ '156' ],		#time : DateAndTime [ '2018-08-16T16:44:09.138916+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pkcs12PrivateKeyFileReader\r\tinstanceVariableNames: \'pfx privateKeys certs password\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #Pkcs12PrivateKeyFileReader,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12PrivateKeyFileReader,						#isMetaSide : false					},					#name : #pfx,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12PrivateKeyFileReader,						#isMetaSide : false					},					#name : #privateKeys,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12PrivateKeyFileReader,						#isMetaSide : false					},					#name : #certs,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12PrivateKeyFileReader,						#isMetaSide : false					},					#name : #password,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pkcs12PrivateKeyFileReader class\r\tinstanceVariableNames: \'\''				},				#name : #'Pkcs12PrivateKeyFileReader class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pkcs12PrivateKeyFileReader,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '156' ],		#self : OmReference [ '157' ],		#time : DateAndTime [ '2018-08-16T16:44:09.144202+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pkcs12SafeBag\r\tinstanceVariableNames: \'bagId bagValue bagAttributes\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #Pkcs12SafeBag,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12SafeBag,						#isMetaSide : false					},					#name : #bagId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12SafeBag,						#isMetaSide : false					},					#name : #bagValue,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12SafeBag,						#isMetaSide : false					},					#name : #bagAttributes,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pkcs12SafeBag class\r\tinstanceVariableNames: \'\''				},				#name : #'Pkcs12SafeBag class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pkcs12SafeBag,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '157' ],		#self : OmReference [ '158' ],		#time : DateAndTime [ '2018-08-16T16:44:09.149621+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pkcs12SecretBag\r\tinstanceVariableNames: \'secretId secretValue\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #Pkcs12SecretBag,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12SecretBag,						#isMetaSide : false					},					#name : #secretId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs12SecretBag,						#isMetaSide : false					},					#name : #secretValue,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pkcs12SecretBag class\r\tinstanceVariableNames: \'\''				},				#name : #'Pkcs12SecretBag class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pkcs12SecretBag,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '158' ],		#self : OmReference [ '159' ],		#time : DateAndTime [ '2018-08-16T16:44:09.155741+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pkcs8EncryptedPrivateKeyInfo\r\tinstanceVariableNames: \'encryptionAlgorithm encryptedData\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #Pkcs8EncryptedPrivateKeyInfo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs8EncryptedPrivateKeyInfo,						#isMetaSide : false					},					#name : #encryptionAlgorithm,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs8EncryptedPrivateKeyInfo,						#isMetaSide : false					},					#name : #encryptedData,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pkcs8EncryptedPrivateKeyInfo class\r\tinstanceVariableNames: \'\''				},				#name : #'Pkcs8EncryptedPrivateKeyInfo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pkcs8EncryptedPrivateKeyInfo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '159' ],		#self : OmReference [ '160' ],		#time : DateAndTime [ '2018-08-16T16:44:09.162011+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pkcs8PrivateKeyInfo\r\tinstanceVariableNames: \'version privateKeyAlgorithm privateKey attributes\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #Pkcs8PrivateKeyInfo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs8PrivateKeyInfo,						#isMetaSide : false					},					#name : #version,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs8PrivateKeyInfo,						#isMetaSide : false					},					#name : #privateKeyAlgorithm,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs8PrivateKeyInfo,						#isMetaSide : false					},					#name : #privateKey,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pkcs8PrivateKeyInfo,						#isMetaSide : false					},					#name : #attributes,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pkcs8PrivateKeyInfo class\r\tinstanceVariableNames: \'\''				},				#name : #'Pkcs8PrivateKeyInfo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pkcs8PrivateKeyInfo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '160' ],		#self : OmReference [ '161' ],		#time : DateAndTime [ '2018-08-16T16:44:09.167091+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PkcsContentInfo\r\tinstanceVariableNames: \'contentType content\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #PkcsContentInfo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PkcsContentInfo,						#isMetaSide : false					},					#name : #contentType,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PkcsContentInfo,						#isMetaSide : false					},					#name : #content,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PkcsContentInfo class\r\tinstanceVariableNames: \'\''				},				#name : #'PkcsContentInfo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PkcsContentInfo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '161' ],		#self : OmReference [ '162' ],		#time : DateAndTime [ '2018-08-16T16:44:09.172223+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PkcsDigestInfo\r\tinstanceVariableNames: \'digestAlgorithm digest\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #PkcsDigestInfo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PkcsDigestInfo,						#isMetaSide : false					},					#name : #digestAlgorithm,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PkcsDigestInfo,						#isMetaSide : false					},					#name : #digest,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PkcsDigestInfo class\r\tinstanceVariableNames: \'\''				},				#name : #'PkcsDigestInfo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PkcsDigestInfo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '162' ],		#self : OmReference [ '163' ],		#time : DateAndTime [ '2018-08-16T16:44:09.177341+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PkcsEncryptedContentInfo\r\tinstanceVariableNames: \'contentType contentEncryptionAlgorithm encryptedContent\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #PkcsEncryptedContentInfo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PkcsEncryptedContentInfo,						#isMetaSide : false					},					#name : #contentType,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PkcsEncryptedContentInfo,						#isMetaSide : false					},					#name : #contentEncryptionAlgorithm,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PkcsEncryptedContentInfo,						#isMetaSide : false					},					#name : #encryptedContent,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PkcsEncryptedContentInfo class\r\tinstanceVariableNames: \'\''				},				#name : #'PkcsEncryptedContentInfo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PkcsEncryptedContentInfo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '163' ],		#self : OmReference [ '164' ],		#time : DateAndTime [ '2018-08-16T16:44:09.182559+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PkcsEncryptedData\r\tinstanceVariableNames: \'version encryptedContentInfo\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-PKCS12\''			},			#name : #PkcsEncryptedData,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PkcsEncryptedData,						#isMetaSide : false					},					#name : #version,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PkcsEncryptedData,						#isMetaSide : false					},					#name : #encryptedContentInfo,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PkcsEncryptedData class\r\tinstanceVariableNames: \'\''				},				#name : #'PkcsEncryptedData class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PkcsEncryptedData,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-PKCS12,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '164' ],		#self : OmReference [ '165' ],		#time : DateAndTime [ '2018-08-16T16:44:09.189295+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #RSAPrivateKeyFileReader\r\tinstanceVariableNames: \'bytes decryptedBytes iv password\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Readers\''			},			#name : #RSAPrivateKeyFileReader,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RSAPrivateKeyFileReader,						#isMetaSide : false					},					#name : #bytes,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RSAPrivateKeyFileReader,						#isMetaSide : false					},					#name : #decryptedBytes,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RSAPrivateKeyFileReader,						#isMetaSide : false					},					#name : #iv,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RSAPrivateKeyFileReader,						#isMetaSide : false					},					#name : #password,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RSAPrivateKeyFileReader class\r\tinstanceVariableNames: \'\''				},				#name : #'RSAPrivateKeyFileReader class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RSAPrivateKeyFileReader,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Readers,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '165' ],		#self : OmReference [ '166' ],		#time : DateAndTime [ '2018-08-16T16:44:09.200126+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #RSAPublicKeyFileReader\r\tinstanceVariableNames: \'bytes\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Readers\''			},			#name : #RSAPublicKeyFileReader,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RSAPublicKeyFileReader,						#isMetaSide : false					},					#name : #bytes,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RSAPublicKeyFileReader class\r\tinstanceVariableNames: \'\''				},				#name : #'RSAPublicKeyFileReader class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RSAPublicKeyFileReader,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Readers,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '166' ],		#self : OmReference [ '167' ],		#time : DateAndTime [ '2018-08-16T16:44:09.205414+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509AccessDescription\r\tinstanceVariableNames: \'accessMethod accessLocation\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509AccessDescription,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509AccessDescription,						#isMetaSide : false					},					#name : #accessMethod,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509AccessDescription,						#isMetaSide : false					},					#name : #accessLocation,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509AccessDescription class\r\tinstanceVariableNames: \'\''				},				#name : #'X509AccessDescription class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509AccessDescription,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '167' ],		#self : OmReference [ '168' ],		#time : DateAndTime [ '2018-08-16T16:44:09.210513+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509AlgorithmIdentifier\r\tinstanceVariableNames: \'oid parameters hasParameters\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X509AlgorithmIdentifier,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509AlgorithmIdentifier,						#isMetaSide : false					},					#name : #oid,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509AlgorithmIdentifier,						#isMetaSide : false					},					#name : #parameters,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509AlgorithmIdentifier,						#isMetaSide : false					},					#name : #hasParameters,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509AlgorithmIdentifier class\r\tinstanceVariableNames: \'\''				},				#name : #'X509AlgorithmIdentifier class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509AlgorithmIdentifier,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '168' ],		#self : OmReference [ '169' ],		#time : DateAndTime [ '2018-08-16T16:44:09.218926+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509AnotherName\r\tinstanceVariableNames: \'typeId value\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509AnotherName,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509AnotherName,						#isMetaSide : false					},					#name : #typeId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509AnotherName,						#isMetaSide : false					},					#name : #value,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509AnotherName class\r\tinstanceVariableNames: \'\''				},				#name : #'X509AnotherName class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509AnotherName,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '169' ],		#self : OmReference [ '170' ],		#time : DateAndTime [ '2018-08-16T16:44:09.22483+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509AuthorityKeyIdentifier\r\tinstanceVariableNames: \'keyIdentifier certIssuer certSerialNumber\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509AuthorityKeyIdentifier,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509AuthorityKeyIdentifier,						#isMetaSide : false					},					#name : #keyIdentifier,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509AuthorityKeyIdentifier,						#isMetaSide : false					},					#name : #certIssuer,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509AuthorityKeyIdentifier,						#isMetaSide : false					},					#name : #certSerialNumber,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509AuthorityKeyIdentifier class\r\tinstanceVariableNames: \'\''				},				#name : #'X509AuthorityKeyIdentifier class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509AuthorityKeyIdentifier,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '170' ],		#self : OmReference [ '171' ],		#time : DateAndTime [ '2018-08-16T16:44:09.230003+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509BasicConstraints\r\tinstanceVariableNames: \'ca pathLengthConstraint\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509BasicConstraints,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509BasicConstraints,						#isMetaSide : false					},					#name : #ca,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509BasicConstraints,						#isMetaSide : false					},					#name : #pathLengthConstraint,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509BasicConstraints class\r\tinstanceVariableNames: \'\''				},				#name : #'X509BasicConstraints class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509BasicConstraints,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '171' ],		#self : OmReference [ '172' ],		#time : DateAndTime [ '2018-08-16T16:44:09.235591+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509Certificate\r\tinstanceVariableNames: \'tbsCertificate signatureAlgorithm signature\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X509Certificate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509Certificate,						#isMetaSide : false					},					#name : #tbsCertificate,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509Certificate,						#isMetaSide : false					},					#name : #signatureAlgorithm,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509Certificate,						#isMetaSide : false					},					#name : #signature,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509Certificate class\r\tinstanceVariableNames: \'\''				},				#name : #'X509Certificate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509Certificate,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '172' ],		#self : OmReference [ '173' ],		#time : DateAndTime [ '2018-08-16T16:44:09.241484+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509CertificateDerReader\r\tinstanceVariableNames: \'derBytes\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Readers\''			},			#name : #X509CertificateDerReader,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509CertificateDerReader,						#isMetaSide : false					},					#name : #derBytes,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509CertificateDerReader class\r\tinstanceVariableNames: \'\''				},				#name : #'X509CertificateDerReader class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509CertificateDerReader,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Readers,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '173' ],		#self : OmReference [ '174' ],		#time : DateAndTime [ '2018-08-16T16:44:09.248313+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509CertificateExtension\r\tinstanceVariableNames: \'extnId extnCritical extnValue decodedExtension\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509CertificateExtension,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509CertificateExtension,						#isMetaSide : false					},					#name : #extnId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509CertificateExtension,						#isMetaSide : false					},					#name : #extnCritical,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509CertificateExtension,						#isMetaSide : false					},					#name : #extnValue,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509CertificateExtension,						#isMetaSide : false					},					#name : #decodedExtension,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509CertificateExtension class\r\tinstanceVariableNames: \'\''				},				#name : #'X509CertificateExtension class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509CertificateExtension,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '174' ],		#self : OmReference [ '175' ],		#time : DateAndTime [ '2018-08-16T16:44:09.253993+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509DistributionPoint\r\tinstanceVariableNames: \'distributionPoint reasons cRLIssuer\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509DistributionPoint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509DistributionPoint,						#isMetaSide : false					},					#name : #distributionPoint,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509DistributionPoint,						#isMetaSide : false					},					#name : #reasons,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509DistributionPoint,						#isMetaSide : false					},					#name : #cRLIssuer,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509DistributionPoint class\r\tinstanceVariableNames: \'\''				},				#name : #'X509DistributionPoint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509DistributionPoint,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '175' ],		#self : OmReference [ '176' ],		#time : DateAndTime [ '2018-08-16T16:44:09.259064+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509EDIPartyName\r\tinstanceVariableNames: \'nameAssigner partyName\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509EDIPartyName,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509EDIPartyName,						#isMetaSide : false					},					#name : #nameAssigner,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509EDIPartyName,						#isMetaSide : false					},					#name : #partyName,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509EDIPartyName class\r\tinstanceVariableNames: \'\''				},				#name : #'X509EDIPartyName class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509EDIPartyName,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '176' ],		#self : OmReference [ '177' ],		#time : DateAndTime [ '2018-08-16T16:44:09.264457+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509GeneralSubtree\r\tinstanceVariableNames: \'base minimum maximum\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509GeneralSubtree,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509GeneralSubtree,						#isMetaSide : false					},					#name : #base,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509GeneralSubtree,						#isMetaSide : false					},					#name : #minimum,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509GeneralSubtree,						#isMetaSide : false					},					#name : #maximum,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509GeneralSubtree class\r\tinstanceVariableNames: \'\''				},				#name : #'X509GeneralSubtree class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509GeneralSubtree,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '177' ],		#self : OmReference [ '178' ],		#time : DateAndTime [ '2018-08-16T16:44:09.275504+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509IssuingDistributionPoint\r\tinstanceVariableNames: \'distributionPoint onlyContainsUserCerts onlyContainsCACerts onlySomeReasons indirectCRL onlyContainsAttributeCerts\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509IssuingDistributionPoint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509IssuingDistributionPoint,						#isMetaSide : false					},					#name : #distributionPoint,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509IssuingDistributionPoint,						#isMetaSide : false					},					#name : #onlyContainsUserCerts,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509IssuingDistributionPoint,						#isMetaSide : false					},					#name : #onlyContainsCACerts,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509IssuingDistributionPoint,						#isMetaSide : false					},					#name : #onlySomeReasons,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509IssuingDistributionPoint,						#isMetaSide : false					},					#name : #indirectCRL,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509IssuingDistributionPoint,						#isMetaSide : false					},					#name : #onlyContainsAttributeCerts,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509IssuingDistributionPoint class\r\tinstanceVariableNames: \'\''				},				#name : #'X509IssuingDistributionPoint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509IssuingDistributionPoint,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '178' ],		#self : OmReference [ '179' ],		#time : DateAndTime [ '2018-08-16T16:44:09.282877+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509NameConstraints\r\tinstanceVariableNames: \'permittedSubtrees excludedSubtrees\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509NameConstraints,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509NameConstraints,						#isMetaSide : false					},					#name : #permittedSubtrees,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509NameConstraints,						#isMetaSide : false					},					#name : #excludedSubtrees,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509NameConstraints class\r\tinstanceVariableNames: \'\''				},				#name : #'X509NameConstraints class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509NameConstraints,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '179' ],		#self : OmReference [ '180' ],		#time : DateAndTime [ '2018-08-16T16:44:09.28826+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509PolicyConstraints\r\tinstanceVariableNames: \'requireExplicitPolicy inhibitPolicyMapping\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509PolicyConstraints,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509PolicyConstraints,						#isMetaSide : false					},					#name : #requireExplicitPolicy,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509PolicyConstraints,						#isMetaSide : false					},					#name : #inhibitPolicyMapping,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509PolicyConstraints class\r\tinstanceVariableNames: \'\''				},				#name : #'X509PolicyConstraints class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509PolicyConstraints,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '180' ],		#self : OmReference [ '181' ],		#time : DateAndTime [ '2018-08-16T16:44:09.293523+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509PolicyInformation\r\tinstanceVariableNames: \'id qualifiers\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509PolicyInformation,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509PolicyInformation,						#isMetaSide : false					},					#name : #id,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509PolicyInformation,						#isMetaSide : false					},					#name : #qualifiers,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509PolicyInformation class\r\tinstanceVariableNames: \'\''				},				#name : #'X509PolicyInformation class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509PolicyInformation,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '181' ],		#self : OmReference [ '182' ],		#time : DateAndTime [ '2018-08-16T16:44:09.299559+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509PolicyMapping\r\tinstanceVariableNames: \'issuerDomainPolicy subjectDomainPolicy\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509PolicyMapping,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509PolicyMapping,						#isMetaSide : false					},					#name : #issuerDomainPolicy,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509PolicyMapping,						#isMetaSide : false					},					#name : #subjectDomainPolicy,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509PolicyMapping class\r\tinstanceVariableNames: \'\''				},				#name : #'X509PolicyMapping class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509PolicyMapping,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '182' ],		#self : OmReference [ '183' ],		#time : DateAndTime [ '2018-08-16T16:44:09.306789+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509PolicyQualifierInfo\r\tinstanceVariableNames: \'id qualifier\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509-Extensions\''			},			#name : #X509PolicyQualifierInfo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509PolicyQualifierInfo,						#isMetaSide : false					},					#name : #id,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509PolicyQualifierInfo,						#isMetaSide : false					},					#name : #qualifier,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509PolicyQualifierInfo class\r\tinstanceVariableNames: \'\''				},				#name : #'X509PolicyQualifierInfo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509PolicyQualifierInfo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509-Extensions,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '183' ],		#self : OmReference [ '184' ],		#time : DateAndTime [ '2018-08-16T16:44:09.312134+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509SubjectPublicKeyInfo\r\tinstanceVariableNames: \'algorithm subjectPublicKey\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X509SubjectPublicKeyInfo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509SubjectPublicKeyInfo,						#isMetaSide : false					},					#name : #algorithm,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509SubjectPublicKeyInfo,						#isMetaSide : false					},					#name : #subjectPublicKey,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509SubjectPublicKeyInfo class\r\tinstanceVariableNames: \'\''				},				#name : #'X509SubjectPublicKeyInfo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509SubjectPublicKeyInfo,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '184' ],		#self : OmReference [ '185' ],		#time : DateAndTime [ '2018-08-16T16:44:09.318055+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509TBSCertificate\r\tinstanceVariableNames: \'version serialNumber signature issuer validity subject subjectPublicKeyInfo extensions\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X509TBSCertificate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509TBSCertificate,						#isMetaSide : false					},					#name : #version,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509TBSCertificate,						#isMetaSide : false					},					#name : #serialNumber,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509TBSCertificate,						#isMetaSide : false					},					#name : #signature,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509TBSCertificate,						#isMetaSide : false					},					#name : #issuer,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509TBSCertificate,						#isMetaSide : false					},					#name : #validity,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509TBSCertificate,						#isMetaSide : false					},					#name : #subject,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509TBSCertificate,						#isMetaSide : false					},					#name : #subjectPublicKeyInfo,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509TBSCertificate,						#isMetaSide : false					},					#name : #extensions,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509TBSCertificate class\r\tinstanceVariableNames: \'\''				},				#name : #'X509TBSCertificate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509TBSCertificate,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '185' ],		#self : OmReference [ '186' ],		#time : DateAndTime [ '2018-08-16T16:44:09.323061+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X509Validity\r\tinstanceVariableNames: \'notBefore notAfter\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X509Validity,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509Validity,						#isMetaSide : false					},					#name : #notBefore,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X509Validity,						#isMetaSide : false					},					#name : #notAfter,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X509Validity class\r\tinstanceVariableNames: \'\''				},				#name : #'X509Validity class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X509Validity,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '186' ],		#self : OmReference [ '187' ],		#time : DateAndTime [ '2018-08-16T16:44:09.328108+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X520AbstractName\r\tinstanceVariableNames: \'string\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X520AbstractName,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X520AbstractName,						#isMetaSide : false					},					#name : #string,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X520AbstractName class\r\tinstanceVariableNames: \'\''				},				#name : #'X520AbstractName class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X520AbstractName,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '187' ],		#self : OmReference [ '188' ],		#time : DateAndTime [ '2018-08-16T16:44:09.334178+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'X520AbstractName',				#traitCompositionSource : '{}',				#definitionSource : 'X520AbstractName subclass: #X520CommonName\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X520CommonName,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X520CommonName class\r\tinstanceVariableNames: \'\''				},				#name : #'X520CommonName class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X520CommonName,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '188' ],		#self : OmReference [ '189' ],		#time : DateAndTime [ '2018-08-16T16:44:09.34457+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'X520AbstractName',				#traitCompositionSource : '{}',				#definitionSource : 'X520AbstractName subclass: #X520CountryName\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X520CountryName,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X520CountryName class\r\tinstanceVariableNames: \'\''				},				#name : #'X520CountryName class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X520CountryName,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '189' ],		#self : OmReference [ '190' ],		#time : DateAndTime [ '2018-08-16T16:44:09.350146+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'X520AbstractName',				#traitCompositionSource : '{}',				#definitionSource : 'X520AbstractName subclass: #X520LocalityName\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X520LocalityName,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X520LocalityName class\r\tinstanceVariableNames: \'\''				},				#name : #'X520LocalityName class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X520LocalityName,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '190' ],		#self : OmReference [ '191' ],		#time : DateAndTime [ '2018-08-16T16:44:09.355323+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'X520AbstractName',				#traitCompositionSource : '{}',				#definitionSource : 'X520AbstractName subclass: #X520Name\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X520Name,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X520Name class\r\tinstanceVariableNames: \'\''				},				#name : #'X520Name class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X520Name,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '191' ],		#self : OmReference [ '192' ],		#time : DateAndTime [ '2018-08-16T16:44:09.361428+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'X520AbstractName',				#traitCompositionSource : '{}',				#definitionSource : 'X520AbstractName subclass: #X520OrganizationName\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X520OrganizationName,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X520OrganizationName class\r\tinstanceVariableNames: \'\''				},				#name : #'X520OrganizationName class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X520OrganizationName,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '192' ],		#self : OmReference [ '193' ],		#time : DateAndTime [ '2018-08-16T16:44:09.36686+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'X520AbstractName',				#traitCompositionSource : '{}',				#definitionSource : 'X520AbstractName subclass: #X520OrganizationalUnitName\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X520OrganizationalUnitName,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X520OrganizationalUnitName class\r\tinstanceVariableNames: \'\''				},				#name : #'X520OrganizationalUnitName class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X520OrganizationalUnitName,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '193' ],		#self : OmReference [ '194' ],		#time : DateAndTime [ '2018-08-16T16:44:09.371876+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'X520AbstractName',				#traitCompositionSource : '{}',				#definitionSource : 'X520AbstractName subclass: #X520Pkcs9EmailAddress\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X520Pkcs9EmailAddress,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X520Pkcs9EmailAddress class\r\tinstanceVariableNames: \'\''				},				#name : #'X520Pkcs9EmailAddress class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X520Pkcs9EmailAddress,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '194' ],		#self : OmReference [ '195' ],		#time : DateAndTime [ '2018-08-16T16:44:09.377233+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'X520AbstractName',				#traitCompositionSource : '{}',				#definitionSource : 'X520AbstractName subclass: #X520StateOrProvinceName\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X520StateOrProvinceName,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X520StateOrProvinceName class\r\tinstanceVariableNames: \'\''				},				#name : #'X520StateOrProvinceName class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X520StateOrProvinceName,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '195' ],		#self : OmReference [ '196' ],		#time : DateAndTime [ '2018-08-16T16:44:09.38224+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #X520Attribute\r\tinstanceVariableNames: \'attrOid attrValue\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-X509\''			},			#name : #X520Attribute,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X520Attribute,						#isMetaSide : false					},					#name : #attrOid,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #X520Attribute,						#isMetaSide : false					},					#name : #attrValue,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'X520Attribute class\r\tinstanceVariableNames: \'\''				},				#name : #'X520Attribute class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #X520Attribute,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-X509,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '196' ],		#self : OmReference [ '197' ],		#time : DateAndTime [ '2018-08-16T16:44:09.387353+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'OrderedCollection',				#traitCompositionSource : '{}',				#definitionSource : 'OrderedCollection subclass: #OrderedSet\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-ASN1-Objects\''			},			#name : #OrderedSet,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'OrderedSet class\r\tinstanceVariableNames: \'\''				},				#name : #'OrderedSet class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #OrderedSet,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-ASN1-Objects,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '197' ],		#self : OmReference [ '198' ],		#time : DateAndTime [ '2018-08-16T16:44:09.393686+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #CryptoASN1Test\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-Tests\''			},			#name : #CryptoASN1Test,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CryptoASN1Test class\r\tinstanceVariableNames: \'\''				},				#name : #'CryptoASN1Test class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CryptoASN1Test,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-Tests,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '198' ],		#self : OmReference [ '199' ],		#time : DateAndTime [ '2018-08-16T16:44:09.398619+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #CryptoPKCS12Test\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-Tests\''			},			#name : #CryptoPKCS12Test,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CryptoPKCS12Test class\r\tinstanceVariableNames: \'\''				},				#name : #'CryptoPKCS12Test class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CryptoPKCS12Test,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-Tests,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '199' ],		#self : OmReference [ '200' ],		#time : DateAndTime [ '2018-08-16T16:44:09.403552+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #CryptoRSATest\r\tinstanceVariableNames: \'privateKey publicKey\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-Tests\''			},			#name : #CryptoRSATest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CryptoRSATest,						#isMetaSide : false					},					#name : #privateKey,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #CryptoRSATest,						#isMetaSide : false					},					#name : #publicKey,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CryptoRSATest class\r\tinstanceVariableNames: \'\''				},				#name : #'CryptoRSATest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CryptoRSATest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-Tests,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '200' ],		#self : OmReference [ '201' ],		#time : DateAndTime [ '2018-08-16T16:44:09.413854+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #CryptoX509Test\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Cryptography-Tests\''			},			#name : #CryptoX509Test,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CryptoX509Test class\r\tinstanceVariableNames: \'\''				},				#name : #'CryptoX509Test class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CryptoX509Test,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Cryptography-Tests,			#package : #Cryptography,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '201' ],		#self : OmReference [ '202' ],		#time : DateAndTime [ '2018-08-16T16:44:09.788788+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpCategoryRemoval {		#classCategoryName : #Cryptography,		#affectedPackageName : #Cryptography	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '202' ],		#self : OmReference [ '203' ],		#time : DateAndTime [ '2018-08-16T16:44:09.861919+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #'addedTo:',			#protocol : #private,			#sourceCode : 'addedTo: aType\r\r\towner := aType.\r',			#stamp : 'rww 3/23/2007 14:46',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '203' ],		#self : OmReference [ '204' ],		#time : DateAndTime [ '2018-08-16T16:44:09.863837+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #'decodeWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream\r\r\t| tag |\r\tderStream atEnd ifTrue: [^ self error: \'missing element\'].\r\ttag := derStream peekTag.\r\t(self matchesTag: tag)\r\t\tifTrue: [^ type decodeWithDERStream: derStream]\r\t\tifFalse: [^ self error: \'bad choice\'].\r',			#stamp : 'rww 3/26/2007 05:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '204' ],		#self : OmReference [ '205' ],		#time : DateAndTime [ '2018-08-16T16:44:09.865338+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream\r\r\tself type encode: anObject withDERStream: derStream.',			#stamp : 'rww 3/25/2007 23:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '205' ],		#self : OmReference [ '206' ],		#time : DateAndTime [ '2018-08-16T16:44:09.866551+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #'explicitTag:',			#protocol : #'subtype utilities',			#sourceCode : 'explicitTag: integer\r\r\tself type: self type explicitSubType.\r\t^ self type tag: integer.\r',			#stamp : 'rww 3/24/2007 10:39',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '206' ],		#self : OmReference [ '207' ],		#time : DateAndTime [ '2018-08-16T16:44:09.868224+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #'implicitTag:',			#protocol : #'subtype utilities',			#sourceCode : 'implicitTag: integer\r\r\tself type: self type implicitSubType.\r\t^ self type tag: integer.\r',			#stamp : 'rww 3/24/2007 10:39',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '207' ],		#self : OmReference [ '208' ],		#time : DateAndTime [ '2018-08-16T16:44:09.869378+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^self type isTypeFor: anObject',			#stamp : 'rww 3/25/2007 23:12',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '208' ],		#self : OmReference [ '209' ],		#time : DateAndTime [ '2018-08-16T16:44:09.870406+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #'matchesTag:',			#protocol : #testing,			#sourceCode : 'matchesTag: anInteger\r\r\t^self type matchesTag: anInteger',			#stamp : 'rww 3/23/2007 21:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '209' ],		#self : OmReference [ '210' ],		#time : DateAndTime [ '2018-08-16T16:44:09.871379+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #owner,			#protocol : #accessing,			#sourceCode : 'owner\r\t"Answer the value of owner"\r\r\t^ owner',			#stamp : 'rww 3/23/2007 14:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '210' ],		#self : OmReference [ '211' ],		#time : DateAndTime [ '2018-08-16T16:44:09.872383+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #'owner:',			#protocol : #accessing,			#sourceCode : 'owner: anObject\r\t"Set the value of owner"\r\r\towner := anObject',			#stamp : 'rww 3/23/2007 14:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '211' ],		#self : OmReference [ '212' ],		#time : DateAndTime [ '2018-08-16T16:44:09.873312+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #symbol,			#protocol : #accessing,			#sourceCode : 'symbol\r\t"Answer the value of symbol"\r\r\t^ symbol',			#stamp : 'rww 3/23/2007 14:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '212' ],		#self : OmReference [ '213' ],		#time : DateAndTime [ '2018-08-16T16:44:09.874301+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #'symbol:',			#protocol : #accessing,			#sourceCode : 'symbol: anObject\r\t"Set the value of symbol"\r\r\tsymbol := anObject',			#stamp : 'rww 3/23/2007 14:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '213' ],		#self : OmReference [ '214' ],		#time : DateAndTime [ '2018-08-16T16:44:09.875832+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #type,			#protocol : #accessing,			#sourceCode : 'type\r\t"Answer the value of type"\r\r\t^ type',			#stamp : 'rww 3/23/2007 14:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '214' ],		#self : OmReference [ '215' ],		#time : DateAndTime [ '2018-08-16T16:44:09.877183+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceElement,				#isMetaSide : false			},			#name : #'type:',			#protocol : #accessing,			#sourceCode : 'type: anObject\r\t"Set the value of type"\r\r\ttype := anObject',			#stamp : 'rww 3/23/2007 14:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '215' ],		#self : OmReference [ '216' ],		#time : DateAndTime [ '2018-08-16T16:44:09.878581+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #'decode:withDERStream:',			#protocol : #decoding,			#sourceCode : 'decode: aTarget withDERStream: derStream\r\r\t| tag val |\r\tderStream atEnd ifTrue: [\r\t\tself hasDefault ifTrue: [^self value: self default into: aTarget].\r\t\tself isOptional ifTrue: [^self].\r\t\t^ self error: \'missing element\'].\r\ttag := derStream peekTag.\r\t(self matchesTag: tag)\r\t\tifTrue: [\r\t\t\tval := type \r\t\t\t\tdecodeWithDERStream: derStream \r\t\t\t\towner: aTarget \r\t\t\t\townerType: self owner.\r\t\t\tself value: val into: aTarget.\r\t\t\t^ val ]\r\t\tifFalse: [\r\t\t\tself hasDefault ifTrue: [^self value: self default into: aTarget].\r\t\t\tself isOptional ifTrue: [^self].\r\t\t\t^ self error: \'missing element\'].\r',			#stamp : 'rww 4/14/2007 10:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '216' ],		#self : OmReference [ '217' ],		#time : DateAndTime [ '2018-08-16T16:44:09.879695+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #default,			#protocol : #accessing,			#sourceCode : 'default\r\t"Answer the value of default"\r\r\t^ default',			#stamp : 'rww 3/23/2007 15:37',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '217' ],		#self : OmReference [ '218' ],		#time : DateAndTime [ '2018-08-16T16:44:09.885586+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #'default:',			#protocol : #accessing,			#sourceCode : 'default: anObject\r\t"Set the value of default"\r\r\tdefault := anObject',			#stamp : 'rww 3/23/2007 15:37',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '218' ],		#self : OmReference [ '219' ],		#time : DateAndTime [ '2018-08-16T16:44:09.887244+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream\r\r\t| val |\r\tval := self valueFrom: anObject.\r\t(val == nil and: [self isOptional])\r\t\tifTrue: [^self].\r\t(self hasDefault and: [self default = val])\r\t\tifTrue: [^self].\r\tself type \r\t\tencode: val \r\t\twithDERStream: derStream\r\t\towner: anObject \r\t\townerType: self owner.\r',			#stamp : 'rww 3/27/2007 16:26',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '219' ],		#self : OmReference [ '220' ],		#time : DateAndTime [ '2018-08-16T16:44:09.888435+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #hasDefault,			#protocol : #testing,			#sourceCode : 'hasDefault\r\r\t^ self default notNil',			#stamp : 'rww 3/23/2007 20:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '220' ],		#self : OmReference [ '221' ],		#time : DateAndTime [ '2018-08-16T16:44:09.890141+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #hasDefaultOrIsOptional,			#protocol : #testing,			#sourceCode : 'hasDefaultOrIsOptional\r\r\t^ self default notNil or: [ self optional ]',			#stamp : 'rww 3/23/2007 20:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '221' ],		#self : OmReference [ '222' ],		#time : DateAndTime [ '2018-08-16T16:44:09.89133+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\r\tself optional: false.',			#stamp : 'rww 3/23/2007 15:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '222' ],		#self : OmReference [ '223' ],		#time : DateAndTime [ '2018-08-16T16:44:09.892457+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #isOptional,			#protocol : #testing,			#sourceCode : 'isOptional\r\r\t^ self optional',			#stamp : 'rww 3/23/2007 20:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '223' ],		#self : OmReference [ '224' ],		#time : DateAndTime [ '2018-08-16T16:44:09.893845+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t| val |\r\tval := self valueFrom: anObject.\r\t^self type isTypeFor: val',			#stamp : 'rww 3/25/2007 23:11',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '224' ],		#self : OmReference [ '225' ],		#time : DateAndTime [ '2018-08-16T16:44:09.89538+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #mutator,			#protocol : #decoding,			#sourceCode : 'mutator\r\r\t^(self symbol copyWith: $:) asSymbol',			#stamp : 'rww 3/25/2007 23:11',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '225' ],		#self : OmReference [ '226' ],		#time : DateAndTime [ '2018-08-16T16:44:09.89675+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #optional,			#protocol : #accessing,			#sourceCode : 'optional\r\t"Answer the value of optional"\r\r\t^ optional',			#stamp : 'rww 3/23/2007 15:37',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '226' ],		#self : OmReference [ '227' ],		#time : DateAndTime [ '2018-08-16T16:44:09.898582+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #'optional:',			#protocol : #accessing,			#sourceCode : 'optional: anObject\r\t"Set the value of optional"\r\r\toptional := anObject',			#stamp : 'rww 3/23/2007 15:37',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '227' ],		#self : OmReference [ '228' ],		#time : DateAndTime [ '2018-08-16T16:44:09.899857+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #'value:into:',			#protocol : #decoding,			#sourceCode : 'value: aValue into: anObject\r\r\tanObject perform: self mutator with: aValue',			#stamp : 'rww 3/25/2007 23:11',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '228' ],		#self : OmReference [ '229' ],		#time : DateAndTime [ '2018-08-16T16:44:09.901159+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructureElement,				#isMetaSide : false			},			#name : #'valueFrom:',			#protocol : #encoding,			#sourceCode : 'valueFrom: anObject\r\r\t^ anObject perform: self symbol',			#stamp : 'rww 3/25/2007 23:11',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '229' ],		#self : OmReference [ '230' ],		#time : DateAndTime [ '2018-08-16T16:44:09.902437+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1DefinitionModel class',				#isMetaSide : true			},			#name : #LICENSE,			#protocol : #LICENSE,			#sourceCode : 'LICENSE\r\t"http://www.opensource.org/licenses/mit-license.php"\r^\'Copyright (c) 2006 Ron Teitelbaum * US Medical Record Specialists * Ron@USMedRec.com\r\rPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\rThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\rTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\'\r',			#stamp : 'RJT 9/2/2006 23:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '230' ],		#self : OmReference [ '231' ],		#time : DateAndTime [ '2018-08-16T16:44:09.903487+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1DefinitionModel class',				#isMetaSide : true			},			#name : #'on:',			#protocol : #'instance creation',			#sourceCode : 'on: aClassWithASN1Definitions\r\t\r\t^self new\r\t\tsubject: aClassWithASN1Definitions;\r\t\tyourself.',			#stamp : 'RJT 9/2/2006 23:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '231' ],		#self : OmReference [ '232' ],		#time : DateAndTime [ '2018-08-16T16:44:09.904731+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #asn1ClassName,			#protocol : #accessing,			#sourceCode : 'asn1ClassName\r\t"Answer the value of asn1ClassName"\r\r\t^ asn1ClassName ifNil: [asn1ClassName := self parseASN1ClassName. asn1ClassName]',			#stamp : 'RJT 9/2/2006 22:58',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '232' ],		#self : OmReference [ '233' ],		#time : DateAndTime [ '2018-08-16T16:44:09.905718+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #'asn1ClassName:',			#protocol : #accessing,			#sourceCode : 'asn1ClassName: anObject\r\t"Set the value of asn1ClassName"\r\r\tasn1ClassName := anObject',			#stamp : 'RJT 9/6/2006 14:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '233' ],		#self : OmReference [ '234' ],		#time : DateAndTime [ '2018-08-16T16:44:09.9068+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #asn1DefinitionString,			#protocol : #accessing,			#sourceCode : 'asn1DefinitionString\r\t"Answer the value of asn1DefinitionString"\r\r\t^ asn1DefinitionString ifNil: [asn1DefinitionString := self parseASN1DefinitionString. asn1DefinitionString]',			#stamp : 'RJT 9/2/2006 22:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '234' ],		#self : OmReference [ '235' ],		#time : DateAndTime [ '2018-08-16T16:44:09.908443+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #'asn1DefinitionString:',			#protocol : #accessing,			#sourceCode : 'asn1DefinitionString: anObject\r\t"Set the value of asn1DefinitionString"\r\r\tasn1DefinitionString := anObject',			#stamp : 'RJT 9/6/2006 14:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '235' ],		#self : OmReference [ '236' ],		#time : DateAndTime [ '2018-08-16T16:44:09.909626+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #createObjectsAndPushFields,			#protocol : #'services parsing',			#sourceCode : 'createObjectsAndPushFields\r\tself resultObject ifNil: \r\t\t[self setRootObject].\r\tself currentObject ifNil: \r\t\t[self setCurrentObject].\r\tself currentField isNil \r\t\tifTrue: [self setCurrentField]\r\t\tifFalse: [self pushNextField].\r\tself setCurrentMutator.\r\t',			#stamp : 'RJT 9/7/2006 15:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '236' ],		#self : OmReference [ '237' ],		#time : DateAndTime [ '2018-08-16T16:44:09.910719+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #currentAccessor,			#protocol : #accessing,			#sourceCode : 'currentAccessor\r\t"Answer the value of currentAccessor"\r\r\t^ currentAccessor',			#stamp : 'RJT 9/6/2006 14:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '237' ],		#self : OmReference [ '238' ],		#time : DateAndTime [ '2018-08-16T16:44:09.911759+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #'currentAccessor:',			#protocol : #accessing,			#sourceCode : 'currentAccessor: anObject\r\t"Set the value of currentAccessor"\r\r\tcurrentAccessor := anObject',			#stamp : 'RJT 9/6/2006 14:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '238' ],		#self : OmReference [ '239' ],		#time : DateAndTime [ '2018-08-16T16:44:09.912835+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #currentField,			#protocol : #accessing,			#sourceCode : 'currentField\r\t"Answer the value of currentField"\r\r\t^ currentField',			#stamp : 'RJT 9/6/2006 14:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '239' ],		#self : OmReference [ '240' ],		#time : DateAndTime [ '2018-08-16T16:44:09.913876+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #'currentField:',			#protocol : #accessing,			#sourceCode : 'currentField: anObject\r\t"Set the value of currentField"\r\r\tcurrentField := anObject',			#stamp : 'RJT 9/6/2006 14:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '240' ],		#self : OmReference [ '241' ],		#time : DateAndTime [ '2018-08-16T16:44:09.915486+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #currentMutator,			#protocol : #accessing,			#sourceCode : 'currentMutator\r\t"Answer the value of currentMutator"\r\r\t^ currentMutator',			#stamp : 'RJT 9/6/2006 14:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '241' ],		#self : OmReference [ '242' ],		#time : DateAndTime [ '2018-08-16T16:44:09.916621+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #'currentMutator:',			#protocol : #accessing,			#sourceCode : 'currentMutator: anObject\r\t"Set the value of currentMutator"\r\r\tcurrentMutator := anObject',			#stamp : 'RJT 9/6/2006 14:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '242' ],		#self : OmReference [ '243' ],		#time : DateAndTime [ '2018-08-16T16:44:09.91801+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #currentObject,			#protocol : #accessing,			#sourceCode : 'currentObject\r\t"Answer the value of currentObject"\r\r\t^ currentObject',			#stamp : 'RJT 9/7/2006 15:48',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '243' ],		#self : OmReference [ '244' ],		#time : DateAndTime [ '2018-08-16T16:44:09.919101+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #'currentObject:',			#protocol : #accessing,			#sourceCode : 'currentObject: anObject\r\t"Set the value of currentObject"\r\r\tcurrentObject := anObject',			#stamp : 'RJT 9/7/2006 15:48',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '244' ],		#self : OmReference [ '245' ],		#time : DateAndTime [ '2018-08-16T16:44:09.920241+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #fieldStack,			#protocol : #accessing,			#sourceCode : 'fieldStack\r\t"Answer the value of fieldStack"\r\r\t^ fieldStack ifNil: [fieldStack := Stack new].',			#stamp : 'RJT 9/7/2006 15:39',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '245' ],		#self : OmReference [ '246' ],		#time : DateAndTime [ '2018-08-16T16:44:09.921397+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #'fieldStack:',			#protocol : #accessing,			#sourceCode : 'fieldStack: anObject\r\t"Set the value of fieldStack"\r\r\tfieldStack := anObject',			#stamp : 'RJT 9/7/2006 15:48',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '246' ],		#self : OmReference [ '247' ],		#time : DateAndTime [ '2018-08-16T16:44:09.922489+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #fields,			#protocol : #accessing,			#sourceCode : 'fields\r\t"Answer the value of fields"\r\r\t^ fields ifNil: [fields := self parseFieldNames. fields].',			#stamp : 'RJT 9/6/2006 16:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '247' ],		#self : OmReference [ '248' ],		#time : DateAndTime [ '2018-08-16T16:44:09.924078+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #'fields:',			#protocol : #accessing,			#sourceCode : 'fields: anObject\r\t"Set the value of fields"\r\r\tfields := anObject',			#stamp : 'RJT 9/7/2006 15:39',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '248' ],		#self : OmReference [ '249' ],		#time : DateAndTime [ '2018-08-16T16:44:09.925206+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #getPragmaAccessors,			#protocol : #'services pragma',			#sourceCode : 'getPragmaAccessors\r\t"return the pragmas defined on this class.  These values are usually put in the accessor of the ivar, but could be in other regular methods if it is appropriate.  The form of the pragma is <asn1FieldAccessor: \'put the name of the field from the left hand side of the asn1Definition here\'>.  \r\tfor example if you have an ivar named: #title that has a definition \r\t\tMyASN1Object ::= Sequence {\r\t\t\tasn1Title\tDisplayableString\r\t\t}\r\t\tthen the accessor for title should look like this:\r\t\ttitle\r\t\t\t\r\t\t\t<asn1FieldAccessor: \'asn1Title\'>\r\t\t\t^title\r\t\t\r\tEvery field definition in the asn1Defintion string must have a corresponding pragma"\r\t\r\t^(Pragma allNamed: #asn1FieldAccessor: in: self subject) collect: [:aPragma | ASN1PragmaAccessor fromPragma: aPragma].',			#stamp : 'RJT 9/2/2006 23:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '249' ],		#self : OmReference [ '250' ],		#time : DateAndTime [ '2018-08-16T16:44:09.926348+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #getPragmaMutators,			#protocol : #'services pragma',			#sourceCode : 'getPragmaMutators\r\t"return the pragmas defined on this class.  These values are usually put in the mutator of the ivar, but could be in other regular methods if it is appropriate.  The form of the pragma is <asn1FieldMutator: \'put the name of the field from the right hand side of the asn1Definition here\' class: #ClassOfMutatorArgument>.    Use symbol for class because of monticello loading problems.\r\tfor example if you have an ivar named: #title that has a definition \r\t\tMyASN1Object ::= Sequence {\r\t\t\tasn1Title\tDisplayableString\r\t\t}\r\t\tthen the mutaotr for title should look like this:\r\t\ttitle: aTitle\r\t\t\t\r\t\t\t<asn1FieldMutator: \'asn1Title\' class: #String>\r\t\t\ttitle := aTitle.\r\t\t\r\tEvery field definition in the asn1Defintion string must have a corresponding pragma"\r\t\r\t^(Pragma allNamed: #asn1FieldMutator:class: in: self subject) collect: [:aPragma | ASN1PragmaMutator fromPragma: aPragma].',			#stamp : 'RJT 9/2/2006 23:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '250' ],		#self : OmReference [ '251' ],		#time : DateAndTime [ '2018-08-16T16:44:09.927458+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #parseASN1ClassName,			#protocol : #'services parsing',			#sourceCode : 'parseASN1ClassName\r\t"return the ans1definition argument string"\r\t| aDefString classSepIndex |\r\taDefString := self asn1DefinitionString ifNil: [^nil].\r\tclassSepIndex := aDefString indexOfSubCollection: \'::=\'.\r\tclassSepIndex = 0 ifTrue: [^nil].\r\t^(aDefString copyFrom: 1 to: classSepIndex - 1) withBlanksTrimmed.',			#stamp : 'RJT 9/2/2006 23:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '251' ],		#self : OmReference [ '252' ],		#time : DateAndTime [ '2018-08-16T16:44:09.928537+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #parseASN1DefinitionString,			#protocol : #'services parsing',			#sourceCode : 'parseASN1DefinitionString\r\t"return the ans1definition argument string"\r\t| aPragma aCollection |\r\taCollection := Pragma allNamed: #asn1Definition: in: self subject class.\r\t^ aCollection isEmpty\r\t\tifFalse: [aPragma := aCollection first.\r\t\t\taPragma arguments\r\t\t\t\tat: 1\r\t\t\t\tifAbsent: []]',			#stamp : 'RJT 9/2/2006 23:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '252' ],		#self : OmReference [ '253' ],		#time : DateAndTime [ '2018-08-16T16:44:09.929639+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #parseFieldNames,			#protocol : #'services parsing',			#sourceCode : 'parseFieldNames\r\t| aString fields |\r\taString := self asn1DefinitionString.\r\tfields := OrderedCollection new.\r\t(aString copyFrom: (aString indexOf: ${) + 1 to: (aString indexOf: $}) - 1) linesDo: [:aLine |\r\t\t(((aLine indexOfSubCollection: \'--\') > 0) or: [aLine withBlanksTrimmed isEmpty])ifFalse: [\r\t\t\tfields add: aLine subStrings first\r\t\t].\r\t].\r\t^fields',			#stamp : 'RJT 9/3/2006 00:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '253' ],		#self : OmReference [ '254' ],		#time : DateAndTime [ '2018-08-16T16:44:09.930681+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #parseRootObjectType,			#protocol : #'services parsing',			#sourceCode : 'parseRootObjectType\r\t"parse the definition string and figure out if this object is a subject or a\r\tcollection of subjects"\r\t| aString aType |\r\taString := self asn1DefinitionString.\r\taType := (aString copyFrom: (aString indexOfSubCollection: \'::=\')\r\t\t\t\t\t+ 4 to: (aString indexOf: ${)\r\t\t\t\t\t- 1) withBlanksTrimmed.\r\t^aType isEmpty\r\t\tifTrue: [self subject]\r\t\tifFalse: [aType = \'SEQUENCE\'\r\t\t\t\tifTrue: [OrderedCollection]\r\t\t\t\tifFalse: [self error: \'new root type\']]',			#stamp : 'RJT 9/7/2006 15:58',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '254' ],		#self : OmReference [ '255' ],		#time : DateAndTime [ '2018-08-16T16:44:09.93231+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #resultObject,			#protocol : #accessing,			#sourceCode : 'resultObject\r\t"Answer the value of resultObject"\r\r\t^ resultObject',			#stamp : 'RJT 9/6/2006 14:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '255' ],		#self : OmReference [ '256' ],		#time : DateAndTime [ '2018-08-16T16:44:09.933649+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #'resultObject:',			#protocol : #accessing,			#sourceCode : 'resultObject: anObject\r\t"Set the value of resultObject"\r\r\tresultObject := anObject',			#stamp : 'RJT 9/6/2006 14:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '256' ],		#self : OmReference [ '257' ],		#time : DateAndTime [ '2018-08-16T16:44:09.934859+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #setCurrentObject,			#protocol : #'services parsing',			#sourceCode : 'setCurrentObject\r\tself currentObject: self subject new.',			#stamp : 'RJT 9/7/2006 16:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '257' ],		#self : OmReference [ '258' ],		#time : DateAndTime [ '2018-08-16T16:44:09.93611+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #setRootObject,			#protocol : #'services parsing',			#sourceCode : 'setRootObject\r\tself resultObject: self parseRootObjectType new.\r\tself resultObject isCollection\r\t\tifTrue: [self currentObject: self subject new]\r\t\tifFalse: [self currentObject: self resultObject]',			#stamp : 'RJT 9/7/2006 16:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '258' ],		#self : OmReference [ '259' ],		#time : DateAndTime [ '2018-08-16T16:44:09.937356+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #subject,			#protocol : #accessing,			#sourceCode : 'subject\r\t"Answer the value of subject"\r\r\t^ subject',			#stamp : 'RJT 9/2/2006 22:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '259' ],		#self : OmReference [ '260' ],		#time : DateAndTime [ '2018-08-16T16:44:09.93856+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #'subject:',			#protocol : #accessing,			#sourceCode : 'subject: anObject\r\t"Set the value of subject"\r\r\tsubject := anObject',			#stamp : 'RJT 9/2/2006 22:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '260' ],		#self : OmReference [ '261' ],		#time : DateAndTime [ '2018-08-16T16:44:09.940324+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1DefinitionModel,				#isMetaSide : false			},			#name : #verifyFieldAccessorsAndMutators,			#protocol : #'services verifying',			#sourceCode : 'verifyFieldAccessorsAndMutators\r\t"check to see that the ans1 definition is represented by all the appropriate accessor and mutator definitions"\r\t| myAccessors myMutators |\r\tmyAccessors := self getPragmaAccessors.\r\tmyMutators := self getPragmaMutators.\r\t^self parseFieldNames allSatisfy: [:aField |\r\t\t(myAccessors anySatisfy: [:anAccessor | anAccessor asn1name = aField]) and: [\r\t\t\t(myMutators anySatisfy: [:aMutator | aMutator asn1name = aField])]].\r\t\t',			#stamp : 'RJT 9/2/2006 23:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '261' ],		#self : OmReference [ '262' ],		#time : DateAndTime [ '2018-08-16T16:44:09.94175+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Entity class',				#isMetaSide : true			},			#name : #'name:',			#protocol : #'instance creation',			#sourceCode : 'name: aSymbol\r\r\t^self new\r\t\tname: aSymbol;\r\t\tyourself',			#stamp : 'rww 3/23/2007 11:44',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '262' ],		#self : OmReference [ '263' ],		#time : DateAndTime [ '2018-08-16T16:44:09.942816+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Entity class',				#isMetaSide : true			},			#name : #'name:in:',			#protocol : #'instance creation',			#sourceCode : 'name: aSymbol in: aModule\r\r\t^aModule add: (self name: aSymbol)',			#stamp : 'rww 3/23/2007 12:34',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '263' ],		#self : OmReference [ '264' ],		#time : DateAndTime [ '2018-08-16T16:44:09.94404+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Entity,				#isMetaSide : false			},			#name : #explicitSubType,			#protocol : #'subtype utilities',			#sourceCode : 'explicitSubType\r\r\t^ (ASN1ExplicitSubType name: nil)\r\t\tparent: self;\r\t\tyourself.\r',			#stamp : 'rww 3/24/2007 10:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '264' ],		#self : OmReference [ '265' ],		#time : DateAndTime [ '2018-08-16T16:44:09.945131+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Entity,				#isMetaSide : false			},			#name : #implicitSubType,			#protocol : #'subtype utilities',			#sourceCode : 'implicitSubType\r\r\t^ (ASN1ImplicitSubType name: nil)\r\t\tparent: self;\r\t\tyourself.\r',			#stamp : 'rww 3/24/2007 10:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '265' ],		#self : OmReference [ '266' ],		#time : DateAndTime [ '2018-08-16T16:44:09.946315+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Entity,				#isMetaSide : false			},			#name : #module,			#protocol : #accessing,			#sourceCode : 'module\r\t"Answer the value of module"\r\r\t^ module',			#stamp : 'rww 3/23/2007 11:39',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '266' ],		#self : OmReference [ '267' ],		#time : DateAndTime [ '2018-08-16T16:44:09.947424+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Entity,				#isMetaSide : false			},			#name : #'module:',			#protocol : #accessing,			#sourceCode : 'module: anObject\r\t"Set the value of module"\r\r\tmodule := anObject',			#stamp : 'rww 3/23/2007 11:39',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '267' ],		#self : OmReference [ '268' ],		#time : DateAndTime [ '2018-08-16T16:44:09.948531+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Entity,				#isMetaSide : false			},			#name : #name,			#protocol : #accessing,			#sourceCode : 'name\r\t"Answer the value of symbol"\r\r\t^ symbol',			#stamp : 'rww 3/23/2007 11:42',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '268' ],		#self : OmReference [ '269' ],		#time : DateAndTime [ '2018-08-16T16:44:09.950169+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Entity,				#isMetaSide : false			},			#name : #'name:',			#protocol : #accessing,			#sourceCode : 'name: anObject\r\t"Set the value of symbol"\r\r\tsymbol := anObject',			#stamp : 'rww 3/23/2007 11:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '269' ],		#self : OmReference [ '270' ],		#time : DateAndTime [ '2018-08-16T16:44:09.951281+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Entity,				#isMetaSide : false			},			#name : #'typeFrom:',			#protocol : #private,			#sourceCode : 'typeFrom: typeSpec\r\r\t^ self module\r\t\tifNil: [typeSpec isBehavior\r\t\t\tifTrue: [typeSpec new]\r\t\t\tifFalse: [typeSpec]]\r\t\tifNotNil: [self module typeFrom: typeSpec]',			#stamp : 'rww 3/23/2007 12:37',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '270' ],		#self : OmReference [ '271' ],		#time : DateAndTime [ '2018-08-16T16:44:09.952387+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #'at:',			#protocol : #accessing,			#sourceCode : 'at: key\r\r\t^self typeMap at: key ifAbsent: [self defaultType]',			#stamp : 'rww 3/27/2007 20:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '271' ],		#self : OmReference [ '272' ],		#time : DateAndTime [ '2018-08-16T16:44:09.953354+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #'at:put:',			#protocol : #accessing,			#sourceCode : 'at: key put: typeSpec\r\r\t^self typeMap at: key put: (self typeFrom: typeSpec)',			#stamp : 'rww 3/27/2007 16:49',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '272' ],		#self : OmReference [ '273' ],		#time : DateAndTime [ '2018-08-16T16:44:09.95443+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #'decodeWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream\r\r\tself error: \'must decode in the scope of a structured container\'.\r',			#stamp : 'rww 3/27/2007 16:15',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '273' ],		#self : OmReference [ '274' ],		#time : DateAndTime [ '2018-08-16T16:44:09.955519+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #'decodeWithDERStream:owner:ownerType:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream owner: owner ownerType: ownerType\r\r\t| keyValue type |\r\tkeyValue := (ownerType elementWithSymbol: self definedBy)\r\t\tvalueFrom: owner.\r\ttype := self at: keyValue.\r\t^ type decodeWithDERStream: derStream.\r',			#stamp : 'rww 3/27/2007 16:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '274' ],		#self : OmReference [ '275' ],		#time : DateAndTime [ '2018-08-16T16:44:09.957096+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #defaultType,			#protocol : #accessing,			#sourceCode : 'defaultType\r\t"Answer the value of defaultType"\r\r\t^ defaultType',			#stamp : 'rww 3/27/2007 20:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '275' ],		#self : OmReference [ '276' ],		#time : DateAndTime [ '2018-08-16T16:44:09.958221+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #'defaultType:',			#protocol : #accessing,			#sourceCode : 'defaultType: anObject\r\t"Set the value of defaultType"\r\r\tdefaultType := self typeFrom: anObject',			#stamp : 'rww 3/27/2007 20:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '276' ],		#self : OmReference [ '277' ],		#time : DateAndTime [ '2018-08-16T16:44:09.959292+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #definedBy,			#protocol : #accessing,			#sourceCode : 'definedBy\r\t"Answer the value of definedBy"\r\r\t^ definedBy',			#stamp : 'rww 3/27/2007 16:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '277' ],		#self : OmReference [ '278' ],		#time : DateAndTime [ '2018-08-16T16:44:09.960347+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #'definedBy:',			#protocol : #accessing,			#sourceCode : 'definedBy: anObject\r\t"Set the value of definedBy"\r\r\tdefinedBy := anObject',			#stamp : 'rww 3/27/2007 16:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '278' ],		#self : OmReference [ '279' ],		#time : DateAndTime [ '2018-08-16T16:44:09.961368+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: obj withDERStream: derStream\r\r\tself error: \'must encode in the scope of a structured container\'.\r',			#stamp : 'rww 3/27/2007 16:15',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '279' ],		#self : OmReference [ '280' ],		#time : DateAndTime [ '2018-08-16T16:44:09.962534+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #'encode:withDERStream:owner:ownerType:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream owner: owner ownerType: ownerType\r\r\t| keyValue type |\r\tkeyValue := (ownerType elementWithSymbol: self definedBy)\r\t\tvalueFrom: owner.\r\ttype := self at: keyValue.\r\t^ type encode: anObject withDERStream: derStream.\r',			#stamp : 'rww 3/27/2007 16:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '280' ],		#self : OmReference [ '281' ],		#time : DateAndTime [ '2018-08-16T16:44:09.963626+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\r\tself typeMap: Dictionary new.\r',			#stamp : 'rww 3/27/2007 16:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '281' ],		#self : OmReference [ '282' ],		#time : DateAndTime [ '2018-08-16T16:44:09.965311+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #'matchesTag:',			#protocol : #testing,			#sourceCode : 'matchesTag: anInteger\r\r\t^ (self typeMap\r\t\tdetect: [:each | each matchesTag: anInteger]\r\t\tifNone: [nil]) notNil\r',			#stamp : 'rww 3/27/2007 16:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '282' ],		#self : OmReference [ '283' ],		#time : DateAndTime [ '2018-08-16T16:44:09.966422+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #typeMap,			#protocol : #accessing,			#sourceCode : 'typeMap\r\t"Answer the value of typeMap"\r\r\t^ typeMap',			#stamp : 'rww 3/27/2007 15:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '283' ],		#self : OmReference [ '284' ],		#time : DateAndTime [ '2018-08-16T16:44:09.967475+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyDefinedByType,				#isMetaSide : false			},			#name : #'typeMap:',			#protocol : #accessing,			#sourceCode : 'typeMap: anObject\r\t"Set the value of typeMap"\r\r\ttypeMap := anObject',			#stamp : 'rww 3/27/2007 15:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '284' ],		#self : OmReference [ '285' ],		#time : DateAndTime [ '2018-08-16T16:44:09.968617+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyType,				#isMetaSide : false			},			#name : #'decodeWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream\r\r\t^ derStream decode.\r',			#stamp : 'rww 4/14/2007 11:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '285' ],		#self : OmReference [ '286' ],		#time : DateAndTime [ '2018-08-16T16:44:09.969527+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyType,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream\r\r\tderStream encode: anObject.\r',			#stamp : 'rww 4/14/2007 11:53',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '286' ],		#self : OmReference [ '287' ],		#time : DateAndTime [ '2018-08-16T16:44:09.970584+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ (ASN1Stream tagToTypeDispatchTable\r\t\tdetect: [:eachType | eachType isTypeFor: anObject]\r\t\tifNone: [nil]) notNil\r',			#stamp : 'rww 3/28/2007 11:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '287' ],		#self : OmReference [ '288' ],		#time : DateAndTime [ '2018-08-16T16:44:09.971635+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyType,				#isMetaSide : false			},			#name : #'matchesTag:',			#protocol : #testing,			#sourceCode : 'matchesTag: anInteger\r\r\t^ (anInteger bitAnd: 2r11000000) isZero\r',			#stamp : 'rww 3/27/2007 16:46',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '288' ],		#self : OmReference [ '289' ],		#time : DateAndTime [ '2018-08-16T16:44:09.973237+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AnyType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ nil',			#stamp : 'rww 3/23/2007 17:18',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '289' ],		#self : OmReference [ '290' ],		#time : DateAndTime [ '2018-08-16T16:44:09.974409+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BooleanType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t^ derStream next > 0',			#stamp : 'rww 3/26/2007 05:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '290' ],		#self : OmReference [ '291' ],		#time : DateAndTime [ '2018-08-16T16:44:09.97533+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BooleanType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\tanObject \r\t\tifTrue: [derStream nextPut: 255]\r\t\tifFalse: [derStream nextPut: 0].\r',			#stamp : 'rww 3/25/2007 12:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '291' ],		#self : OmReference [ '292' ],		#time : DateAndTime [ '2018-08-16T16:44:09.976371+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BooleanType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: Boolean',			#stamp : 'rww 3/25/2007 17:11',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '292' ],		#self : OmReference [ '293' ],		#time : DateAndTime [ '2018-08-16T16:44:09.977391+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BooleanType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t^ 1\r',			#stamp : 'rww 3/25/2007 11:35',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '293' ],		#self : OmReference [ '294' ],		#time : DateAndTime [ '2018-08-16T16:44:09.978411+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BooleanType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 1',			#stamp : 'rww 3/23/2007 17:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '294' ],		#self : OmReference [ '295' ],		#time : DateAndTime [ '2018-08-16T16:44:09.979482+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1EndOfIndefiniteLengthType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t^ ASN1EndOfIndefiniteLengthMarker new',			#stamp : 'rww 4/14/2007 09:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '295' ],		#self : OmReference [ '296' ],		#time : DateAndTime [ '2018-08-16T16:44:09.980901+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1EndOfIndefiniteLengthType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r',			#stamp : 'rww 4/14/2007 08:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '296' ],		#self : OmReference [ '297' ],		#time : DateAndTime [ '2018-08-16T16:44:09.981997+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1EndOfIndefiniteLengthType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ false',			#stamp : 'rww 4/14/2007 08:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '297' ],		#self : OmReference [ '298' ],		#time : DateAndTime [ '2018-08-16T16:44:09.983197+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1EndOfIndefiniteLengthType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t^ 0\r',			#stamp : 'rww 4/14/2007 08:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '298' ],		#self : OmReference [ '299' ],		#time : DateAndTime [ '2018-08-16T16:44:09.984271+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1EndOfIndefiniteLengthType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 0',			#stamp : 'rww 4/14/2007 08:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '299' ],		#self : OmReference [ '300' ],		#time : DateAndTime [ '2018-08-16T16:44:09.985383+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1IntegerType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t| integer |\r\tinteger := Integer new: length neg: false.\r\tlength to: 1 by: -1 do: [:index |\r\t\tinteger digitAt: index put: derStream next].\r\t((integer digitAt: length) allMask: 16r80)\r\t\tifTrue: [^integer twosComplement negated normalize]\r\t\tifFalse: [^integer normalize].\r',			#stamp : 'rww 3/26/2007 06:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '300' ],		#self : OmReference [ '301' ],		#time : DateAndTime [ '2018-08-16T16:44:09.98632+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1IntegerType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\t| integer |\r\tinteger := anObject.\r\tinteger positive\r\t\tifTrue: [\r\t\t\t(integer lastDigit allMask: 16r80) \r\t\t\t\tifTrue: [derStream nextPut: 0]]\r\t\tifFalse: [\r\t\t\tinteger := integer negated twosComplement.\r\t\t\t(integer lastDigit noMask: 16r80)\r\t\t\t\tifTrue: [derStream nextPut: 16rFF]].\r\tinteger digitLength to: 1 by: -1 do: [:digitIndex |\r\t\tderStream nextPut: (integer digitAt: digitIndex)].\r',			#stamp : 'rww 3/25/2007 12:11',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '301' ],		#self : OmReference [ '302' ],		#time : DateAndTime [ '2018-08-16T16:44:09.987354+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1IntegerType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isInteger',			#stamp : 'rww 3/25/2007 17:12',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '302' ],		#self : OmReference [ '303' ],		#time : DateAndTime [ '2018-08-16T16:44:09.989087+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1IntegerType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t| twosComplement |\r\t^ anObject positive\r\t\tifTrue: [(anObject lastDigit allMask: 16r80)\r\t\t\tifTrue: [anObject digitLength + 1]\r\t\t\tifFalse: [anObject digitLength]]\r\t\tifFalse: [\r\t\t\ttwosComplement := anObject negated twosComplement.\r\t\t\t(twosComplement lastDigit noMask: 16r80)\r\t\t\t\tifTrue: [twosComplement digitLength+1]\r\t\t\t\tifFalse: [twosComplement digitLength]].\r\r',			#stamp : 'rww 3/25/2007 11:42',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '303' ],		#self : OmReference [ '304' ],		#time : DateAndTime [ '2018-08-16T16:44:09.990166+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1IntegerType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 2',			#stamp : 'rww 3/23/2007 17:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '304' ],		#self : OmReference [ '305' ],		#time : DateAndTime [ '2018-08-16T16:44:09.991265+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1NullType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t^ ASN1Null new',			#stamp : 'rww 3/26/2007 10:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '305' ],		#self : OmReference [ '306' ],		#time : DateAndTime [ '2018-08-16T16:44:09.992161+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1NullType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r',			#stamp : 'rww 3/25/2007 12:05',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '306' ],		#self : OmReference [ '307' ],		#time : DateAndTime [ '2018-08-16T16:44:09.993239+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1NullType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isNil',			#stamp : 'rww 3/25/2007 17:12',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '307' ],		#self : OmReference [ '308' ],		#time : DateAndTime [ '2018-08-16T16:44:09.994282+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1NullType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t^ 0',			#stamp : 'rww 3/25/2007 11:44',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '308' ],		#self : OmReference [ '309' ],		#time : DateAndTime [ '2018-08-16T16:44:09.995299+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1NullType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 5',			#stamp : 'rww 3/23/2007 17:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '309' ],		#self : OmReference [ '310' ],		#time : DateAndTime [ '2018-08-16T16:44:09.997053+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectIdentifierType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t| b oid len |\r\tb := derStream next.\r\toid := ((b // 40) asString) , \'.\'  ,((b rem:40) asString).\r\tlen := 0.\r\t2 to: length do: [:i | \r\t\tb := derStream next.\r\t\t((b bitAnd: 16r80) = 16r80) \r\t\t\tifTrue: [len := ((len bitShift: 7) + (b bitAnd: 16r7F))]\r\t\t\tifFalse: [\r\t\t\t\tlen := (len bitShift: 7) + b.\r\t\t\t\toid := oid , \'.\', (len asString).\r\t\t\t\tlen := 0]].\r\t^ ASN1ObjectId fromString: oid.',			#stamp : 'rww 3/26/2007 06:05',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '310' ],		#self : OmReference [ '311' ],		#time : DateAndTime [ '2018-08-16T16:44:09.998041+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectIdentifierType,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream\r\t"For a speedup"\r\r\t| bytes |\r\tderStream nextPutTag: anObject asn1Tag.\r\tbytes := anObject asByteArray.\r\tderStream nextPutLength: bytes size.\r\tderStream nextPutAll: bytes.\r\t^ derStream\r',			#stamp : 'rww 3/25/2007 11:51',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '311' ],		#self : OmReference [ '312' ],		#time : DateAndTime [ '2018-08-16T16:44:09.999157+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectIdentifierType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\t| bytes |\r\tbytes := anObject asByteArray.\r\tderStream nextPutAll: bytes.\r\t^ derStream\r',			#stamp : 'rww 3/25/2007 11:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '312' ],		#self : OmReference [ '313' ],		#time : DateAndTime [ '2018-08-16T16:44:10.000195+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectIdentifierType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: ASN1ObjectId',			#stamp : 'rww 3/25/2007 17:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '313' ],		#self : OmReference [ '314' ],		#time : DateAndTime [ '2018-08-16T16:44:10.001233+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectIdentifierType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t^ anObject asByteArray size.\r',			#stamp : 'rww 3/25/2007 11:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '314' ],		#self : OmReference [ '315' ],		#time : DateAndTime [ '2018-08-16T16:44:10.00224+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectIdentifierType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 6',			#stamp : 'rww 3/23/2007 17:20',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '315' ],		#self : OmReference [ '316' ],		#time : DateAndTime [ '2018-08-16T16:44:10.003332+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitStringType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t| bitString |\r\tbitString := ASN1BitString new.\r\tbitString bitsPadding: derStream next.\r\tbitString bytes: (derStream next: length - 1).\r\t^ bitString\r',			#stamp : 'rww 3/26/2007 05:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '316' ],		#self : OmReference [ '317' ],		#time : DateAndTime [ '2018-08-16T16:44:10.004938+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitStringType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\tderStream \r\t\tnextPut: anObject bitsPadding;\r\t\tnextPutAll: anObject bytes asByteArray.\r',			#stamp : 'rww 3/25/2007 12:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '317' ],		#self : OmReference [ '318' ],		#time : DateAndTime [ '2018-08-16T16:44:10.006037+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitStringType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: ASN1BitString',			#stamp : 'rww 3/25/2007 17:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '318' ],		#self : OmReference [ '319' ],		#time : DateAndTime [ '2018-08-16T16:44:10.007073+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitStringType,				#isMetaSide : false			},			#name : #octetsClass,			#protocol : #accessing,			#sourceCode : 'octetsClass\r\r\t^ ASN1BitString',			#stamp : 'rww 3/27/2007 10:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '319' ],		#self : OmReference [ '320' ],		#time : DateAndTime [ '2018-08-16T16:44:10.008178+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitStringType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t^ anObject bytes size + 1',			#stamp : 'rww 3/25/2007 11:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '320' ],		#self : OmReference [ '321' ],		#time : DateAndTime [ '2018-08-16T16:44:10.009198+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitStringType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 3',			#stamp : 'rww 3/23/2007 17:18',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '321' ],		#self : OmReference [ '322' ],		#time : DateAndTime [ '2018-08-16T16:44:10.010309+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ByteArrayType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t^(derStream next: length) asByteArray',			#stamp : 'rww 3/26/2007 06:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '322' ],		#self : OmReference [ '323' ],		#time : DateAndTime [ '2018-08-16T16:44:10.011166+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ByteArrayType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\tderStream nextPutAll: anObject',			#stamp : 'rww 3/25/2007 12:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '323' ],		#self : OmReference [ '324' ],		#time : DateAndTime [ '2018-08-16T16:44:10.012841+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ByteArrayType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: ByteArray',			#stamp : 'rww 3/25/2007 17:12',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '324' ],		#self : OmReference [ '325' ],		#time : DateAndTime [ '2018-08-16T16:44:10.013922+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ByteArrayType,				#isMetaSide : false			},			#name : #octetsClass,			#protocol : #accessing,			#sourceCode : 'octetsClass\r\r\t^ ByteArray',			#stamp : 'rww 3/27/2007 11:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '325' ],		#self : OmReference [ '326' ],		#time : DateAndTime [ '2018-08-16T16:44:10.014983+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ByteArrayType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t^ anObject size\r',			#stamp : 'rww 3/25/2007 11:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '326' ],		#self : OmReference [ '327' ],		#time : DateAndTime [ '2018-08-16T16:44:10.016079+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ByteArrayType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 4',			#stamp : 'rww 3/23/2007 17:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '327' ],		#self : OmReference [ '328' ],		#time : DateAndTime [ '2018-08-16T16:44:10.017152+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1OctetsType,				#isMetaSide : false			},			#name : #'decodeConstructedValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeConstructedValueWithDERStream: derStream length: length\r\r\t| octets stopPosition |\r\tlength = -1\r\t\tifTrue: [^ self decodeValueIndefiniteLengthWithDERStream: derStream].\r\toctets := self octetsClass new.\r\tstopPosition := derStream position + length.\r\t[derStream position < stopPosition] whileTrue: [\r\t\toctets := octets, (self decodeWithDERStream: derStream)].\r\t^ octets',			#stamp : 'rww 4/14/2007 10:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '328' ],		#self : OmReference [ '329' ],		#time : DateAndTime [ '2018-08-16T16:44:10.018061+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1OctetsType,				#isMetaSide : false			},			#name : #'decodeValueIndefiniteLengthWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeValueIndefiniteLengthWithDERStream: derStream\r\r\t| octets value |\r\toctets := self octetsClass new.\r\t[derStream peekTag = 0\r\t\tifTrue: [value := ASN1EndOfIndefiniteLengthType new decodeWithDERStream: derStream]\r\t\tifFalse: [value := self decodeWithDERStream: derStream].\r\tvalue isKindOf: ASN1EndOfIndefiniteLengthMarker] whileFalse: [\r\t\toctets := octets, value].\r\t^ octets',			#stamp : 'rww 4/14/2007 10:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '329' ],		#self : OmReference [ '330' ],		#time : DateAndTime [ '2018-08-16T16:44:10.019133+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1OctetsType,				#isMetaSide : false			},			#name : #'decodeWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream\r\r\t| tag numericTag object |\r\ttag := derStream peekTag.\r\tnumericTag := tag bitAnd: 2r00011111.\r\tnumericTag = (self asn1Tag bitAnd: 2r00011111)\r\t\tifFalse: [self error: \'asn1 decoder: bad tag\'].\r\tderStream nextTag.\r\t(tag bitAnd: 2r00100000) > 0\r\t\tifTrue: [object := self \r\t\t\tdecodeConstructedValueWithDERStream: derStream \r\t\t\tlength: derStream nextLength]\r\t\tifFalse: [object := self \r\t\t\tdecodeValueWithDERStream: derStream \r\t\t\tlength: derStream nextLength].\r\t^ object',			#stamp : 'rww 4/14/2007 10:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '330' ],		#self : OmReference [ '331' ],		#time : DateAndTime [ '2018-08-16T16:44:10.020812+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1OctetsType,				#isMetaSide : false			},			#name : #octetsClass,			#protocol : #accessing,			#sourceCode : 'octetsClass\r\r\t^ self subclassResponsibility',			#stamp : 'rww 3/27/2007 10:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '331' ],		#self : OmReference [ '332' ],		#time : DateAndTime [ '2018-08-16T16:44:10.021961+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StringType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t^(derStream next: length) asByteArray asString.\r',			#stamp : 'rww 3/26/2007 06:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '332' ],		#self : OmReference [ '333' ],		#time : DateAndTime [ '2018-08-16T16:44:10.022839+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StringType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\tderStream nextPutAll: anObject asByteArray',			#stamp : 'rww 3/25/2007 12:11',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '333' ],		#self : OmReference [ '334' ],		#time : DateAndTime [ '2018-08-16T16:44:10.023845+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StringType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isString',			#stamp : 'rww 3/25/2007 17:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '334' ],		#self : OmReference [ '335' ],		#time : DateAndTime [ '2018-08-16T16:44:10.02499+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StringType,				#isMetaSide : false			},			#name : #octetsClass,			#protocol : #accessing,			#sourceCode : 'octetsClass\r\r\t^ String',			#stamp : 'rww 3/27/2007 11:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '335' ],		#self : OmReference [ '336' ],		#time : DateAndTime [ '2018-08-16T16:44:10.026039+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StringType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t^ anObject size.\r',			#stamp : 'rww 3/25/2007 11:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '336' ],		#self : OmReference [ '337' ],		#time : DateAndTime [ '2018-08-16T16:44:10.027059+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StringType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 12',			#stamp : 'rww 3/23/2007 17:20',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '337' ],		#self : OmReference [ '338' ],		#time : DateAndTime [ '2018-08-16T16:44:10.028945+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BMPStringType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: ASN1BMPString',			#stamp : 'rww 3/25/2007 17:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '338' ],		#self : OmReference [ '339' ],		#time : DateAndTime [ '2018-08-16T16:44:10.030028+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BMPStringType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 30',			#stamp : 'rww 3/23/2007 17:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '339' ],		#self : OmReference [ '340' ],		#time : DateAndTime [ '2018-08-16T16:44:10.031173+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BMPStringType,				#isMetaSide : false			},			#name : #wrapperClass,			#protocol : #decoding,			#sourceCode : 'wrapperClass\r\r\t^ ASN1BMPString\r',			#stamp : 'rww 3/26/2007 06:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '340' ],		#self : OmReference [ '341' ],		#time : DateAndTime [ '2018-08-16T16:44:10.032348+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1GeneralStringType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: ASN1GeneralString',			#stamp : 'jrd 10/30/2008 19:41',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '341' ],		#self : OmReference [ '342' ],		#time : DateAndTime [ '2018-08-16T16:44:10.033309+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1GeneralStringType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 27',			#stamp : 'jrd 10/30/2008 19:41',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '342' ],		#self : OmReference [ '343' ],		#time : DateAndTime [ '2018-08-16T16:44:10.034443+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1GeneralStringType,				#isMetaSide : false			},			#name : #wrapperClass,			#protocol : #decoding,			#sourceCode : 'wrapperClass\r\r\t^ ASN1GeneralString\r',			#stamp : 'jrd 10/30/2008 19:42',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '343' ],		#self : OmReference [ '344' ],		#time : DateAndTime [ '2018-08-16T16:44:10.036651+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1IA5StringType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: ASN1IA5String',			#stamp : 'rww 3/25/2007 17:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '344' ],		#self : OmReference [ '345' ],		#time : DateAndTime [ '2018-08-16T16:44:10.038865+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1IA5StringType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 22',			#stamp : 'rww 3/23/2007 17:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '345' ],		#self : OmReference [ '346' ],		#time : DateAndTime [ '2018-08-16T16:44:10.040139+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1IA5StringType,				#isMetaSide : false			},			#name : #wrapperClass,			#protocol : #decoding,			#sourceCode : 'wrapperClass\r\r\t^ ASN1IA5String\r',			#stamp : 'rww 3/26/2007 06:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '346' ],		#self : OmReference [ '347' ],		#time : DateAndTime [ '2018-08-16T16:44:10.041409+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1PrintableStringType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: ASN1PrintableString',			#stamp : 'rww 3/25/2007 17:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '347' ],		#self : OmReference [ '348' ],		#time : DateAndTime [ '2018-08-16T16:44:10.042414+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1PrintableStringType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 19',			#stamp : 'rww 3/23/2007 17:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '348' ],		#self : OmReference [ '349' ],		#time : DateAndTime [ '2018-08-16T16:44:10.043647+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1PrintableStringType,				#isMetaSide : false			},			#name : #wrapperClass,			#protocol : #decoding,			#sourceCode : 'wrapperClass\r\r\t^ ASN1PrintableString\r',			#stamp : 'rww 3/26/2007 06:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '349' ],		#self : OmReference [ '350' ],		#time : DateAndTime [ '2018-08-16T16:44:10.045104+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1TeletexStringType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: ASN1TeletexString',			#stamp : 'rww 3/25/2007 17:15',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '350' ],		#self : OmReference [ '351' ],		#time : DateAndTime [ '2018-08-16T16:44:10.046109+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1TeletexStringType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 20',			#stamp : 'rww 3/23/2007 17:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '351' ],		#self : OmReference [ '352' ],		#time : DateAndTime [ '2018-08-16T16:44:10.047875+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1TeletexStringType,				#isMetaSide : false			},			#name : #wrapperClass,			#protocol : #decoding,			#sourceCode : 'wrapperClass\r\r\t^ ASN1TeletexString\r',			#stamp : 'rww 3/26/2007 06:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '352' ],		#self : OmReference [ '353' ],		#time : DateAndTime [ '2018-08-16T16:44:10.049068+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UniversalStringType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: ASN1UniversalString',			#stamp : 'rww 3/25/2007 17:15',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '353' ],		#self : OmReference [ '354' ],		#time : DateAndTime [ '2018-08-16T16:44:10.050047+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UniversalStringType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 28',			#stamp : 'rww 3/23/2007 17:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '354' ],		#self : OmReference [ '355' ],		#time : DateAndTime [ '2018-08-16T16:44:10.051121+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UniversalStringType,				#isMetaSide : false			},			#name : #wrapperClass,			#protocol : #decoding,			#sourceCode : 'wrapperClass\r\r\t^ ASN1UniversalString\r',			#stamp : 'rww 3/26/2007 06:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '355' ],		#self : OmReference [ '356' ],		#time : DateAndTime [ '2018-08-16T16:44:10.052239+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1VisibleStringType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: ASN1VisibleString',			#stamp : 'jrd 10/30/2008 19:33',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '356' ],		#self : OmReference [ '357' ],		#time : DateAndTime [ '2018-08-16T16:44:10.053178+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1VisibleStringType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 26',			#stamp : 'jrd 10/30/2008 19:33',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '357' ],		#self : OmReference [ '358' ],		#time : DateAndTime [ '2018-08-16T16:44:10.054215+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1VisibleStringType,				#isMetaSide : false			},			#name : #wrapperClass,			#protocol : #decoding,			#sourceCode : 'wrapperClass\r\r\t^ ASN1VisibleString\r',			#stamp : 'jrd 10/30/2008 19:34',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '358' ],		#self : OmReference [ '359' ],		#time : DateAndTime [ '2018-08-16T16:44:10.05598+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1WrappedStringType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t| string |\r\tstring := (derStream next: length) asByteArray asString.\r\t^ self wrapperClass fromString: string.\r',			#stamp : 'rww 3/26/2007 06:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '359' ],		#self : OmReference [ '360' ],		#time : DateAndTime [ '2018-08-16T16:44:10.056916+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1WrappedStringType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\tderStream nextPutAll: anObject string asByteArray',			#stamp : 'rww 3/25/2007 12:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '360' ],		#self : OmReference [ '361' ],		#time : DateAndTime [ '2018-08-16T16:44:10.058033+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1WrappedStringType,				#isMetaSide : false			},			#name : #octetsClass,			#protocol : #accessing,			#sourceCode : 'octetsClass\r\r\t^ self wrapperClass',			#stamp : 'rww 3/27/2007 11:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '361' ],		#self : OmReference [ '362' ],		#time : DateAndTime [ '2018-08-16T16:44:10.0591+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1WrappedStringType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t^ anObject string size.\r',			#stamp : 'rww 3/25/2007 12:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '362' ],		#self : OmReference [ '363' ],		#time : DateAndTime [ '2018-08-16T16:44:10.060267+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UTCTimeType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t| aUTCDateTime |\r\taUTCDateTime := (derStream next: length) asByteArray asString.\r\t^ (DateAndTime readFromString: (\r\t\t((aUTCDateTime copyFrom: 1 to: 2) asInteger > 50 ifTrue: [\'19\'] ifFalse: [\'20\']),\r\t\t(aUTCDateTime copyFrom: 1 to: 2), \'-\',\r\t\t(aUTCDateTime copyFrom: 3 to: 4), \'-\',\r\t\t(aUTCDateTime copyFrom: 5 to: 6), \'T\',\r\t\t(aUTCDateTime copyFrom: 7 to: 8), \':\',\r\t\t(aUTCDateTime copyFrom: 9 to: 10), \':\',\r\t\t(aUTCDateTime copyFrom: 11 to: 12), \'Z\'))\r\r',			#stamp : 'EstebanMaringolo 9/15/2016 12:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '363' ],		#self : OmReference [ '364' ],		#time : DateAndTime [ '2018-08-16T16:44:10.061262+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UTCTimeType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\t| yy mo dd hh mm ss utcDateTime |\r\tyy :=  anObject year asString copyFrom: 3 to: 4.\r\tmo :=  anObject month asString padded: #left to: 2 with: $0.\r\tdd :=  anObject dayOfMonth asString padded: #left to: 2 with: $0.\r\thh :=  anObject hour asString padded: #left to: 2 with: $0.\r\tmm :=  anObject minute asString padded: #left to: 2 with: $0.\r\tss :=  anObject seconds asString padded: #left to: 2 with: $0.\r\tutcDateTime := (yy, mo, dd, hh, mm, ss, \'Z\') asByteArray.\r\tderStream nextPutAll: utcDateTime.\r\r',			#stamp : 'rww 3/25/2007 12:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '364' ],		#self : OmReference [ '365' ],		#time : DateAndTime [ '2018-08-16T16:44:10.062312+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UTCTimeType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ anObject isKindOf: DateAndTime',			#stamp : 'rww 3/25/2007 17:15',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '365' ],		#self : OmReference [ '366' ],		#time : DateAndTime [ '2018-08-16T16:44:10.064029+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UTCTimeType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t^ 13.\r',			#stamp : 'rww 3/25/2007 11:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '366' ],		#self : OmReference [ '367' ],		#time : DateAndTime [ '2018-08-16T16:44:10.065288+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UTCTimeType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 23',			#stamp : 'rww 3/23/2007 17:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '367' ],		#self : OmReference [ '368' ],		#time : DateAndTime [ '2018-08-16T16:44:10.066466+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ConstructedType,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream\r\r\t| tempStream |\r\tderStream nextPutTag: self asn1Tag.\r\ttempStream := derStream newStream.\r\tself encodeValue: anObject withDERStream: tempStream.\r\tderStream nextPutLength: tempStream size.\r\tderStream nextPutAll: tempStream contents.\r\t^ derStream\r',			#stamp : 'rww 3/27/2007 15:45',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '368' ],		#self : OmReference [ '369' ],		#time : DateAndTime [ '2018-08-16T16:44:10.067386+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ConstructedType,				#isMetaSide : false			},			#name : #isConstructed,			#protocol : #testing,			#sourceCode : 'isConstructed\r\r\t^ true',			#stamp : 'rww 3/25/2007 23:40',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '369' ],		#self : OmReference [ '370' ],		#time : DateAndTime [ '2018-08-16T16:44:10.068436+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ConstructedType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t^ nil',			#stamp : 'rww 3/25/2007 12:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '370' ],		#self : OmReference [ '371' ],		#time : DateAndTime [ '2018-08-16T16:44:10.069596+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t| aTag ele |\r\taTag := derStream currentTag bitAnd: 2r00011111.\r\tele := self elements\r\t\tdetect: [:x | x matchesTag: aTag]\r\t\tifNone: [self error: \'no choice\'].\r\t^ ele decodeValueWithDERStream: derStream length: length.\r',			#stamp : 'rww 3/28/2007 16:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '371' ],		#self : OmReference [ '372' ],		#time : DateAndTime [ '2018-08-16T16:44:10.070532+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceType,				#isMetaSide : false			},			#name : #'decodeWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream\r\r\t| aTag ele |\r\taTag := derStream peekTag.\r\tele := self elements\r\t\tdetect: [:x | x matchesTag: aTag]\r\t\tifNone: [self error: \'no choice\'].\r\t^ ele decodeWithDERStream: derStream.\r',			#stamp : 'rww 3/25/2007 23:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '372' ],		#self : OmReference [ '373' ],		#time : DateAndTime [ '2018-08-16T16:44:10.072303+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceType,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream\r\r\t| ele |\r\tele := self elements\r\t\tdetect: [:x | x isTypeFor: anObject]\r\t\tifNone: [self error: \'no choice\'].\r\tele encode: anObject withDERStream: derStream.\r',			#stamp : 'rww 3/25/2007 17:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '373' ],		#self : OmReference [ '374' ],		#time : DateAndTime [ '2018-08-16T16:44:10.073396+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceType,				#isMetaSide : false			},			#name : #'matchesTag:',			#protocol : #testing,			#sourceCode : 'matchesTag: aTag\r\r\t^ elements anySatisfy: [:e | e matchesTag: aTag]',			#stamp : 'rww 3/24/2007 11:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '374' ],		#self : OmReference [ '375' ],		#time : DateAndTime [ '2018-08-16T16:44:10.074522+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ChoiceType,				#isMetaSide : false			},			#name : #newElement,			#protocol : #private,			#sourceCode : 'newElement\r\r\t^ ASN1ChoiceElement new',			#stamp : 'rww 3/23/2007 14:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '375' ],		#self : OmReference [ '376' ],		#time : DateAndTime [ '2018-08-16T16:44:10.07559+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedSequenceType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 48',			#stamp : 'rww 3/23/2007 17:23',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '376' ],		#self : OmReference [ '377' ],		#time : DateAndTime [ '2018-08-16T16:44:10.076562+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedSetType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 49',			#stamp : 'rww 3/27/2007 15:39',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '377' ],		#self : OmReference [ '378' ],		#time : DateAndTime [ '2018-08-16T16:44:10.077507+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'add:type:default:',			#protocol : #'accessing - element construction',			#sourceCode : 'add: aSymbol type: type default: anObject\r\r\t^(self add: aSymbol type: type)\r\t\tdefault: anObject;\r\t\tyourself.\r',			#stamp : 'rww 3/23/2007 16:25',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '378' ],		#self : OmReference [ '379' ],		#time : DateAndTime [ '2018-08-16T16:44:10.078401+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'add:type:explicitTag:default:',			#protocol : #'accessing - element construction',			#sourceCode : 'add: aSymbol type: type explicitTag: integer default: anObject\r\r\t^(self add: aSymbol type: type explicitTag: integer)\r\t\tdefault: anObject;\r\t\tyourself.\r',			#stamp : 'rww 3/23/2007 16:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '379' ],		#self : OmReference [ '380' ],		#time : DateAndTime [ '2018-08-16T16:44:10.080161+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'add:type:implicitTag:default:',			#protocol : #'accessing - element construction',			#sourceCode : 'add: aSymbol type: type implicitTag: integer default: anObject\r\r\t^(self add: aSymbol type: type implicitTag: integer)\r\t\tdefault: anObject;\r\t\tyourself.\r',			#stamp : 'rww 3/23/2007 16:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '380' ],		#self : OmReference [ '381' ],		#time : DateAndTime [ '2018-08-16T16:44:10.08132+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'addOptional:type:',			#protocol : #'accessing - element construction',			#sourceCode : 'addOptional: aSymbol type: type\r\r\t^(self add: aSymbol type: type)\r\t\toptional: true;\r\t\tyourself.\r',			#stamp : 'rww 3/23/2007 16:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '381' ],		#self : OmReference [ '382' ],		#time : DateAndTime [ '2018-08-16T16:44:10.08246+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'addOptional:type:default:',			#protocol : #'accessing - element construction',			#sourceCode : 'addOptional: aSymbol type: type default: anObject\r\r\t^(self add: aSymbol type: type)\r\t\toptional: true;\r\t\tdefault: anObject;\r\t\tyourself.\r',			#stamp : 'rww 3/24/2007 07:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '382' ],		#self : OmReference [ '383' ],		#time : DateAndTime [ '2018-08-16T16:44:10.083543+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'addOptional:type:explicitTag:',			#protocol : #'accessing - element construction',			#sourceCode : 'addOptional: aSymbol type: type explicitTag: integer\r\r\t^(self add: aSymbol type: type explicitTag: integer)\r\t\toptional: true;\r\t\tyourself.\r',			#stamp : 'rww 3/23/2007 16:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '383' ],		#self : OmReference [ '384' ],		#time : DateAndTime [ '2018-08-16T16:44:10.084586+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'addOptional:type:implicitTag:',			#protocol : #'accessing - element construction',			#sourceCode : 'addOptional: aSymbol type: type implicitTag: integer\r\r\t^(self add: aSymbol type: type implicitTag: integer)\r\t\toptional: true;\r\t\tyourself.\r',			#stamp : 'rww 3/23/2007 16:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '384' ],		#self : OmReference [ '385' ],		#time : DateAndTime [ '2018-08-16T16:44:10.085835+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'decodeValueIndefiniteLengthWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeValueIndefiniteLengthWithDERStream: derStream\r\r\t| target elementStream ele value |\r\ttarget := self mapping new.\r\telementStream := self elements readStream.\r\t[derStream peekTag = 0\r\t\tifTrue: [value := ASN1EndOfIndefiniteLengthType new decodeWithDERStream: derStream]\r\t\tifFalse: [value := elementStream next decode: target withDERStream: derStream].\r\tvalue isKindOf: ASN1EndOfIndefiniteLengthMarker] whileFalse.\r\t[elementStream atEnd] \r\t\twhileFalse: [\r\t\t\tele := elementStream next.\r\t\t\tele hasDefault ifTrue: [ele value: ele default into: target].\r\t\t\tele hasDefaultOrIsOptional\r\t\t\t\tifFalse: [self error: \'missing element\'] ].\r\t^ target\r',			#stamp : 'rww 4/14/2007 10:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '385' ],		#self : OmReference [ '386' ],		#time : DateAndTime [ '2018-08-16T16:44:10.086982+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t| stopPosition target elementStream ele |\r\tlength = -1\r\t\tifTrue: [^ self decodeValueIndefiniteLengthWithDERStream: derStream].\r\tstopPosition := derStream position + length.\r\ttarget := self mapping new.\r\telementStream := self elements readStream.\r\t[elementStream atEnd or: [derStream position >= stopPosition]] \r\t\twhileFalse: [\r\t\t\tele := elementStream next.\r\t\t\tele decode: target withDERStream: derStream].\r\t[elementStream atEnd] \r\t\twhileFalse: [\r\t\t\tele := elementStream next.\r\t\t\tele hasDefault ifTrue: [ele value: ele default into: target].\r\t\t\tele hasDefaultOrIsOptional\r\t\t\t\tifFalse: [self error: \'missing element\'] ].\r\tderStream position < stopPosition ifTrue: [self error: \'invalid length\'].\r\t^ target\r',			#stamp : 'rww 4/14/2007 10:53',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '386' ],		#self : OmReference [ '387' ],		#time : DateAndTime [ '2018-08-16T16:44:10.088843+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\tself elements do: [:each |\r\t\teach encode: anObject withDERStream: derStream].\r',			#stamp : 'rww 3/27/2007 15:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '387' ],		#self : OmReference [ '388' ],		#time : DateAndTime [ '2018-08-16T16:44:10.090017+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^ self mapping notNil \r\t\tifTrue: [anObject isKindOf: self mapping]\r\t\tifFalse: [anObject asn1Tag = self tag]\r',			#stamp : 'rww 3/26/2007 09:40',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '388' ],		#self : OmReference [ '389' ],		#time : DateAndTime [ '2018-08-16T16:44:10.091115+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #mapping,			#protocol : #accessing,			#sourceCode : 'mapping\r\t"Answer the value of mapping"\r\r\t^ mapping',			#stamp : 'rww 3/23/2007 16:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '389' ],		#self : OmReference [ '390' ],		#time : DateAndTime [ '2018-08-16T16:44:10.092186+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappedType,				#isMetaSide : false			},			#name : #'mapping:',			#protocol : #accessing,			#sourceCode : 'mapping: anObject\r\t"Set the value of mapping"\r\r\tmapping := anObject',			#stamp : 'rww 3/23/2007 16:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '390' ],		#self : OmReference [ '391' ],		#time : DateAndTime [ '2018-08-16T16:44:10.093341+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructuredType,				#isMetaSide : false			},			#name : #'add:type:',			#protocol : #'accessing - element construction',			#sourceCode : 'add: aSymbol type: type\r\r\t^self addElement: (\r\t\tself newElement\r\t\t\tsymbol: aSymbol;\r\t\t\ttype: (self typeFrom: type))',			#stamp : 'rww 3/23/2007 14:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '391' ],		#self : OmReference [ '392' ],		#time : DateAndTime [ '2018-08-16T16:44:10.094271+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructuredType,				#isMetaSide : false			},			#name : #'add:type:explicitTag:',			#protocol : #'accessing - element construction',			#sourceCode : 'add: aSymbol type: type explicitTag: integer\r\r\t^(self add: aSymbol type: type)\r\t\texplicitTag: integer;\r\t\tyourself.\r',			#stamp : 'rww 3/24/2007 10:40',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '392' ],		#self : OmReference [ '393' ],		#time : DateAndTime [ '2018-08-16T16:44:10.095527+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructuredType,				#isMetaSide : false			},			#name : #'add:type:implicitTag:',			#protocol : #'accessing - element construction',			#sourceCode : 'add: aSymbol type: type implicitTag: integer\r\r\t^(self add: aSymbol type: type)\r\t\timplicitTag: integer;\r\t\tyourself.\r',			#stamp : 'rww 3/24/2007 10:40',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '393' ],		#self : OmReference [ '394' ],		#time : DateAndTime [ '2018-08-16T16:44:10.097501+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructuredType,				#isMetaSide : false			},			#name : #'addElement:',			#protocol : #private,			#sourceCode : 'addElement: element\r\r\tself elements addLast: element.\r\telement addedTo: self.\r\t^element',			#stamp : 'rww 3/23/2007 14:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '394' ],		#self : OmReference [ '395' ],		#time : DateAndTime [ '2018-08-16T16:44:10.09879+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructuredType,				#isMetaSide : false			},			#name : #'elementWithSymbol:',			#protocol : #accessing,			#sourceCode : 'elementWithSymbol: aSymbol\r\r\t^ self elements\r\t\tdetect: [:each | each symbol == aSymbol]\r\t\tifNone: [self error: \'no element specified in structured type\'].\r',			#stamp : 'rww 3/27/2007 16:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '395' ],		#self : OmReference [ '396' ],		#time : DateAndTime [ '2018-08-16T16:44:10.099953+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructuredType,				#isMetaSide : false			},			#name : #elements,			#protocol : #accessing,			#sourceCode : 'elements\r\t"Answer the value of elements"\r\r\t^ elements',			#stamp : 'rww 3/22/2007 22:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '396' ],		#self : OmReference [ '397' ],		#time : DateAndTime [ '2018-08-16T16:44:10.101076+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructuredType,				#isMetaSide : false			},			#name : #'elements:',			#protocol : #accessing,			#sourceCode : 'elements: anObject\r\t"Set the value of elements"\r\r\telements := anObject',			#stamp : 'rww 3/22/2007 22:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '397' ],		#self : OmReference [ '398' ],		#time : DateAndTime [ '2018-08-16T16:44:10.102171+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructuredType,				#isMetaSide : false			},			#name : #hasElements,			#protocol : #accessing,			#sourceCode : 'hasElements\r\r\t^ self elements notEmpty',			#stamp : 'rww 3/23/2007 18:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '398' ],		#self : OmReference [ '399' ],		#time : DateAndTime [ '2018-08-16T16:44:10.103291+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructuredType,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\r\tsuper initialize.\r\tself elements: (OrderedCollection new: 5).\r',			#stamp : 'rww 3/23/2007 13:49',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '399' ],		#self : OmReference [ '400' ],		#time : DateAndTime [ '2018-08-16T16:44:10.104405+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1StructuredType,				#isMetaSide : false			},			#name : #newElement,			#protocol : #private,			#sourceCode : 'newElement\r\r\t^ ASN1StructureElement new',			#stamp : 'rww 3/23/2007 14:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '400' ],		#self : OmReference [ '401' ],		#time : DateAndTime [ '2018-08-16T16:44:10.106313+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SequenceType,				#isMetaSide : false			},			#name : #containerClass,			#protocol : #accessing,			#sourceCode : 'containerClass\r\r\t^ OrderedCollection',			#stamp : 'rww 3/27/2007 15:42',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '401' ],		#self : OmReference [ '402' ],		#time : DateAndTime [ '2018-08-16T16:44:10.107243+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SequenceType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 48',			#stamp : 'rww 3/27/2007 15:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '402' ],		#self : OmReference [ '403' ],		#time : DateAndTime [ '2018-08-16T16:44:10.108525+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SetType,				#isMetaSide : false			},			#name : #containerClass,			#protocol : #accessing,			#sourceCode : 'containerClass\r\r\t^ OrderedSet',			#stamp : 'rww 4/16/2007 02:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '403' ],		#self : OmReference [ '404' ],		#time : DateAndTime [ '2018-08-16T16:44:10.109467+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SetType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 49',			#stamp : 'rww 3/27/2007 15:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '404' ],		#self : OmReference [ '405' ],		#time : DateAndTime [ '2018-08-16T16:44:10.110646+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UnmappedType,				#isMetaSide : false			},			#name : #'decodeValueIndefiniteLengthWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeValueIndefiniteLengthWithDERStream: derStream\r\r\t| coll value |\r\tcoll := self containerClass new.\r\t[derStream peekTag = 0\r\t\tifTrue: [value := ASN1EndOfIndefiniteLengthType new decodeWithDERStream: derStream]\r\t\tifFalse: [value := derStream decode].\r\tvalue isKindOf: ASN1EndOfIndefiniteLengthMarker] \r\t\twhileFalse: [coll add: value].\r\t^coll',			#stamp : 'rww 4/14/2007 11:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '405' ],		#self : OmReference [ '406' ],		#time : DateAndTime [ '2018-08-16T16:44:10.111593+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UnmappedType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t| coll end obj |\r\tlength = -1\r\t\tifTrue: [^ self decodeValueIndefiniteLengthWithDERStream: derStream].\r\tcoll := self containerClass new.\r\tend := derStream position + length.\r\t[derStream position < end ] whileTrue: [\r\t\tobj := derStream decode.\r\t\tcoll add: obj].\r\t^coll',			#stamp : 'rww 4/14/2007 10:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '406' ],		#self : OmReference [ '407' ],		#time : DateAndTime [ '2018-08-16T16:44:10.112665+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UnmappedType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\tanObject do: [:each |\r\t\tderStream encode: each].\r',			#stamp : 'rww 3/27/2007 15:26',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '407' ],		#self : OmReference [ '408' ],		#time : DateAndTime [ '2018-08-16T16:44:10.114442+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SequenceOfType,				#isMetaSide : false			},			#name : #containerClass,			#protocol : #accessing,			#sourceCode : 'containerClass\r\r\t^ OrderedCollection',			#stamp : 'rww 3/27/2007 15:42',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '408' ],		#self : OmReference [ '409' ],		#time : DateAndTime [ '2018-08-16T16:44:10.115409+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SequenceOfType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 48',			#stamp : 'rww 3/23/2007 17:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '409' ],		#self : OmReference [ '410' ],		#time : DateAndTime [ '2018-08-16T16:44:10.116529+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SetOfType,				#isMetaSide : false			},			#name : #containerClass,			#protocol : #accessing,			#sourceCode : 'containerClass\r\r\t^ OrderedSet',			#stamp : 'rww 4/16/2007 02:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '410' ],		#self : OmReference [ '411' ],		#time : DateAndTime [ '2018-08-16T16:44:10.117419+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SetOfType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ 49',			#stamp : 'rww 3/23/2007 17:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '411' ],		#self : OmReference [ '412' ],		#time : DateAndTime [ '2018-08-16T16:44:10.118574+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UnstructuredType,				#isMetaSide : false			},			#name : #'decodeValueIndefiniteLengthWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeValueIndefiniteLengthWithDERStream: derStream\r\r\t| coll value |\r\tcoll := self containerClass new.\r\t[derStream peekTag = 0\r\t\tifTrue: [value := ASN1EndOfIndefiniteLengthType new decodeWithDERStream: derStream]\r\t\tifFalse: [value := self elementType decodeWithDERStream: derStream].\r\tvalue isKindOf: ASN1EndOfIndefiniteLengthMarker] \r\t\twhileFalse: [coll add: value].\r\t^coll',			#stamp : 'rww 4/14/2007 10:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '412' ],		#self : OmReference [ '413' ],		#time : DateAndTime [ '2018-08-16T16:44:10.11953+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UnstructuredType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t| coll end obj |\r\tlength = -1\r\t\tifTrue: [^ self decodeValueIndefiniteLengthWithDERStream: derStream].\r\tcoll := self containerClass new.\r\tend := derStream position + length.\r\t[derStream position < end ] whileTrue: [\r\t\tobj := self elementType decodeWithDERStream: derStream.\r\t\tcoll add: obj].\r\t^coll',			#stamp : 'rww 4/14/2007 10:37',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '413' ],		#self : OmReference [ '414' ],		#time : DateAndTime [ '2018-08-16T16:44:10.120582+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UnstructuredType,				#isMetaSide : false			},			#name : #elementType,			#protocol : #accessing,			#sourceCode : 'elementType\r\t"Answer the value of elementType"\r\r\t^ elementType',			#stamp : 'rww 3/23/2007 12:33',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '414' ],		#self : OmReference [ '415' ],		#time : DateAndTime [ '2018-08-16T16:44:10.122365+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UnstructuredType,				#isMetaSide : false			},			#name : #'elementType:',			#protocol : #accessing,			#sourceCode : 'elementType: anObject\r\t"Set the value of elementType"\r\r\telementType := self typeFrom: anObject.\r',			#stamp : 'rww 3/23/2007 13:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '415' ],		#self : OmReference [ '416' ],		#time : DateAndTime [ '2018-08-16T16:44:10.12348+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UnstructuredType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\tanObject do: [:each |\r\t\tself elementType \r\t\t\tencode: each \r\t\t\twithDERStream: derStream].\r',			#stamp : 'rww 3/25/2007 18:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '416' ],		#self : OmReference [ '417' ],		#time : DateAndTime [ '2018-08-16T16:44:10.124626+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AssignmentSubType,				#isMetaSide : false			},			#name : #'decodeWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream\r\r\t^ self parent decodeWithDERStream: derStream.\r',			#stamp : 'rww 3/28/2007 20:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '417' ],		#self : OmReference [ '418' ],		#time : DateAndTime [ '2018-08-16T16:44:10.125539+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AssignmentSubType,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream\r\r\t^ self parent encode: anObject withDERStream: derStream.\r',			#stamp : 'rww 3/28/2007 20:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '418' ],		#self : OmReference [ '419' ],		#time : DateAndTime [ '2018-08-16T16:44:10.12661+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AssignmentSubType,				#isMetaSide : false			},			#name : #'matchesTag:',			#protocol : #testing,			#sourceCode : 'matchesTag: anInteger\r\r\t^ self parent matchesTag: anInteger',			#stamp : 'rww 3/28/2007 20:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '419' ],		#self : OmReference [ '420' ],		#time : DateAndTime [ '2018-08-16T16:44:10.127774+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitSubType,				#isMetaSide : false			},			#name : #'decodeWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream\r\r\tderStream nextTag.\r\tderStream nextLength.\r\t^ self parent decodeWithDERStream: derStream.\r',			#stamp : 'rww 3/26/2007 05:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '420' ],		#self : OmReference [ '421' ],		#time : DateAndTime [ '2018-08-16T16:44:10.128688+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitSubType,				#isMetaSide : false			},			#name : #'decodeWithDERStream:owner:ownerType:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream owner: owner ownerType: ownerType\r\r\tderStream nextTag.\r\tderStream nextLength.\r\t^ self parent decodeWithDERStream: derStream owner: owner ownerType: ownerType.\r',			#stamp : 'rww 3/29/2007 15:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '421' ],		#self : OmReference [ '422' ],		#time : DateAndTime [ '2018-08-16T16:44:10.130475+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitSubType,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream\r\r\t| tempStream |\r\tderStream nextPutTag: (self asn1Tag bitOr: 160).\r\ttempStream := derStream newStream.\r\tself parent encode: anObject withDERStream: tempStream.\r\tderStream nextPutLength: tempStream size.\r\tderStream nextPutAll: tempStream contents.\r',			#stamp : 'rww 3/25/2007 18:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '422' ],		#self : OmReference [ '423' ],		#time : DateAndTime [ '2018-08-16T16:44:10.131625+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitSubType,				#isMetaSide : false			},			#name : #'encode:withDERStream:owner:ownerType:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream owner: owner ownerType: ownerType\r\r\t| tempStream |\r\tderStream nextPutTag: (self asn1Tag bitOr: 160).\r\ttempStream := derStream newStream.\r\tself parent encode: anObject withDERStream: tempStream owner: owner ownerType: ownerType.\r\tderStream nextPutLength: tempStream size.\r\tderStream nextPutAll: tempStream contents.\r',			#stamp : 'rww 4/15/2007 17:42',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '423' ],		#self : OmReference [ '424' ],		#time : DateAndTime [ '2018-08-16T16:44:10.132819+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ImplicitSubType,				#isMetaSide : false			},			#name : #'decodeWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream\r\r\t| thisTag |\r\tthisTag := derStream nextTag.\r\t(self parent isConstructed not and: [(thisTag bitAnd: 2r00100000) > 0])\r\t\tifTrue: [^ self parent \r\t\t\tdecodeConstructedValueWithDERStream: derStream \r\t\t\tlength: derStream nextLength]\r\t\tifFalse: [^ self parent \r\t\t\tdecodeValueWithDERStream: derStream \r\t\t\tlength: derStream nextLength].\r',			#stamp : 'rww 4/14/2007 12:23',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '424' ],		#self : OmReference [ '425' ],		#time : DateAndTime [ '2018-08-16T16:44:10.133759+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ImplicitSubType,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream\r\r\t| myTag tempStream |\r\tmyTag := self asn1Tag bitOr: 128.\r\tself parent isConstructed\r\t\tifTrue: [myTag := myTag bitOr: 32].\r\tderStream nextPutTag: myTag.\r\ttempStream := derStream newStream.\r\tself parent encodeValue: anObject withDERStream: tempStream.\r\tderStream nextPutLength: tempStream size.\r\tderStream nextPutAll: tempStream contents.\r\r\r\r',			#stamp : 'rww 3/25/2007 23:45',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '425' ],		#self : OmReference [ '426' ],		#time : DateAndTime [ '2018-08-16T16:44:10.135021+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #accessor,			#protocol : #accessing,			#sourceCode : 'accessor\r\r\t^self mappingSymbol',			#stamp : 'rww 3/28/2007 07:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '426' ],		#self : OmReference [ '427' ],		#time : DateAndTime [ '2018-08-16T16:44:10.136082+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #'decodeWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream\r\r\t| target val |\r\ttarget := self mapping new.\r\tval := self parent decodeWithDERStream: derStream.\r\ttarget perform: self mutator with: val.\r\t^ target\r',			#stamp : 'rww 3/28/2007 07:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '427' ],		#self : OmReference [ '428' ],		#time : DateAndTime [ '2018-08-16T16:44:10.137444+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #'decodeWithDERStream:owner:ownerType:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream owner: owner ownerType: ownerType\r\r\t| target val |\r\ttarget := self mapping new.\r\tval := self parent\r\t\tdecodeWithDERStream: derStream \r\t\towner: owner \r\t\townerType: ownerType.\r\ttarget perform: self mutator with: val.\r\t^ target\r',			#stamp : 'rww 3/28/2007 07:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '428' ],		#self : OmReference [ '429' ],		#time : DateAndTime [ '2018-08-16T16:44:10.139525+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream\r\r\t^ self parent\r\t\tencode: (anObject perform: self accessor)\r\t\twithDERStream: derStream \r',			#stamp : 'rww 3/28/2007 07:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '429' ],		#self : OmReference [ '430' ],		#time : DateAndTime [ '2018-08-16T16:44:10.140813+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #'encode:withDERStream:owner:ownerType:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream owner: owner ownerType: ownerType\r\r\t^ self parent\r\t\tencode: (anObject perform: self accessor) \r\t\twithDERStream: derStream \r\t\towner: owner \r\t\townerType: ownerType\r',			#stamp : 'rww 3/28/2007 07:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '430' ],		#self : OmReference [ '431' ],		#time : DateAndTime [ '2018-08-16T16:44:10.142074+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #mapping,			#protocol : #accessing,			#sourceCode : 'mapping\r\t"Answer the value of mapping"\r\r\t^ mapping',			#stamp : 'rww 3/28/2007 05:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '431' ],		#self : OmReference [ '432' ],		#time : DateAndTime [ '2018-08-16T16:44:10.143316+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #'mapping:',			#protocol : #accessing,			#sourceCode : 'mapping: anObject\r\t"Set the value of mapping"\r\r\tmapping := anObject',			#stamp : 'rww 3/28/2007 05:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '432' ],		#self : OmReference [ '433' ],		#time : DateAndTime [ '2018-08-16T16:44:10.144585+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #'mapping:mappingSymbol:type:',			#protocol : #accessing,			#sourceCode : 'mapping: aClass mappingSymbol: aSymbol type: aType\r\r\tself mapping: aClass.\r\tself mappingSymbol: aSymbol.\r\tself parent: aType.\r',			#stamp : 'rww 3/28/2007 10:49',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '433' ],		#self : OmReference [ '434' ],		#time : DateAndTime [ '2018-08-16T16:44:10.145844+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #mappingSymbol,			#protocol : #accessing,			#sourceCode : 'mappingSymbol\r\t"Answer the value of mappingSymbol"\r\r\t^ mappingSymbol',			#stamp : 'rww 3/28/2007 05:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '434' ],		#self : OmReference [ '435' ],		#time : DateAndTime [ '2018-08-16T16:44:10.147023+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #'mappingSymbol:',			#protocol : #accessing,			#sourceCode : 'mappingSymbol: anObject\r\t"Set the value of mappingSymbol"\r\r\tmappingSymbol := anObject',			#stamp : 'rww 3/28/2007 05:59',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '435' ],		#self : OmReference [ '436' ],		#time : DateAndTime [ '2018-08-16T16:44:10.149073+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #'matchesTag:',			#protocol : #testing,			#sourceCode : 'matchesTag: anInteger\r\r\t^ self parent matchesTag: anInteger',			#stamp : 'rww 3/28/2007 06:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '436' ],		#self : OmReference [ '437' ],		#time : DateAndTime [ '2018-08-16T16:44:10.150234+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1MappingSubType,				#isMetaSide : false			},			#name : #mutator,			#protocol : #accessing,			#sourceCode : 'mutator\r\r\t^(self mappingSymbol copyWith: $:) asSymbol',			#stamp : 'rww 3/28/2007 07:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '437' ],		#self : OmReference [ '438' ],		#time : DateAndTime [ '2018-08-16T16:44:10.151358+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SubType,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^self parent isTypeFor: anObject\r',			#stamp : 'rww 3/25/2007 23:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '438' ],		#self : OmReference [ '439' ],		#time : DateAndTime [ '2018-08-16T16:44:10.152307+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SubType,				#isMetaSide : false			},			#name : #'matchesTag:',			#protocol : #testing,			#sourceCode : 'matchesTag: anInteger\r\r\t^ ((tag bitXor: anInteger) bitAnd: 2r00011111) isZero\r',			#stamp : 'rww 3/25/2007 10:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '439' ],		#self : OmReference [ '440' ],		#time : DateAndTime [ '2018-08-16T16:44:10.153393+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SubType,				#isMetaSide : false			},			#name : #parent,			#protocol : #accessing,			#sourceCode : 'parent\r\t"Answer the value of parent"\r\r\t^ parent',			#stamp : 'rww 3/23/2007 12:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '440' ],		#self : OmReference [ '441' ],		#time : DateAndTime [ '2018-08-16T16:44:10.154439+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SubType,				#isMetaSide : false			},			#name : #'parent:',			#protocol : #accessing,			#sourceCode : 'parent: anObject\r\t"Set the value of parent"\r\r\tparent := self typeFrom: anObject.',			#stamp : 'rww 3/28/2007 07:35',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '441' ],		#self : OmReference [ '442' ],		#time : DateAndTime [ '2018-08-16T16:44:10.155748+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SubType,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ tag',			#stamp : 'rww 3/23/2007 17:26',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '442' ],		#self : OmReference [ '443' ],		#time : DateAndTime [ '2018-08-16T16:44:10.15811+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1SubType,				#isMetaSide : false			},			#name : #'tag:',			#protocol : #accessing,			#sourceCode : 'tag: anObject\r\t"Set the value of tag"\r\r\ttag := anObject',			#stamp : 'rww 3/23/2007 17:25',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '443' ],		#self : OmReference [ '444' ],		#time : DateAndTime [ '2018-08-16T16:44:10.159463+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #accessing,			#sourceCode : 'asn1Tag\r\r\t^ self tag',			#stamp : 'rww 3/25/2007 10:26',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '444' ],		#self : OmReference [ '445' ],		#time : DateAndTime [ '2018-08-16T16:44:10.160578+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t^ self subclassResponsibility',			#stamp : 'rww 3/26/2007 05:58',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '445' ],		#self : OmReference [ '446' ],		#time : DateAndTime [ '2018-08-16T16:44:10.161829+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #'decodeWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream\r\r\t| tag |\r\ttag := derStream nextTag.\r\t(self matchesTag: tag)\r\t\tifFalse: [self error: \'asn1 decoder: bad tag\'].\r\t^ self \r\t\tdecodeValueWithDERStream: derStream \r\t\tlength: derStream nextLength.\r\t\r',			#stamp : 'rww 4/14/2007 10:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '446' ],		#self : OmReference [ '447' ],		#time : DateAndTime [ '2018-08-16T16:44:10.163073+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #'decodeWithDERStream:owner:ownerType:',			#protocol : #decoding,			#sourceCode : 'decodeWithDERStream: derStream owner: owner ownerType: ownerType\r\r\t^ self decodeWithDERStream: derStream.\r',			#stamp : 'rww 3/27/2007 16:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '447' ],		#self : OmReference [ '448' ],		#time : DateAndTime [ '2018-08-16T16:44:10.164328+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #'encode:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream\r\r\t| size |\r\tderStream nextPutTag: anObject asn1Tag.\r\tsize := self sizeOfObject: anObject.\r\tderStream nextPutLength: size.\r\tself encodeValue: anObject withDERStream: derStream.\r\t^ derStream\r',			#stamp : 'rww 3/27/2007 15:45',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '448' ],		#self : OmReference [ '449' ],		#time : DateAndTime [ '2018-08-16T16:44:10.165525+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #'encode:withDERStream:owner:ownerType:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withDERStream: derStream owner: owner ownerType: ownerType\r\r\t^ self encode: anObject withDERStream: derStream\r',			#stamp : 'rww 3/27/2007 16:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '449' ],		#self : OmReference [ '450' ],		#time : DateAndTime [ '2018-08-16T16:44:10.167486+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\t^ self subclassResponsibility',			#stamp : 'rww 3/25/2007 11:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '450' ],		#self : OmReference [ '451' ],		#time : DateAndTime [ '2018-08-16T16:44:10.168684+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #isConstructed,			#protocol : #testing,			#sourceCode : 'isConstructed\r\r\t^ false',			#stamp : 'rww 3/25/2007 23:40',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '451' ],		#self : OmReference [ '452' ],		#time : DateAndTime [ '2018-08-16T16:44:10.169927+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #'isTypeFor:',			#protocol : #testing,			#sourceCode : 'isTypeFor: anObject\r\r\t^((self asn1Tag bitXor: anObject asn1Tag) bitAnd: 2r00011111) isZero',			#stamp : 'rww 3/25/2007 17:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '452' ],		#self : OmReference [ '453' ],		#time : DateAndTime [ '2018-08-16T16:44:10.171025+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #'matchesTag:',			#protocol : #testing,			#sourceCode : 'matchesTag: anInteger\r\r\t^((self asn1Tag bitXor: anInteger) bitAnd: 2r00011111) isZero',			#stamp : 'rww 3/25/2007 10:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '453' ],		#self : OmReference [ '454' ],		#time : DateAndTime [ '2018-08-16T16:44:10.172144+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #parent,			#protocol : #accessing,			#sourceCode : 'parent\r\r\t^ nil',			#stamp : 'rww 3/23/2007 16:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '454' ],		#self : OmReference [ '455' ],		#time : DateAndTime [ '2018-08-16T16:44:10.173207+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t^ nil',			#stamp : 'rww 3/25/2007 20:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '455' ],		#self : OmReference [ '456' ],		#time : DateAndTime [ '2018-08-16T16:44:10.174243+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Type,				#isMetaSide : false			},			#name : #tag,			#protocol : #accessing,			#sourceCode : 'tag\r\r\t^ self subclassResponsibility',			#stamp : 'rww 3/23/2007 17:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '456' ],		#self : OmReference [ '457' ],		#time : DateAndTime [ '2018-08-16T16:44:10.176295+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1WrapperConstructedType,				#isMetaSide : false			},			#name : #'decodeValueIndefiniteLengthWithDERStream:',			#protocol : #decoding,			#sourceCode : 'decodeValueIndefiniteLengthWithDERStream: derStream\r\r\t| contextValue sequence value |\r\tcontextValue := ASN1ExplicitContextValue new.\r\tcontextValue tagIndex: (derStream currentTag bitAnd: 2r00011111).\r\tcontextValue tagIsPrimitive: false.\r\tsequence := OrderedCollection new.\r\t[derStream peekTag = 0\r\t\tifTrue: [value := ASN1EndOfIndefiniteLengthType new decodeWithDERStream: derStream]\r\t\tifFalse: [value := derStream decode].\r\tvalue isKindOf: ASN1EndOfIndefiniteLengthMarker] \r\t\twhileFalse: [sequence add: value].\r\tcontextValue tagValue: sequence.\r\t^contextValue\r\t\r',			#stamp : 'rww 4/14/2007 11:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '457' ],		#self : OmReference [ '458' ],		#time : DateAndTime [ '2018-08-16T16:44:10.177318+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1WrapperConstructedType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t| aValue sequence stopPosition |\r\tlength = -1\r\t\tifTrue: [^ self decodeValueIndefiniteLengthWithDERStream: derStream].\r\taValue := ASN1ExplicitContextValue new.\r\taValue tagIndex: (derStream currentTag bitAnd: 2r00011111).\r\taValue tagIsPrimitive: false.\r\tsequence := OrderedCollection new.\r\tstopPosition := derStream position + length.\r\t[derStream position < stopPosition] whileTrue: [\r\t\tsequence add: derStream decode].\r\taValue tagValue: sequence.\r\t^aValue\r\t\r',			#stamp : 'rww 4/14/2007 10:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '458' ],		#self : OmReference [ '459' ],		#time : DateAndTime [ '2018-08-16T16:44:10.178402+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1WrapperConstructedType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\tanObject tagValue do: [:each |\r\t\tderStream encode: each].\r\t\r',			#stamp : 'rww 3/25/2007 20:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '459' ],		#self : OmReference [ '460' ],		#time : DateAndTime [ '2018-08-16T16:44:10.179508+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1WrapperConstructedType,				#isMetaSide : false			},			#name : #'sizeOfObject:',			#protocol : #encoding,			#sourceCode : 'sizeOfObject: anObject\r\r\t| derStream |\r\tderStream := ASN1Stream new.\r\tanObject tagValue do: [:each |\r\t\tderStream encode: each].\r\t^ derStream size',			#stamp : 'rww 4/14/2007 18:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '460' ],		#self : OmReference [ '461' ],		#time : DateAndTime [ '2018-08-16T16:44:10.180623+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1WrapperPrimitiveType,				#isMetaSide : false			},			#name : #'decodeValueWithDERStream:length:',			#protocol : #decoding,			#sourceCode : 'decodeValueWithDERStream: derStream length: length\r\r\t| aValue |\r\taValue := ASN1ExplicitContextValue new.\r\taValue tagIndex: (derStream currentTag bitAnd: 2r00011111).\r\taValue tagIsPrimitive: true.\r\taValue tagValue: (derStream next: length).\r\t^aValue\r\t\r',			#stamp : 'rww 3/26/2007 06:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '461' ],		#self : OmReference [ '462' ],		#time : DateAndTime [ '2018-08-16T16:44:10.181565+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1WrapperPrimitiveType,				#isMetaSide : false			},			#name : #'encodeValue:withDERStream:',			#protocol : #encoding,			#sourceCode : 'encodeValue: anObject withDERStream: derStream\r\r\tderStream nextPutAll: anObject tagValue.\r',			#stamp : 'rww 3/25/2007 20:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '462' ],		#self : OmReference [ '463' ],		#time : DateAndTime [ '2018-08-16T16:44:10.183389+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1WrapperType,				#isMetaSide : false			},			#name : #'matchesTag:',			#protocol : #testing,			#sourceCode : 'matchesTag: anInteger\r\r\t^ (anInteger bitAnd: 2r11000000) isZero not\r',			#stamp : 'rww 3/29/2007 09:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '463' ],		#self : OmReference [ '464' ],		#time : DateAndTime [ '2018-08-16T16:44:10.184425+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Module class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\r\r\tModules := Dictionary new.\r',			#stamp : 'rww 3/23/2007 13:42',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '464' ],		#self : OmReference [ '465' ],		#time : DateAndTime [ '2018-08-16T16:44:10.185385+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Module class',				#isMetaSide : true			},			#name : #modules,			#protocol : #accessing,			#sourceCode : 'modules\r\r\t^ Modules',			#stamp : 'rww 3/23/2007 13:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '465' ],		#self : OmReference [ '466' ],		#time : DateAndTime [ '2018-08-16T16:44:10.186524+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Module class',				#isMetaSide : true			},			#name : #'name:',			#protocol : #'instance creation',			#sourceCode : 'name: aSymbol\r\t"ASN1Module name: #x509"\r\r\t| mod |\r\t^ self modules\r\t\tat: aSymbol\r\t\tifAbsent: [\r\t\t\tmod := self new\r\t\t\t\tname: aSymbol;\r\t\t\t\tyourself.\r\t\t\tself modules at: mod name put: mod.\r\t\t\tmod].\r',			#stamp : 'rww 3/23/2007 13:45',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '466' ],		#self : OmReference [ '467' ],		#time : DateAndTime [ '2018-08-16T16:44:10.18768+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'add:',			#protocol : #services,			#sourceCode : 'add: aType\r\r\t| old |\r\told := self definitions at: aType name ifAbsent: [nil].\r\taType module: self.\r\told ifNotNil: [old becomeForward: aType].\r\t^self definitions at: aType name put: aType.\r',			#stamp : 'rww 3/28/2007 05:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '467' ],		#self : OmReference [ '468' ],		#time : DateAndTime [ '2018-08-16T16:44:10.188637+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'addImport:',			#protocol : #accessing,			#sourceCode : 'addImport: aModule\r\r\t(self imports includes: aModule)\r\t\tifFalse: [self imports add: aModule].\r',			#stamp : 'rww 4/13/2007 20:44',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '468' ],		#self : OmReference [ '469' ],		#time : DateAndTime [ '2018-08-16T16:44:10.189813+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'any:',			#protocol : #'definitions - mapped',			#sourceCode : 'any: aSymbol\r\r\t^ASN1AnyType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '469' ],		#self : OmReference [ '470' ],		#time : DateAndTime [ '2018-08-16T16:44:10.19088+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'any:definedBy:',			#protocol : #'definitions - mapped',			#sourceCode : 'any: aSymbol definedBy: slotSymbol\r\r\t^ (ASN1AnyDefinedByType name: aSymbol in: self)\r\t\tdefinedBy: slotSymbol;\r\t\tyourself.\r',			#stamp : 'rww 3/27/2007 16:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '470' ],		#self : OmReference [ '471' ],		#time : DateAndTime [ '2018-08-16T16:44:10.192871+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'assign:from:',			#protocol : #'definitions - mapped',			#sourceCode : 'assign: aSymbol from: otherSymbol\r\r\t^ (ASN1AssignmentSubType name: aSymbol in: self)\r\t\tparent: otherSymbol;\r\t\tyourself',			#stamp : 'rww 3/28/2007 20:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '471' ],		#self : OmReference [ '472' ],		#time : DateAndTime [ '2018-08-16T16:44:10.194164+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'bitString:',			#protocol : #'definitions - mapped',			#sourceCode : 'bitString: aSymbol\r\r\t^ASN1BitStringType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '472' ],		#self : OmReference [ '473' ],		#time : DateAndTime [ '2018-08-16T16:44:10.195312+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'bmpString:',			#protocol : #'definitions - mapped',			#sourceCode : 'bmpString: aSymbol\r\r\t^ASN1BMPStringType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '473' ],		#self : OmReference [ '474' ],		#time : DateAndTime [ '2018-08-16T16:44:10.196475+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'boolean:',			#protocol : #'definitions - mapped',			#sourceCode : 'boolean: aSymbol\r\r\t^ASN1BooleanType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '474' ],		#self : OmReference [ '475' ],		#time : DateAndTime [ '2018-08-16T16:44:10.19759+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'byteArray:',			#protocol : #'definitions - mapped',			#sourceCode : 'byteArray: aSymbol\r\r\t^ASN1ByteArrayType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '475' ],		#self : OmReference [ '476' ],		#time : DateAndTime [ '2018-08-16T16:44:10.198727+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'choice:',			#protocol : #'definitions - mapped',			#sourceCode : 'choice: aSymbol\r\r\t^ASN1ChoiceType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '476' ],		#self : OmReference [ '477' ],		#time : DateAndTime [ '2018-08-16T16:44:10.200591+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #definitions,			#protocol : #accessing,			#sourceCode : 'definitions\r\t"Answer the value of definitions"\r\r\t^ definitions',			#stamp : 'rww 3/23/2007 11:49',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '477' ],		#self : OmReference [ '478' ],		#time : DateAndTime [ '2018-08-16T16:44:10.201702+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'definitions:',			#protocol : #accessing,			#sourceCode : 'definitions: anObject\r\t"Set the value of definitions"\r\r\tdefinitions := anObject',			#stamp : 'rww 3/23/2007 11:49',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '478' ],		#self : OmReference [ '479' ],		#time : DateAndTime [ '2018-08-16T16:44:10.202803+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'enumerated:',			#protocol : #'definitions - mapped',			#sourceCode : 'enumerated: aSymbol\r\r\t^self notYetImplemented\r',			#stamp : 'rww 3/23/2007 12:18',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '479' ],		#self : OmReference [ '480' ],		#time : DateAndTime [ '2018-08-16T16:44:10.203909+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'explicit:type:tag:',			#protocol : #'definitions - mapped',			#sourceCode : 'explicit: aSymbol type: type tag: tag\r\r\t^ (ASN1ExplicitSubType name: aSymbol in: self)\r\t\tparent: type;\r\t\ttag: tag;\r\t\tyourself\r',			#stamp : 'rww 3/30/2007 23:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '480' ],		#self : OmReference [ '481' ],		#time : DateAndTime [ '2018-08-16T16:44:10.205006+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'find:',			#protocol : #services,			#sourceCode : 'find: aSymbol\r\t"check the following sources:\r\t\t- ASN1Type subclasses\r\t\t- my definitions\r\t\t- import definitions\r\totherwise create a ASN1TypeReference"\r\r\t| type |\r\ttype := self primitiveTypeFind: aSymbol.\r\ttype notNil ifTrue: [^ type].\r\ttype := self localFind: aSymbol.\r\ttype notNil ifTrue: [^ type].\r\tself imports \r\t\tdo: [:eachImportModule |\r\t\t\ttype := eachImportModule localFind: aSymbol.\r\t\t\ttype notNil ifTrue: [^ type]].\r\t^ ASN1TypeReference name: aSymbol in: self.\r',			#stamp : 'rww 4/12/2007 13:20',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '481' ],		#self : OmReference [ '482' ],		#time : DateAndTime [ '2018-08-16T16:44:10.206102+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'ia5String:',			#protocol : #'definitions - mapped',			#sourceCode : 'ia5String: aSymbol\r\r\t^ASN1IA5StringType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '482' ],		#self : OmReference [ '483' ],		#time : DateAndTime [ '2018-08-16T16:44:10.207173+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'implicit:type:tag:',			#protocol : #'definitions - mapped',			#sourceCode : 'implicit: aSymbol type: type tag: tag\r\r\t^ (ASN1ImplicitSubType name: aSymbol in: self)\r\t\tparent: type;\r\t\ttag: tag;\r\t\tyourself\r',			#stamp : 'rww 3/30/2007 23:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '483' ],		#self : OmReference [ '484' ],		#time : DateAndTime [ '2018-08-16T16:44:10.209032+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #imports,			#protocol : #accessing,			#sourceCode : 'imports\r\t"Answer the value of imports"\r\r\t^ imports',			#stamp : 'rww 4/12/2007 12:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '484' ],		#self : OmReference [ '485' ],		#time : DateAndTime [ '2018-08-16T16:44:10.210284+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'imports:',			#protocol : #accessing,			#sourceCode : 'imports: anObject\r\t"Set the value of imports"\r\r\timports := anObject',			#stamp : 'rww 4/12/2007 13:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '485' ],		#self : OmReference [ '486' ],		#time : DateAndTime [ '2018-08-16T16:44:10.211385+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\r\tself definitions: Dictionary new.\r\tself imports: OrderedCollection new.\r',			#stamp : 'rww 4/12/2007 12:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '486' ],		#self : OmReference [ '487' ],		#time : DateAndTime [ '2018-08-16T16:44:10.21247+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'integer:',			#protocol : #'definitions - mapped',			#sourceCode : 'integer: aSymbol\r\r\t^ASN1IntegerType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '487' ],		#self : OmReference [ '488' ],		#time : DateAndTime [ '2018-08-16T16:44:10.213569+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'localFind:',			#protocol : #services,			#sourceCode : 'localFind: aSymbol\r\r\t^ self definitions\r\t\tat: aSymbol\r\t\tifAbsent: [^ nil].\r',			#stamp : 'rww 4/12/2007 13:25',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '488' ],		#self : OmReference [ '489' ],		#time : DateAndTime [ '2018-08-16T16:44:10.214649+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'mapped:',			#protocol : #'definitions - mapped',			#sourceCode : 'mapped: aSymbol\r\r\t^ ASN1MappingSubType name: aSymbol in: self\r',			#stamp : 'rww 3/28/2007 10:45',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '489' ],		#self : OmReference [ '490' ],		#time : DateAndTime [ '2018-08-16T16:44:10.215705+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #name,			#protocol : #accessing,			#sourceCode : 'name\r\r\t^ name',			#stamp : 'rww 3/23/2007 11:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '490' ],		#self : OmReference [ '491' ],		#time : DateAndTime [ '2018-08-16T16:44:10.217484+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'name:',			#protocol : #accessing,			#sourceCode : 'name: anObject\r\t"Set the value of name"\r\r\tname := anObject',			#stamp : 'rww 3/23/2007 11:49',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '491' ],		#self : OmReference [ '492' ],		#time : DateAndTime [ '2018-08-16T16:44:10.218564+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'null:',			#protocol : #'definitions - mapped',			#sourceCode : 'null: aSymbol\r\r\t^ASN1NullType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '492' ],		#self : OmReference [ '493' ],		#time : DateAndTime [ '2018-08-16T16:44:10.219734+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'objectIdentifier:',			#protocol : #'definitions - mapped',			#sourceCode : 'objectIdentifier: aSymbol\r\r\t^ASN1ObjectIdentifierType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '493' ],		#self : OmReference [ '494' ],		#time : DateAndTime [ '2018-08-16T16:44:10.2209+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'primitiveTypeFind:',			#protocol : #services,			#sourceCode : 'primitiveTypeFind: aSymbol\r\r\t^ (ASN1Type allSubclasses\r\t\tdetect: [:class | class name asSymbol = aSymbol]\r\t\tifNone: [^ nil]) new\r',			#stamp : 'rww 4/12/2007 13:12',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '494' ],		#self : OmReference [ '495' ],		#time : DateAndTime [ '2018-08-16T16:44:10.222202+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'printableString:',			#protocol : #'definitions - mapped',			#sourceCode : 'printableString: aSymbol\r\r\t^ASN1PrintableStringType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '495' ],		#self : OmReference [ '496' ],		#time : DateAndTime [ '2018-08-16T16:44:10.223487+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'remove:',			#protocol : #services,			#sourceCode : 'remove: aType\r\r\tself definitions removeKey: aType name.\r\taType module: nil.\r\t^aType',			#stamp : 'rww 3/23/2007 12:35',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '496' ],		#self : OmReference [ '497' ],		#time : DateAndTime [ '2018-08-16T16:44:10.225445+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'sequence:',			#protocol : #'definitions - mapped',			#sourceCode : 'sequence: aSymbol\r\r\t^ASN1SequenceType name: aSymbol in: self',			#stamp : 'rww 3/27/2007 16:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '497' ],		#self : OmReference [ '498' ],		#time : DateAndTime [ '2018-08-16T16:44:10.228546+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'sequence:mapping:',			#protocol : #'definitions - mapped',			#sourceCode : 'sequence: aSymbol mapping: mappingClass\r\r\t^ (ASN1MappedSequenceType name: aSymbol in: self)\r\t\tmapping: mappingClass;\r\t\tyourself',			#stamp : 'rww 3/27/2007 15:35',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '498' ],		#self : OmReference [ '499' ],		#time : DateAndTime [ '2018-08-16T16:44:10.230161+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'sequence:of:',			#protocol : #'definitions - mapped',			#sourceCode : 'sequence: aSymbol of: typeSpec\r\r\t^ (ASN1SequenceOfType name: aSymbol in: self)\r\t\telementType: typeSpec;\r\t\tyourself',			#stamp : 'rww 3/23/2007 12:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '499' ],		#self : OmReference [ '500' ],		#time : DateAndTime [ '2018-08-16T16:44:10.231886+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'set:',			#protocol : #'definitions - mapped',			#sourceCode : 'set: aSymbol\r\r\t^ASN1SetType name: aSymbol in: self',			#stamp : 'rww 3/27/2007 16:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '500' ],		#self : OmReference [ '501' ],		#time : DateAndTime [ '2018-08-16T16:44:10.233568+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'set:mapping:',			#protocol : #'definitions - mapped',			#sourceCode : 'set: aSymbol mapping: mappingClass\r\r\t^ (ASN1MappedSetType name: aSymbol in: self)\r\t\tmapping: mappingClass;\r\t\tyourself',			#stamp : 'rww 3/27/2007 15:40',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '501' ],		#self : OmReference [ '502' ],		#time : DateAndTime [ '2018-08-16T16:44:10.234856+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'set:of:',			#protocol : #'definitions - mapped',			#sourceCode : 'set: aSymbol of: typeSpec\r\r\t^ (ASN1SetOfType name: aSymbol in: self)\r\t\telementType: typeSpec;\r\t\tyourself',			#stamp : 'rww 3/23/2007 12:33',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '502' ],		#self : OmReference [ '503' ],		#time : DateAndTime [ '2018-08-16T16:44:10.236149+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'teletextString:',			#protocol : #'definitions - mapped',			#sourceCode : 'teletextString: aSymbol\r\r\t^ASN1TeletexStringType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '503' ],		#self : OmReference [ '504' ],		#time : DateAndTime [ '2018-08-16T16:44:10.238135+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'typeFrom:',			#protocol : #services,			#sourceCode : 'typeFrom: aTypeSpec\r\r\t(aTypeSpec isKindOf: ASN1Type) ifTrue: [^ aTypeSpec].\r\taTypeSpec isBehavior ifTrue: [^ aTypeSpec new].\r\t^self find: aTypeSpec',			#stamp : 'rww 3/28/2007 05:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '504' ],		#self : OmReference [ '505' ],		#time : DateAndTime [ '2018-08-16T16:44:10.239537+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'universalString:',			#protocol : #'definitions - mapped',			#sourceCode : 'universalString: aSymbol\r\r\t^ASN1UniversalStringType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '505' ],		#self : OmReference [ '506' ],		#time : DateAndTime [ '2018-08-16T16:44:10.240722+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'utcTime:',			#protocol : #'definitions - mapped',			#sourceCode : 'utcTime: aSymbol\r\r\t^ASN1UTCTimeType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:20',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '506' ],		#self : OmReference [ '507' ],		#time : DateAndTime [ '2018-08-16T16:44:10.241704+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Module,				#isMetaSide : false			},			#name : #'utf8String:',			#protocol : #'definitions - mapped',			#sourceCode : 'utf8String: aSymbol\r\r\t^ASN1StringType name: aSymbol in: self',			#stamp : 'rww 3/23/2007 12:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '507' ],		#self : OmReference [ '508' ],		#time : DateAndTime [ '2018-08-16T16:44:10.242771+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Pragma class',				#isMetaSide : true			},			#name : #LICENSE,			#protocol : #LICENSE,			#sourceCode : 'LICENSE\r\t"http://www.opensource.org/licenses/mit-license.php"\r^\'Copyright (c) 2006 Ron Teitelbaum * US Medical Record Specialists * Ron@USMedRec.com\r\rPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\rThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\rTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\'\r',			#stamp : 'RJT 9/2/2006 15:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '508' ],		#self : OmReference [ '509' ],		#time : DateAndTime [ '2018-08-16T16:44:10.243709+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Pragma class',				#isMetaSide : true			},			#name : #'fromPragma:',			#protocol : #'instance creation',			#sourceCode : 'fromPragma: aPragma\r\t| aClass |\r\taClass := (self isAccessorPragma: aPragma) ifTrue: [ASN1PragmaAccessor] ifFalse: [ASN1PragmaMutator].\r\t^aClass fromPragma: aPragma',			#stamp : 'RJT 9/2/2006 14:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '509' ],		#self : OmReference [ '510' ],		#time : DateAndTime [ '2018-08-16T16:44:10.244738+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Pragma class',				#isMetaSide : true			},			#name : #'isAccessorPragma:',			#protocol : #'instance creation',			#sourceCode : 'isAccessorPragma: aPragma\r\t^aPragma keyword = #asn1FieldAccessor:',			#stamp : 'RJT 9/2/2006 14:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '510' ],		#self : OmReference [ '511' ],		#time : DateAndTime [ '2018-08-16T16:44:10.246508+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Pragma,				#isMetaSide : false			},			#name : #asn1name,			#protocol : #accessing,			#sourceCode : 'asn1name\r\t"Answer the value of asn1name"\r\r\t^ asn1name',			#stamp : 'RJT 9/2/2006 15:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '511' ],		#self : OmReference [ '512' ],		#time : DateAndTime [ '2018-08-16T16:44:10.247483+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Pragma,				#isMetaSide : false			},			#name : #'asn1name:',			#protocol : #accessing,			#sourceCode : 'asn1name: anObject\r\t"Set the value of asn1name"\r\r\tasn1name := anObject',			#stamp : 'RJT 9/2/2006 15:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '512' ],		#self : OmReference [ '513' ],		#time : DateAndTime [ '2018-08-16T16:44:10.248478+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Pragma,				#isMetaSide : false			},			#name : #method,			#protocol : #accessing,			#sourceCode : 'method\r\t"Answer the value of method"\r\r\t^ method',			#stamp : 'RJT 9/2/2006 14:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '513' ],		#self : OmReference [ '514' ],		#time : DateAndTime [ '2018-08-16T16:44:10.249469+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Pragma,				#isMetaSide : false			},			#name : #'method:',			#protocol : #accessing,			#sourceCode : 'method: anObject\r\t"Set the value of method"\r\r\tmethod := anObject',			#stamp : 'RJT 9/2/2006 14:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '514' ],		#self : OmReference [ '515' ],		#time : DateAndTime [ '2018-08-16T16:44:10.25082+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Pragma,				#isMetaSide : false			},			#name : #pragma,			#protocol : #accessing,			#sourceCode : 'pragma\r\t"Answer the value of pragma"\r\r\t^ pragma',			#stamp : 'RJT 9/2/2006 14:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '515' ],		#self : OmReference [ '516' ],		#time : DateAndTime [ '2018-08-16T16:44:10.251965+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Pragma,				#isMetaSide : false			},			#name : #'pragma:',			#protocol : #accessing,			#sourceCode : 'pragma: anObject\r\t"Set the value of pragma"\r\r\tpragma := anObject',			#stamp : 'RJT 9/2/2006 14:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '516' ],		#self : OmReference [ '517' ],		#time : DateAndTime [ '2018-08-16T16:44:10.253121+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Pragma,				#isMetaSide : false			},			#name : #systemClass,			#protocol : #accessing,			#sourceCode : 'systemClass\r\t"Answer the value of systemClass"\r\r\t^ systemClass',			#stamp : 'RJT 9/2/2006 14:18',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '517' ],		#self : OmReference [ '518' ],		#time : DateAndTime [ '2018-08-16T16:44:10.254978+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Pragma,				#isMetaSide : false			},			#name : #'systemClass:',			#protocol : #accessing,			#sourceCode : 'systemClass: anObject\r\t"Set the value of systemClass"\r\r\tsystemClass := anObject',			#stamp : 'RJT 9/2/2006 14:18',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '518' ],		#self : OmReference [ '519' ],		#time : DateAndTime [ '2018-08-16T16:44:10.256225+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1PragmaAccessor class',				#isMetaSide : true			},			#name : #LICENSE,			#protocol : #LICENSE,			#sourceCode : 'LICENSE\r\t"http://www.opensource.org/licenses/mit-license.php"\r^\'Copyright (c) 2006 Ron Teitelbaum * US Medical Record Specialists * Ron@USMedRec.com\r\rPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\rThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\rTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\'\r',			#stamp : 'RJT 9/2/2006 15:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '519' ],		#self : OmReference [ '520' ],		#time : DateAndTime [ '2018-08-16T16:44:10.257236+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1PragmaAccessor class',				#isMetaSide : true			},			#name : #'fromPragma:',			#protocol : #'instance creation',			#sourceCode : 'fromPragma: aPragma\r\t^self new\r\t\tpragma: aPragma;\r\t\tasn1name: aPragma arguments first;\r\t\tmethod: aPragma method methodReference methodSymbol;\r\t\tsystemClass: aPragma method methodReference classSymbol;\r\t\tyourself\r\t\t',			#stamp : 'RJT 9/2/2006 15:23',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '520' ],		#self : OmReference [ '521' ],		#time : DateAndTime [ '2018-08-16T16:44:10.258465+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1PragmaAccessor,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aWS\r\taWS nextPutAll: self asn1name asString, String tab, self systemClass asString, \'>>\', self method asString.',			#stamp : 'RJT 9/2/2006 15:23',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '521' ],		#self : OmReference [ '522' ],		#time : DateAndTime [ '2018-08-16T16:44:10.259466+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1PragmaMutator class',				#isMetaSide : true			},			#name : #LICENSE,			#protocol : #LICENSE,			#sourceCode : 'LICENSE\r\t"http://www.opensource.org/licenses/mit-license.php"\r^\'Copyright (c) 2006 Ron Teitelbaum * US Medical Record Specialists * Ron@USMedRec.com\r\rPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\rThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\rTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\'\r',			#stamp : 'RJT 9/2/2006 15:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '522' ],		#self : OmReference [ '523' ],		#time : DateAndTime [ '2018-08-16T16:44:10.260515+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1PragmaMutator class',				#isMetaSide : true			},			#name : #'fromPragma:',			#protocol : #'instance creation',			#sourceCode : 'fromPragma: aPragma\r\t^self new\r\t\tpragma: aPragma;\r\t\tasn1name: aPragma arguments first;\r\t\tmethod: aPragma method methodReference methodSymbol;\r\t\tsystemClass: aPragma method methodReference classSymbol;\r\t\tclassOfMutatorArgument: aPragma arguments second;\r\t\tyourself',			#stamp : 'RJT 9/2/2006 15:26',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '523' ],		#self : OmReference [ '524' ],		#time : DateAndTime [ '2018-08-16T16:44:10.261731+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1PragmaMutator,				#isMetaSide : false			},			#name : #classOfMutatorArgument,			#protocol : #accessing,			#sourceCode : 'classOfMutatorArgument\r\t"Answer the value of classOfMutatorArgument"\r\r\t^ classOfMutatorArgument',			#stamp : 'RJT 9/2/2006 14:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '524' ],		#self : OmReference [ '525' ],		#time : DateAndTime [ '2018-08-16T16:44:10.262747+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1PragmaMutator,				#isMetaSide : false			},			#name : #'classOfMutatorArgument:',			#protocol : #accessing,			#sourceCode : 'classOfMutatorArgument: anObject\r\t"Set the value of classOfMutatorArgument"\r\r\tclassOfMutatorArgument := anObject',			#stamp : 'RJT 9/2/2006 14:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '525' ],		#self : OmReference [ '526' ],		#time : DateAndTime [ '2018-08-16T16:44:10.264767+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1PragmaMutator,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aWS\r\t| classString article |\r\tclassString := self classOfMutatorArgument asString.\r\tarticle := classString first isVowel ifTrue: [\' an \'] ifFalse: [\' a \'].\r\taWS nextPutAll: self asn1name asString, String tab, self systemClass asString, \'>>\', self method asString, article, classString.',			#stamp : 'RJT 9/2/2006 15:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '526' ],		#self : OmReference [ '527' ],		#time : DateAndTime [ '2018-08-16T16:44:10.265897+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Stream class',				#isMetaSide : true			},			#name : #'decodeBytes:',			#protocol : #decoding,			#sourceCode : 'decodeBytes: bytes\r\r\t^ (self onBytes: bytes) decode',			#stamp : 'rww 3/26/2007 17:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '527' ],		#self : OmReference [ '528' ],		#time : DateAndTime [ '2018-08-16T16:44:10.266734+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Stream class',				#isMetaSide : true			},			#name : #'decodeBytes:withType:',			#protocol : #decoding,			#sourceCode : 'decodeBytes: bytes withType: type\r\r\t^ (self onBytes: bytes) decodeWithType: type',			#stamp : 'rww 3/26/2007 17:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '528' ],		#self : OmReference [ '529' ],		#time : DateAndTime [ '2018-08-16T16:44:10.267714+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Stream class',				#isMetaSide : true			},			#name : #'encode:',			#protocol : #encoding,			#sourceCode : 'encode: object\r\r\t^ self new encode: object',			#stamp : 'rww 3/26/2007 17:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '529' ],		#self : OmReference [ '530' ],		#time : DateAndTime [ '2018-08-16T16:44:10.268737+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Stream class',				#isMetaSide : true			},			#name : #'encode:withType:',			#protocol : #encoding,			#sourceCode : 'encode: object withType: type\r\r\t^ self new encode: object withType: type',			#stamp : 'rww 3/26/2007 17:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '530' ],		#self : OmReference [ '531' ],		#time : DateAndTime [ '2018-08-16T16:44:10.269907+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Stream class',				#isMetaSide : true			},			#name : #initializeTagToTypeDispatchTable,			#protocol : #'class initialization',			#sourceCode : 'initializeTagToTypeDispatchTable\r\r\tTagToTypeDispatchTable := Dictionary new.\r\tTagToTypeDispatchTable\r"\t\tat: 0 put: ASN1EndOfIndefiniteLengthType new;"\r\t\tat: 1 put: ASN1BooleanType new;\r\t\tat: 2 put: ASN1IntegerType new;\r\t\tat: 3 put: ASN1BitStringType new;\r\t\tat: 4 put: ASN1ByteArrayType new;\r\t\tat: 5 put: ASN1NullType new;\r\t\tat: 6 put: ASN1ObjectIdentifierType new;\r\t\tat: 12 put: ASN1StringType new;\r\t\tat: 16 put: ASN1SequenceType new;\r\t\tat: 17 put: ASN1SetType new;\r\t\tat: 19 put: ASN1PrintableStringType new;\r\t\tat: 20 put: ASN1TeletexStringType new;\r\t\tat: 22 put: ASN1IA5StringType new;\r\t\tat: 23 put: ASN1UTCTimeType new;\r\t\tat: 26 put: ASN1VisibleStringType new;\r\t\tat: 27 put: ASN1GeneralStringType new;\r\t\tat: 28 put: ASN1UniversalStringType new;\r\t\tat: 30 put: ASN1BMPStringType new;\r\t\tyourself.\r',			#stamp : 'jrd 10/30/2008 19:45',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '531' ],		#self : OmReference [ '532' ],		#time : DateAndTime [ '2018-08-16T16:44:10.271913+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Stream class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\r\t^ self onStream: (ByteArray new: 100) writeStream.\r',			#stamp : 'rww 3/25/2007 12:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '532' ],		#self : OmReference [ '533' ],		#time : DateAndTime [ '2018-08-16T16:44:10.273197+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Stream class',				#isMetaSide : true			},			#name : #'onBytes:',			#protocol : #'instance creation',			#sourceCode : 'onBytes: bytes\r\r\t^ self onStream: bytes readStream.\r',			#stamp : 'rww 3/22/2007 14:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '533' ],		#self : OmReference [ '534' ],		#time : DateAndTime [ '2018-08-16T16:44:10.274388+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Stream class',				#isMetaSide : true			},			#name : #'onStream:',			#protocol : #'instance creation',			#sourceCode : 'onStream: aStream\r\r\t^ super new\r\t\tstream: aStream;\r\t\tyourself.\r',			#stamp : 'rww 3/25/2007 10:41',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '534' ],		#self : OmReference [ '535' ],		#time : DateAndTime [ '2018-08-16T16:44:10.275558+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1Stream class',				#isMetaSide : true			},			#name : #tagToTypeDispatchTable,			#protocol : #'class initialization',			#sourceCode : 'tagToTypeDispatchTable\r\r\tTagToTypeDispatchTable isNil ifTrue: [self initializeTagToTypeDispatchTable].\r\t^ TagToTypeDispatchTable\r',			#stamp : 'rww 3/22/2007 14:25',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '535' ],		#self : OmReference [ '536' ],		#time : DateAndTime [ '2018-08-16T16:44:10.276753+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #atEnd,			#protocol : #'stream - api',			#sourceCode : 'atEnd\r\r\t^ self stream atEnd',			#stamp : 'rww 3/23/2007 20:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '536' ],		#self : OmReference [ '537' ],		#time : DateAndTime [ '2018-08-16T16:44:10.277695+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #contents,			#protocol : #'stream - api',			#sourceCode : 'contents\r\r\t^ self stream contents',			#stamp : 'rww 3/25/2007 10:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '537' ],		#self : OmReference [ '538' ],		#time : DateAndTime [ '2018-08-16T16:44:10.278758+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #currentTag,			#protocol : #accessing,			#sourceCode : 'currentTag\r\t"Answer the value of currentTag"\r\r\t^ currentTag',			#stamp : 'rww 3/22/2007 15:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '538' ],		#self : OmReference [ '539' ],		#time : DateAndTime [ '2018-08-16T16:44:10.280632+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #'currentTag:',			#protocol : #accessing,			#sourceCode : 'currentTag: anObject\r\t"Set the value of currentTag"\r\r\tcurrentTag := anObject',			#stamp : 'rww 3/22/2007 15:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '539' ],		#self : OmReference [ '540' ],		#time : DateAndTime [ '2018-08-16T16:44:10.281889+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #decode,			#protocol : #decoding,			#sourceCode : 'decode\r\r\t| tag numericTag type tagClass isConstructed |\r\ttag := self peekTag.\r\tnumericTag := tag bitAnd: 2r00011111.\r\ttagClass := tag bitAnd: 2r11000000.\r\tisConstructed := (tag bitAnd: 2r00100000) > 0.\r\ttagClass > 0\r\t\tifTrue: [isConstructed\r\t\t\tifTrue: [type := ASN1WrapperConstructedType new]\r\t\t\tifFalse: [type := ASN1WrapperPrimitiveType new]]\r\t\tifFalse: [type := self class tagToTypeDispatchTable at: numericTag].\r\t^ self decodeWithType: type.\r',			#stamp : 'rww 3/24/2007 10:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '540' ],		#self : OmReference [ '541' ],		#time : DateAndTime [ '2018-08-16T16:44:10.283013+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #'decodeWithType:',			#protocol : #decoding,			#sourceCode : 'decodeWithType: type\r\r\t^ type decodeWithDERStream: self.\r',			#stamp : 'rww 3/25/2007 23:53',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '541' ],		#self : OmReference [ '542' ],		#time : DateAndTime [ '2018-08-16T16:44:10.284168+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #'encode:',			#protocol : #encoding,			#sourceCode : 'encode: anObject\r\r\t| type tag numericTag tagClass isConstructed |\r\ttag := anObject asn1Tag.\r\tnumericTag := tag bitAnd: 2r00011111.\r\ttagClass := tag bitAnd: 2r11000000.\r\tisConstructed := (tag bitAnd: 2r00100000) > 0.\r\ttagClass > 0\r\t\tifTrue: [isConstructed\r\t\t\tifTrue: [type := ASN1WrapperConstructedType new]\r\t\t\tifFalse: [type := ASN1WrapperPrimitiveType new]]\r\t\tifFalse: [type := self class tagToTypeDispatchTable at: numericTag].\r\t^ self encode: anObject withType: type.\r',			#stamp : 'rww 3/25/2007 20:15',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '542' ],		#self : OmReference [ '543' ],		#time : DateAndTime [ '2018-08-16T16:44:10.285253+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #'encode:withType:',			#protocol : #encoding,			#sourceCode : 'encode: anObject withType: type\r\r\ttype encode: anObject withDERStream: self.\r\t^ self contents\r',			#stamp : 'rww 3/25/2007 12:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '543' ],		#self : OmReference [ '544' ],		#time : DateAndTime [ '2018-08-16T16:44:10.286352+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #newStream,			#protocol : #'stream - api',			#sourceCode : 'newStream\r\r\t^ self class new',			#stamp : 'rww 3/25/2007 10:42',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '544' ],		#self : OmReference [ '545' ],		#time : DateAndTime [ '2018-08-16T16:44:10.287415+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #next,			#protocol : #'stream - api',			#sourceCode : 'next\r\r\t^ self stream next',			#stamp : 'rww 3/22/2007 15:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '545' ],		#self : OmReference [ '546' ],		#time : DateAndTime [ '2018-08-16T16:44:10.289336+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #'next:',			#protocol : #'stream - api',			#sourceCode : 'next: num\r\r\t^ self stream next: num',			#stamp : 'rww 3/22/2007 15:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '546' ],		#self : OmReference [ '547' ],		#time : DateAndTime [ '2018-08-16T16:44:10.29047+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #nextLength,			#protocol : #'stream - api',			#sourceCode : 'nextLength\r\r\t| tag val |\r\ttag := self stream next.\r\ttag = 2r10000000 \r\t\tifTrue: [^ -1].\r\t((tag bitAnd: 2r10000000) > 0)\r\t\tifTrue: [\r\t\t\tval := 0.\r\t\t\t(tag bitClear: 2r10000000) timesRepeat: [\r\t\t\t\tval := (val bitShift: 8) + self stream next].\r\t\t\t^ val]\r\t\tifFalse: [^ tag].\r',			#stamp : 'rww 4/14/2007 07:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '547' ],		#self : OmReference [ '548' ],		#time : DateAndTime [ '2018-08-16T16:44:10.291593+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #'nextPut:',			#protocol : #'stream - api',			#sourceCode : 'nextPut: byte\r\r\t^ self stream nextPut: byte',			#stamp : 'rww 3/25/2007 11:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '548' ],		#self : OmReference [ '549' ],		#time : DateAndTime [ '2018-08-16T16:44:10.292781+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #'nextPutAll:',			#protocol : #'stream - api',			#sourceCode : 'nextPutAll: bytes\r\r\t^ self stream nextPutAll: bytes',			#stamp : 'rww 3/25/2007 11:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '549' ],		#self : OmReference [ '550' ],		#time : DateAndTime [ '2018-08-16T16:44:10.293927+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #'nextPutLength:',			#protocol : #'stream - api',			#sourceCode : 'nextPutLength: size\r\r\tsize <= 127 \r\t\tifTrue: [self nextPut: size]\r\t\tifFalse: [\r\t\t\tself nextPut: ((size digitLength) bitOr: 16r80).\r\t\t\tsize digitLength to: 1 by: -1 do: [:digitIndex |\r\t\t\t\tself nextPut: (size digitAt: digitIndex)]]\r',			#stamp : 'rww 3/25/2007 11:18',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '550' ],		#self : OmReference [ '551' ],		#time : DateAndTime [ '2018-08-16T16:44:10.294986+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #'nextPutTag:',			#protocol : #'stream - api',			#sourceCode : 'nextPutTag: tag\r\t"It\'s not clear how to encode a tag whose numerical value is greater than 30"\r\r\tself nextPut: tag.\r',			#stamp : 'rww 3/25/2007 11:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '551' ],		#self : OmReference [ '552' ],		#time : DateAndTime [ '2018-08-16T16:44:10.296081+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #nextTag,			#protocol : #'stream - api',			#sourceCode : 'nextTag\r\r\t| tag octet |\r\ttag := self stream next.\r\t((tag bitAnd: 2r00011111) == 2r00011111)\r\t\tifTrue: [\r\t\t\ttag := 0.\r\t\t\t[\r\t\t\t\toctet := self stream next.\r\t\t\t\ttag := (tag bitShift: 7) bitOr: (octet bitClear: 2r10000000).\r\t\t\t\t(octet bitAnd: 2r10000000) > 0] \r\t\t\t\t\twhileTrue].\r\tself currentTag: tag.\r\t^ tag',			#stamp : 'rww 3/22/2007 15:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '552' ],		#self : OmReference [ '553' ],		#time : DateAndTime [ '2018-08-16T16:44:10.298072+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #peekTag,			#protocol : #'stream - api',			#sourceCode : 'peekTag\r\r\t| start |\r\tstart := self position.\r\t^[self nextTag] ensure: [self position: start]',			#stamp : 'rww 3/23/2007 21:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '553' ],		#self : OmReference [ '554' ],		#time : DateAndTime [ '2018-08-16T16:44:10.299236+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #position,			#protocol : #'stream - api',			#sourceCode : 'position\r\r\t^ self stream position',			#stamp : 'rww 3/22/2007 15:41',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '554' ],		#self : OmReference [ '555' ],		#time : DateAndTime [ '2018-08-16T16:44:10.300314+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #'position:',			#protocol : #'stream - api',			#sourceCode : 'position: pos\r\r\t^ self stream position: pos',			#stamp : 'rww 3/23/2007 21:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '555' ],		#self : OmReference [ '556' ],		#time : DateAndTime [ '2018-08-16T16:44:10.301387+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #size,			#protocol : #'stream - api',			#sourceCode : 'size\r\r\t^ self stream size',			#stamp : 'rww 3/25/2007 13:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '556' ],		#self : OmReference [ '557' ],		#time : DateAndTime [ '2018-08-16T16:44:10.302418+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #stream,			#protocol : #accessing,			#sourceCode : 'stream\r\t"Answer the value of stream"\r\r\t^ stream',			#stamp : 'rww 3/22/2007 14:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '557' ],		#self : OmReference [ '558' ],		#time : DateAndTime [ '2018-08-16T16:44:10.303467+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Stream,				#isMetaSide : false			},			#name : #'stream:',			#protocol : #accessing,			#sourceCode : 'stream: anObject\r\t"Set the value of stream"\r\r\tstream := anObject',			#stamp : 'rww 3/22/2007 14:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '558' ],		#self : OmReference [ '559' ],		#time : DateAndTime [ '2018-08-16T16:44:10.304534+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1TestModel,				#isMetaSide : false			},			#name : #testSlot1,			#protocol : #accessing,			#sourceCode : 'testSlot1\r\t"Answer the value of testSlot1"\r\r\t^ testSlot1',			#stamp : 'rww 3/25/2007 13:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '559' ],		#self : OmReference [ '560' ],		#time : DateAndTime [ '2018-08-16T16:44:10.30631+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1TestModel,				#isMetaSide : false			},			#name : #'testSlot1:',			#protocol : #accessing,			#sourceCode : 'testSlot1: anObject\r\t"Set the value of testSlot1"\r\r\ttestSlot1 := anObject',			#stamp : 'rww 3/25/2007 13:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '560' ],		#self : OmReference [ '561' ],		#time : DateAndTime [ '2018-08-16T16:44:10.307398+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1TestModel,				#isMetaSide : false			},			#name : #testSlot2,			#protocol : #accessing,			#sourceCode : 'testSlot2\r\t"Answer the value of testSlot2"\r\r\t^ testSlot2',			#stamp : 'rww 3/27/2007 16:37',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '561' ],		#self : OmReference [ '562' ],		#time : DateAndTime [ '2018-08-16T16:44:10.308483+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1TestModel,				#isMetaSide : false			},			#name : #'testSlot2:',			#protocol : #accessing,			#sourceCode : 'testSlot2: anObject\r\t"Set the value of testSlot2"\r\r\ttestSlot2 := anObject',			#stamp : 'rww 3/27/2007 16:37',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '562' ],		#self : OmReference [ '563' ],		#time : DateAndTime [ '2018-08-16T16:44:10.309584+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1AbstractString class',				#isMetaSide : true			},			#name : #'fromString:',			#protocol : #'as yet unclassified',			#sourceCode : 'fromString: aString\r\r\t^ self new\r\t\tstring: aString;\r\t\tyourself',			#stamp : 'rww 3/20/2007 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '563' ],		#self : OmReference [ '564' ],		#time : DateAndTime [ '2018-08-16T16:44:10.310552+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AbstractString,				#isMetaSide : false			},			#name : #',',			#protocol : #printing,			#sourceCode : ', aString\r\r\t^ self class new\r\t\tstring: self string, aString string;\r\t\tyourself\r',			#stamp : 'rww 3/27/2007 11:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '564' ],		#self : OmReference [ '565' ],		#time : DateAndTime [ '2018-08-16T16:44:10.311422+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AbstractString,				#isMetaSide : false			},			#name : #'=',			#protocol : #printing,			#sourceCode : '= aString\r\r\t^ self asString = aString asString\r',			#stamp : 'rww 3/20/2007 13:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '565' ],		#self : OmReference [ '566' ],		#time : DateAndTime [ '2018-08-16T16:44:10.312476+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AbstractString,				#isMetaSide : false			},			#name : #asString,			#protocol : #printing,			#sourceCode : 'asString\r\r\t^ self string',			#stamp : 'rww 3/20/2007 13:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '566' ],		#self : OmReference [ '567' ],		#time : DateAndTime [ '2018-08-16T16:44:10.314575+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AbstractString,				#isMetaSide : false			},			#name : #hash,			#protocol : #printing,			#sourceCode : 'hash\r\r\t^ self asString hash',			#stamp : 'rww 3/26/2007 11:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '567' ],		#self : OmReference [ '568' ],		#time : DateAndTime [ '2018-08-16T16:44:10.315769+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AbstractString,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\r\tself string: \'\'.\r',			#stamp : 'rww 3/27/2007 11:20',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '568' ],		#self : OmReference [ '569' ],		#time : DateAndTime [ '2018-08-16T16:44:10.316874+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AbstractString,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\r\tself string printOn: aStream.\r ',			#stamp : 'rww 3/20/2007 13:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '569' ],		#self : OmReference [ '570' ],		#time : DateAndTime [ '2018-08-16T16:44:10.317968+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AbstractString,				#isMetaSide : false			},			#name : #string,			#protocol : #accessing,			#sourceCode : 'string\r\t"Answer the value of string"\r\r\t^ string',			#stamp : 'rww 3/20/2007 13:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '570' ],		#self : OmReference [ '571' ],		#time : DateAndTime [ '2018-08-16T16:44:10.319034+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1AbstractString,				#isMetaSide : false			},			#name : #'string:',			#protocol : #accessing,			#sourceCode : 'string: anObject\r\t"Set the value of string"\r\r\tstring := anObject',			#stamp : 'rww 3/20/2007 13:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '571' ],		#self : OmReference [ '572' ],		#time : DateAndTime [ '2018-08-16T16:44:10.320146+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BMPString,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #accessing,			#sourceCode : 'asn1Tag\r\r\t^ 30',			#stamp : 'rww 3/25/2007 10:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '572' ],		#self : OmReference [ '573' ],		#time : DateAndTime [ '2018-08-16T16:44:10.321094+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1GeneralString,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'private - parsing',			#sourceCode : 'asn1Tag\r\r\t^ 27',			#stamp : 'jrd 10/30/2008 19:39',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '573' ],		#self : OmReference [ '574' ],		#time : DateAndTime [ '2018-08-16T16:44:10.322983+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1IA5String,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #accessing,			#sourceCode : 'asn1Tag\r\r\t^ 22\r',			#stamp : 'rww 3/25/2007 10:46',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '574' ],		#self : OmReference [ '575' ],		#time : DateAndTime [ '2018-08-16T16:44:10.323954+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1PrintableString,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'private - parsing',			#sourceCode : 'asn1Tag\r\r\t^ 19',			#stamp : 'rww 3/25/2007 10:48',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '575' ],		#self : OmReference [ '576' ],		#time : DateAndTime [ '2018-08-16T16:44:10.324958+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1TeletexString,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'private - parsing',			#sourceCode : 'asn1Tag\r\r\t^ 20\r',			#stamp : 'rww 3/25/2007 10:46',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '576' ],		#self : OmReference [ '577' ],		#time : DateAndTime [ '2018-08-16T16:44:10.325889+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1UniversalString,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'private - parsing',			#sourceCode : 'asn1Tag\r\r\t^ 28',			#stamp : 'rww 3/25/2007 10:48',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '577' ],		#self : OmReference [ '578' ],		#time : DateAndTime [ '2018-08-16T16:44:10.326874+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1VisibleString,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'private - parsing',			#sourceCode : 'asn1Tag\r\r\t^ 26',			#stamp : 'jrd 10/30/2008 19:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '578' ],		#self : OmReference [ '579' ],		#time : DateAndTime [ '2018-08-16T16:44:10.327811+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1BitString class',				#isMetaSide : true			},			#name : #'fromByteArray:',			#protocol : #asn,			#sourceCode : 'fromByteArray: bytes\r\r\t^ self new\r\t\tbytes: bytes;\r\t\tyourself.\r',			#stamp : 'rww 3/26/2007 10:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '579' ],		#self : OmReference [ '580' ],		#time : DateAndTime [ '2018-08-16T16:44:10.328774+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitString,				#isMetaSide : false			},			#name : #',',			#protocol : #initialize-release,			#sourceCode : ', bitString\r\r\t^ self class new\r\t\tbytes: self bytes, bitString bytes;\r\t\tbitsPadding: bitString bitsPadding;\r\t\tyourself.\r',			#stamp : 'rww 3/27/2007 11:11',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '580' ],		#self : OmReference [ '581' ],		#time : DateAndTime [ '2018-08-16T16:44:10.329711+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitString,				#isMetaSide : false			},			#name : #'=',			#protocol : #'private - parsing',			#sourceCode : '= anotherBitString\r\r\t^ self bytes = anotherBitString bytes',			#stamp : 'rww 1/2/2003 01:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '581' ],		#self : OmReference [ '582' ],		#time : DateAndTime [ '2018-08-16T16:44:10.331672+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitString,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'private - parsing',			#sourceCode : 'asn1Tag\r\r\t^ 3\r',			#stamp : 'rww 3/25/2007 10:46',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '582' ],		#self : OmReference [ '583' ],		#time : DateAndTime [ '2018-08-16T16:44:10.332909+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitString,				#isMetaSide : false			},			#name : #bitsPadding,			#protocol : #accessing,			#sourceCode : 'bitsPadding\r\t"Answer the value of bitsPadding"\r\r\t^ bitsPadding',			#stamp : 'rww 1/29/2007 17:25',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '583' ],		#self : OmReference [ '584' ],		#time : DateAndTime [ '2018-08-16T16:44:10.334167+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitString,				#isMetaSide : false			},			#name : #'bitsPadding:',			#protocol : #accessing,			#sourceCode : 'bitsPadding: anObject\r\t"Set the value of bitsPadding"\r\r\tbitsPadding := anObject',			#stamp : 'rww 1/29/2007 17:25',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '584' ],		#self : OmReference [ '585' ],		#time : DateAndTime [ '2018-08-16T16:44:10.335352+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitString,				#isMetaSide : false			},			#name : #bytes,			#protocol : #accessing,			#sourceCode : 'bytes\r\t"Answer the receiver\'s instance variable bytes."\r\r\t^bytes',			#stamp : 'rww 1/2/2003 01:12',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '585' ],		#self : OmReference [ '586' ],		#time : DateAndTime [ '2018-08-16T16:44:10.336354+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitString,				#isMetaSide : false			},			#name : #'bytes:',			#protocol : #accessing,			#sourceCode : 'bytes: anObject\r\t"Set the receiver\'s instance variable bytes to anObject."\r\r\tbytes := anObject',			#stamp : 'rww 1/2/2003 01:12',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '586' ],		#self : OmReference [ '587' ],		#time : DateAndTime [ '2018-08-16T16:44:10.337349+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitString,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\r\tself bitsPadding: 0.\r\tself bytes: (ByteArray new).\r',			#stamp : 'rww 3/27/2007 11:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '587' ],		#self : OmReference [ '588' ],		#time : DateAndTime [ '2018-08-16T16:44:10.339167+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1BitString,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #'private - parsing',			#sourceCode : 'printOn: aStream\r\r\t1 to: bytes size - 1 do: [:idx |\r\t\taStream nextPutAll: ((self bytes at: idx) printStringBase: 2)].\r\taStream nextPutAll: ((160 printStringBase: 2) copyFrom: 1 to: (8 - self bitsPadding))',			#stamp : 'rww 1/29/2007 17:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '588' ],		#self : OmReference [ '589' ],		#time : DateAndTime [ '2018-08-16T16:44:10.340467+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1ExplicitContextValue class',				#isMetaSide : true			},			#name : #LICENSE,			#protocol : #LICENSE,			#sourceCode : 'LICENSE\r\t"http://www.opensource.org/licenses/mit-license.php"\r^\'Copyright (c) 2006 Ron Teitelbaum * US Medical Record Specialists * Ron@USMedRec.com\r\rPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\rThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\rTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\'\r',			#stamp : 'RJT 9/8/2006 15:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '589' ],		#self : OmReference [ '590' ],		#time : DateAndTime [ '2018-08-16T16:44:10.341446+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitContextValue,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #parsing,			#sourceCode : 'asn1Tag\r\r\t^ self tagIsPrimitive\r\t\tifTrue: [128 bitOr: self tagIndex]\r\t\tifFalse: [160 bitOr: self tagIndex].\r',			#stamp : 'rww 3/25/2007 10:45',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '590' ],		#self : OmReference [ '591' ],		#time : DateAndTime [ '2018-08-16T16:44:10.342288+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitContextValue,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\r\taStream nextPutAll: \'[\', self tagIndex asString, \']\', (self tagValue printString).\r',			#stamp : 'RJT 9/8/2006 15:53',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '591' ],		#self : OmReference [ '592' ],		#time : DateAndTime [ '2018-08-16T16:44:10.343304+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitContextValue,				#isMetaSide : false			},			#name : #tagIndex,			#protocol : #accessing,			#sourceCode : 'tagIndex\r\t"Answer the value of tagIndex"\r\r\t^ tagIndex',			#stamp : 'RJT 9/8/2006 15:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '592' ],		#self : OmReference [ '593' ],		#time : DateAndTime [ '2018-08-16T16:44:10.344374+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitContextValue,				#isMetaSide : false			},			#name : #'tagIndex:',			#protocol : #accessing,			#sourceCode : 'tagIndex: anObject\r\t"Set the value of tagIndex"\r\r\ttagIndex := anObject',			#stamp : 'RJT 9/8/2006 15:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '593' ],		#self : OmReference [ '594' ],		#time : DateAndTime [ '2018-08-16T16:44:10.345349+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitContextValue,				#isMetaSide : false			},			#name : #tagIsPrimitive,			#protocol : #accessing,			#sourceCode : 'tagIsPrimitive\r\t"Answer the value of tagIsPrimitive"\r\r\t^ tagIsPrimitive',			#stamp : 'rww 1/28/2007 14:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '594' ],		#self : OmReference [ '595' ],		#time : DateAndTime [ '2018-08-16T16:44:10.346346+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitContextValue,				#isMetaSide : false			},			#name : #'tagIsPrimitive:',			#protocol : #accessing,			#sourceCode : 'tagIsPrimitive: anObject\r\t"Set the value of tagIsPrimitive"\r\r\ttagIsPrimitive := anObject',			#stamp : 'rww 1/28/2007 14:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '595' ],		#self : OmReference [ '596' ],		#time : DateAndTime [ '2018-08-16T16:44:10.348322+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitContextValue,				#isMetaSide : false			},			#name : #tagValue,			#protocol : #accessing,			#sourceCode : 'tagValue\r\t"Answer the value of tagValue"\r\r\t^ tagValue',			#stamp : 'RJT 9/8/2006 15:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '596' ],		#self : OmReference [ '597' ],		#time : DateAndTime [ '2018-08-16T16:44:10.349456+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ExplicitContextValue,				#isMetaSide : false			},			#name : #'tagValue:',			#protocol : #accessing,			#sourceCode : 'tagValue: anObject\r\t"Set the value of tagValue"\r\r\ttagValue := anObject',			#stamp : 'RJT 9/8/2006 15:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '597' ],		#self : OmReference [ '598' ],		#time : DateAndTime [ '2018-08-16T16:44:10.35068+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1FieldDefinition class',				#isMetaSide : true			},			#name : #'forField:onDefinition:',			#protocol : #'instance creation',			#sourceCode : 'forField: aFieldName onDefinition: aDefinitionString \r\t"Return to the sender an object created from aDefintionString with the\r\tfield name aFieldName"\r\t| fieldInfo definitionContents noCommentsString |\r\t\r\tdefinitionContents := aDefinitionString copyFrom: (aDefinitionString indexOf: ${)\r\t\t\t+ 1 to: (aDefinitionString indexOf: $})\r\t\t\t- 1.\r\tnoCommentsString := String new.\r\tdefinitionContents linesDo: [:aLine |\r\t\t((aLine indexOfSubCollection: \'--\') > 0\tor: [aLine withBlanksTrimmed isEmpty])\r\t\tifFalse: [noCommentsString := noCommentsString, aLine].\r\t].\r\tfieldInfo := (noCommentsString explode: $,)\r\t\tdetect: [:aField | aField subStrings first = aFieldName] ifNone: [^nil].\r\t^ self new parseFieldInfo: fieldInfo;\r\t\t yourself',			#stamp : 'RJT 9/8/2006 15:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '598' ],		#self : OmReference [ '599' ],		#time : DateAndTime [ '2018-08-16T16:44:10.351678+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1FieldDefinition class',				#isMetaSide : true			},			#name : #testCreate,			#protocol : #testing,			#sourceCode : 'testCreate\r\t^#(\'version\' \'serialNumber\' \'signature\' \'issuer\' \'validity\' \'subject\' \'subjectPublicKeyInfo\' \'issuerUniqueID\' \'subjectUniqueID\' \'extensions\') collect: [:aField | \r\tself forField: aField onDefinition: \'TBSCertificate  ::=  SEQUENCE  {\r        version         [0]  EXPLICIT Version DEFAULT v1,\r        serialNumber         CertificateSerialNumber,\r        signature            AlgorithmIdentifier,\r        issuer               Name,\r        validity             Validity,\r        subject              Name,\r        subjectPublicKeyInfo SubjectPublicKeyInfo,\r        issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\r                             -- If present, version shall be v2 or v3\r        subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\r                             -- If present, version shall be v2 or v3\r        extensions      [3]  EXPLICIT Extensions OPTIONAL\r                             -- If present, version shall be v3\r        }\'].',			#stamp : 'RJT 9/8/2006 15:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '599' ],		#self : OmReference [ '600' ],		#time : DateAndTime [ '2018-08-16T16:44:10.35279+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #defaultValue,			#protocol : #accessing,			#sourceCode : 'defaultValue\r\t"Answer the value of defaultValue"\r\r\t^ defaultValue',			#stamp : 'RJT 9/8/2006 12:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '600' ],		#self : OmReference [ '601' ],		#time : DateAndTime [ '2018-08-16T16:44:10.353837+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #'defaultValue:',			#protocol : #accessing,			#sourceCode : 'defaultValue: anObject\r\t"Set the value of defaultValue"\r\r\tdefaultValue := anObject',			#stamp : 'RJT 9/8/2006 12:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '601' ],		#self : OmReference [ '602' ],		#time : DateAndTime [ '2018-08-16T16:44:10.354894+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #explicitFieldDefinition,			#protocol : #accessing,			#sourceCode : 'explicitFieldDefinition\r\t"Answer the value of explicitFieldDefinition"\r\r\t^ explicitFieldDefinition',			#stamp : 'RJT 9/8/2006 12:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '602' ],		#self : OmReference [ '603' ],		#time : DateAndTime [ '2018-08-16T16:44:10.356925+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #'explicitFieldDefinition:',			#protocol : #accessing,			#sourceCode : 'explicitFieldDefinition: anObject\r\t"Set the value of explicitFieldDefinition"\r\r\texplicitFieldDefinition := anObject',			#stamp : 'RJT 9/8/2006 12:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '603' ],		#self : OmReference [ '604' ],		#time : DateAndTime [ '2018-08-16T16:44:10.358051+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #fieldName,			#protocol : #accessing,			#sourceCode : 'fieldName\r\t"Answer the value of fieldName"\r\r\t^ fieldName',			#stamp : 'RJT 9/8/2006 12:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '604' ],		#self : OmReference [ '605' ],		#time : DateAndTime [ '2018-08-16T16:44:10.359129+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #'fieldName:',			#protocol : #accessing,			#sourceCode : 'fieldName: anObject\r\t"Set the value of fieldName"\r\r\tfieldName := anObject',			#stamp : 'RJT 9/8/2006 12:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '605' ],		#self : OmReference [ '606' ],		#time : DateAndTime [ '2018-08-16T16:44:10.360213+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #implicitFieldDefinition,			#protocol : #accessing,			#sourceCode : 'implicitFieldDefinition\r\t"Answer the value of implicitFieldDefinition"\r\r\t^ implicitFieldDefinition',			#stamp : 'RJT 9/8/2006 12:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '606' ],		#self : OmReference [ '607' ],		#time : DateAndTime [ '2018-08-16T16:44:10.361259+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #'implicitFieldDefinition:',			#protocol : #accessing,			#sourceCode : 'implicitFieldDefinition: anObject\r\t"Set the value of implicitFieldDefinition"\r\r\timplicitFieldDefinition := anObject',			#stamp : 'RJT 9/8/2006 12:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '607' ],		#self : OmReference [ '608' ],		#time : DateAndTime [ '2018-08-16T16:44:10.362292+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #isExplicit,			#protocol : #accessing,			#sourceCode : 'isExplicit\r\t"Answer the value of isExplicit"\r\r\t^ isExplicit',			#stamp : 'RJT 9/8/2006 14:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '608' ],		#self : OmReference [ '609' ],		#time : DateAndTime [ '2018-08-16T16:44:10.364204+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #'isExplicit:',			#protocol : #accessing,			#sourceCode : 'isExplicit: anObject\r\t"Set the value of isExplicit"\r\r\tisExplicit := anObject',			#stamp : 'RJT 9/8/2006 14:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '609' ],		#self : OmReference [ '610' ],		#time : DateAndTime [ '2018-08-16T16:44:10.36536+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #isOptional,			#protocol : #accessing,			#sourceCode : 'isOptional\r\t"Answer the value of isOptional"\r\r\t^ isOptional',			#stamp : 'RJT 9/8/2006 14:44',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '610' ],		#self : OmReference [ '611' ],		#time : DateAndTime [ '2018-08-16T16:44:10.366463+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #'isOptional:',			#protocol : #accessing,			#sourceCode : 'isOptional: anObject\r\t"Set the value of isOptional"\r\r\tisOptional := anObject',			#stamp : 'RJT 9/8/2006 14:44',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '611' ],		#self : OmReference [ '612' ],		#time : DateAndTime [ '2018-08-16T16:44:10.367635+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #'parseFieldInfo:',			#protocol : #parsing,			#sourceCode : 'parseFieldInfo: fieldInfo\r\t"fill the current instance with fieldInformation"\r\t| subStrings explodedString noTagIndexString |\r\tsubStrings := fieldInfo subStrings.\r\tself fieldName: subStrings first.\r\tnoTagIndexString :=  (fieldInfo includes: $[) ifTrue: [\r\t\tself tagIndex: (fieldInfo copyFrom: (fieldInfo indexOf: $[) + 1 to: (fieldInfo indexOf: $]) - 1).\r\t\t(fieldInfo copyFrom:  1 to: (fieldInfo indexOf: $[) -1), (fieldInfo copyFrom: (fieldInfo indexOf: $]) +1 to: fieldInfo size).\r\t] ifFalse: [\r\t\tfieldInfo\r\t].\r\texplodedString := noTagIndexString subStrings asOrderedCollection.\r\t(explodedString includes: \'EXPLICIT\') ifTrue: [\r\t\texplodedString := explodedString remove: \'EXPLICIT\'; yourself.\r\t\tself isExplicit: true.\r\t].\r\t(explodedString includes: \'OPTIONAL\') ifTrue: [\r\t\texplodedString := explodedString remove: \'OPTIONAL\'; yourself.\r\t\tself isOptional: true.\r\t].\r\t(explodedString includes: \'DEFAULT\') ifTrue: [\r\t\texplodedString := explodedString remove: \'DEFAULT\'; yourself.\r\t\tself defaultValue: explodedString last.\r\t\texplodedString remove: explodedString last.\r\t].\r\tself tagType: explodedString last.',			#stamp : 'RJT 9/8/2006 15:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '612' ],		#self : OmReference [ '613' ],		#time : DateAndTime [ '2018-08-16T16:44:10.368692+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #tagIndex,			#protocol : #accessing,			#sourceCode : 'tagIndex\r\t"Answer the value of tagIndex"\r\r\t^ tagIndex',			#stamp : 'RJT 9/8/2006 12:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '613' ],		#self : OmReference [ '614' ],		#time : DateAndTime [ '2018-08-16T16:44:10.369738+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #'tagIndex:',			#protocol : #accessing,			#sourceCode : 'tagIndex: anObject\r\t"Set the value of tagIndex"\r\r\ttagIndex := anObject',			#stamp : 'RJT 9/8/2006 12:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '614' ],		#self : OmReference [ '615' ],		#time : DateAndTime [ '2018-08-16T16:44:10.370779+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #tagType,			#protocol : #accessing,			#sourceCode : 'tagType\r\t"Answer the value of tagType"\r\r\t^ tagType',			#stamp : 'RJT 9/8/2006 12:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '615' ],		#self : OmReference [ '616' ],		#time : DateAndTime [ '2018-08-16T16:44:10.372719+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1FieldDefinition,				#isMetaSide : false			},			#name : #'tagType:',			#protocol : #accessing,			#sourceCode : 'tagType: anObject\r\t"Set the value of tagType"\r\r\ttagType := anObject',			#stamp : 'RJT 9/8/2006 12:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '616' ],		#self : OmReference [ '617' ],		#time : DateAndTime [ '2018-08-16T16:44:10.373995+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Null,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'as yet unclassified',			#sourceCode : 'asn1Tag\r\r\t^ 5\r',			#stamp : 'rww 3/26/2007 09:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '617' ],		#self : OmReference [ '618' ],		#time : DateAndTime [ '2018-08-16T16:44:10.374986+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Null,				#isMetaSide : false			},			#name : #isNil,			#protocol : #'as yet unclassified',			#sourceCode : 'isNil\r\r\t^ true',			#stamp : 'rww 3/26/2007 09:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '618' ],		#self : OmReference [ '619' ],		#time : DateAndTime [ '2018-08-16T16:44:10.375959+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ASN1ObjectId class',				#isMetaSide : true			},			#name : #'fromString:',			#protocol : #asn,			#sourceCode : 'fromString: oidString\r\r\t^ self new\r\t\toid: oidString;\r\t\tinitializeDescription;\r\t\tyourself',			#stamp : 'rww 1/1/2003 13:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '619' ],		#self : OmReference [ '620' ],		#time : DateAndTime [ '2018-08-16T16:44:10.376946+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectId,				#isMetaSide : false			},			#name : #'=',			#protocol : #'private - parsing',			#sourceCode : '= anotherOid\r\t^anotherOid class = self class and: [self oid = anotherOid oid]',			#stamp : 'cds 7/5/2010 16:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '620' ],		#self : OmReference [ '621' ],		#time : DateAndTime [ '2018-08-16T16:44:10.377954+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectId,				#isMetaSide : false			},			#name : #asByteArray,			#protocol : #'private - parsing',			#sourceCode : 'asByteArray\r\r\t| dataStream oidTokens b n lengthStream bytes |\r\tdataStream := WriteStream on: (ByteArray new: 16).\r\toidTokens := self oid tokensBasedOn: $..\r\tdataStream nextPut: (((oidTokens at: 1) asInteger * 40) + (oidTokens at: 2) asInteger).\r\t3 to: oidTokens size do: [:i | \r\t\tb := (oidTokens at: i) asInteger.\r\t\t(b <= 16r7F)\r\t\t\tifTrue: [dataStream nextPut: b]\r\t\t\tifFalse: [\r\t\t\t\tn := b.\r\t\t\t\tlengthStream := WriteStream on: (ByteArray new: 4).\r\t\t\t\tlengthStream nextPut: (n \\\\ 128).\r\t\t\t\t[n := n bitShift: -7.\r\t\t\t\t(n bitShift: -7) = 0] \r\t\t\t\t\twhileFalse: [lengthStream nextPut: ((n \\\\ 128) bitOr: 16r80)].\r\t\t\t\tlengthStream nextPut: ((n \\\\ 128) bitOr: 16r80).\r\t\t\t\tbytes := lengthStream contents reversed.\r\t\t\t\tdataStream \r\t\t\t\t\tnextPutAll: bytes ]].\r\t^ dataStream contents.\r',			#stamp : 'rww 3/25/2007 11:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '621' ],		#self : OmReference [ '622' ],		#time : DateAndTime [ '2018-08-16T16:44:10.378995+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectId,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'private - parsing',			#sourceCode : 'asn1Tag\r\r\t^ 6\r',			#stamp : 'rww 3/25/2007 10:46',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '622' ],		#self : OmReference [ '623' ],		#time : DateAndTime [ '2018-08-16T16:44:10.381319+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectId,				#isMetaSide : false			},			#name : #description,			#protocol : #accessing,			#sourceCode : 'description\r\t"Answer the receiver\'s instance variable description."\r\r\t^description',			#stamp : 'rww 12/8/2002 10:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '623' ],		#self : OmReference [ '624' ],		#time : DateAndTime [ '2018-08-16T16:44:10.382519+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectId,				#isMetaSide : false			},			#name : #'description:',			#protocol : #accessing,			#sourceCode : 'description: anObject\r\t"Set the receiver\'s instance variable description to anObject."\r\r\tdescription := anObject',			#stamp : 'rww 12/8/2002 10:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '624' ],		#self : OmReference [ '625' ],		#time : DateAndTime [ '2018-08-16T16:44:10.383641+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectId,				#isMetaSide : false			},			#name : #hash,			#protocol : #'private - parsing',			#sourceCode : 'hash\r\r\t^ self oid hash',			#stamp : 'rww 3/26/2007 11:20',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '625' ],		#self : OmReference [ '626' ],		#time : DateAndTime [ '2018-08-16T16:44:10.384718+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectId,				#isMetaSide : false			},			#name : #initializeDescription,			#protocol : #'private - parsing',			#sourceCode : 'initializeDescription\r\r\r"\toid := \'x\', self getOID.\r\tix := 1.\r\t[ix < oid size]\r\t\twhileTrue: [\r\t\t\t((oid at: ix) = $.)\r\t\t\t\tifTrue: [oid at: ix put: $x].\r\t\t\tix := ix + 1.\r\t\t].\r\t(ASN1ObjectIdentifiers includesKey: oid asSymbol)\r\t\tifTrue: [^ASN1ObjectIdentifiers at: oid asSymbol]\r\t\tifFalse: [^self getOID]"',			#stamp : 'rww 1/1/2003 15:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '626' ],		#self : OmReference [ '627' ],		#time : DateAndTime [ '2018-08-16T16:44:10.385765+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectId,				#isMetaSide : false			},			#name : #oid,			#protocol : #accessing,			#sourceCode : 'oid\r\t"Answer the receiver\'s instance variable oid."\r\r\t^oid',			#stamp : 'rww 12/8/2002 10:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '627' ],		#self : OmReference [ '628' ],		#time : DateAndTime [ '2018-08-16T16:44:10.386828+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectId,				#isMetaSide : false			},			#name : #'oid:',			#protocol : #accessing,			#sourceCode : 'oid: anObject\r\t"Set the receiver\'s instance variable oid to anObject."\r\r\toid := anObject',			#stamp : 'rww 12/8/2002 10:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '628' ],		#self : OmReference [ '629' ],		#time : DateAndTime [ '2018-08-16T16:44:10.387971+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1ObjectId,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #'private - parsing',			#sourceCode : 'printOn: aStream\r\r\taStream nextPutAll: self oid',			#stamp : 'rww 1/1/2003 14:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '629' ],		#self : OmReference [ '630' ],		#time : DateAndTime [ '2018-08-16T16:44:10.389238+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ASN1Value,				#isMetaSide : false			},			#name : #asAsn1Bytes,			#protocol : #'private - parsing',			#sourceCode : 'asAsn1Bytes\r\r\t^ ASN1Stream encode: self\r',			#stamp : 'rww 3/28/2007 12:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '630' ],		#self : OmReference [ '631' ],		#time : DateAndTime [ '2018-08-16T16:44:10.390197+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DSAPrivateKeyFileReader class',				#isMetaSide : true			},			#name : #'fromFile:',			#protocol : #'as yet unclassified',			#sourceCode : 'fromFile: filename\r\t"(DSAPrivateKeyFileReader fromFile: \'/usr/local/ssl/private/dsa.key\')"\r\t"(DSAPrivateKeyFileReader fromFile: \'/Users/slosher/Desktop/squeak/certificates/dsa.key\')"\r\r\t| fs data |\r\tfs := StandardFileStream fileNamed: filename.\r\tdata := fs contentsOfEntireFile.\r\t^ self new initializeFromFileContents: data.\r',			#stamp : 'rww 9/28/2006 10:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '631' ],		#self : OmReference [ '632' ],		#time : DateAndTime [ '2018-08-16T16:44:10.391153+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #asASN1Value,			#protocol : #converting,			#sourceCode : 'asASN1Value\r\r\tself decryptedBytes isNil \r\t\tifTrue: [self decrypt].\r\t^ ASN1Stream decodeBytes: self decryptedBytes\r',			#stamp : 'rww 3/28/2007 11:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '632' ],		#self : OmReference [ '633' ],		#time : DateAndTime [ '2018-08-16T16:44:10.392096+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #asPrivateKey,			#protocol : #converting,			#sourceCode : 'asPrivateKey\r\r\t| asn1 |\r\tasn1 := self asASN1Value.\r\t^ DSAPrivateKey p: (asn1 at: 2) q: (asn1 at: 3) g: (asn1 at: 4) x: (asn1 at: 6).\r',			#stamp : 'rww 9/27/2006 21:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '633' ],		#self : OmReference [ '634' ],		#time : DateAndTime [ '2018-08-16T16:44:10.393186+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #asPublicKey,			#protocol : #converting,			#sourceCode : 'asPublicKey\r\r\t| asn1 |\r\tasn1 := self asASN1Value.\r\t^ DSAPublicKey p: (asn1 at: 2) q: (asn1 at: 3) g: (asn1 at: 4) y: (asn1 at: 5).\r',			#stamp : 'rww 9/27/2006 21:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '634' ],		#self : OmReference [ '635' ],		#time : DateAndTime [ '2018-08-16T16:44:10.394335+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #bytes,			#protocol : #accessing,			#sourceCode : 'bytes\r\t"Answer the value of bytes"\r\r\t^ bytes',			#stamp : 'rww 9/27/2006 21:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '635' ],		#self : OmReference [ '636' ],		#time : DateAndTime [ '2018-08-16T16:44:10.3955+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'bytes:',			#protocol : #accessing,			#sourceCode : 'bytes: anObject\r\t"Set the value of bytes"\r\r\tbytes := anObject',			#stamp : 'rww 9/27/2006 21:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '636' ],		#self : OmReference [ '637' ],		#time : DateAndTime [ '2018-08-16T16:44:10.396969+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #decrypt,			#protocol : #initialization,			#sourceCode : 'decrypt\r\r\t| cipher key block encryptedStream decryptedStream |\r\tself password isNil \r\t\tifTrue: [self password: (FillInTheBlank requestPassword: \'Enter your password\')].\r\tkey := OpenSSLKeyDerivationFunction new \r\t\tderivedKeyFromPassword: self password \r\t\tsalt: self iv \r\t\tsize: 24.\r\tcipher := (TripleDES key: key) cbc initialVector: iv.\r\tencryptedStream := self bytes readStream.\r\tdecryptedStream := ReadWriteStream on: (ByteArray new: encryptedStream size).\r\t[encryptedStream atEnd] whileFalse: \r\t\t[block := encryptedStream next: 8.\r\t\tcipher decryptBlock: block.\r\t\tdecryptedStream nextPutAll: block].\r\tself decryptedBytes: decryptedStream contents.\r',			#stamp : 'rww 3/30/2007 14:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '637' ],		#self : OmReference [ '638' ],		#time : DateAndTime [ '2018-08-16T16:44:10.398081+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #decryptedBytes,			#protocol : #accessing,			#sourceCode : 'decryptedBytes\r\t"Answer the value of decryptedBytes"\r\r\t^ decryptedBytes',			#stamp : 'rww 9/27/2006 21:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '638' ],		#self : OmReference [ '639' ],		#time : DateAndTime [ '2018-08-16T16:44:10.399212+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'decryptedBytes:',			#protocol : #accessing,			#sourceCode : 'decryptedBytes: anObject\r\t"Set the value of decryptedBytes"\r\r\tdecryptedBytes := anObject',			#stamp : 'rww 9/27/2006 21:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '639' ],		#self : OmReference [ '640' ],		#time : DateAndTime [ '2018-08-16T16:44:10.400409+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'initializeFromFileContents:',			#protocol : #initialization,			#sourceCode : 'initializeFromFileContents: data\r\r\t| i j theData |\r\ti := data indexOfSubCollection: \'--BEGIN \' startingAt: 1.\r\ti = 0 ifTrue: [self bytes: data asByteArray. ^ self].\r\ti := data indexOfSubCollection: \'KEY--\' startingAt: i.\r\ti := data findAnySubStr: String crlf startingAt: i.\r\tj := data findAnySubStr: String crlf startingAt: i + 1.\r\tself processProcType: (data copyFrom: i + 1 to: j).\r\ti := j.\r\tj := data findAnySubStr: String crlf startingAt: i + 1.\r\tself processDEKInfo: (data copyFrom: i + 1 to: j).\r\ti := j.\r\tj := data indexOfSubCollection: \'--END \' startingAt: i.\r\ttheData := (data copyFrom: i to: j)\r\t\treject: [:c | (c = $-) or: [c isSeparator]].\r\ttheData := (Base64MimeConverter mimeDecodeToBytes: theData readStream) contents.\r\tself bytes: theData.\r',			#stamp : 'rww 3/29/2007 11:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '640' ],		#self : OmReference [ '641' ],		#time : DateAndTime [ '2018-08-16T16:44:10.401499+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #iv,			#protocol : #accessing,			#sourceCode : 'iv\r\t"Answer the value of iv"\r\r\t^ iv',			#stamp : 'rww 9/27/2006 21:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '641' ],		#self : OmReference [ '642' ],		#time : DateAndTime [ '2018-08-16T16:44:10.402548+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'iv:',			#protocol : #accessing,			#sourceCode : 'iv: anObject\r\t"Set the value of iv"\r\r\tiv := anObject',			#stamp : 'rww 9/27/2006 21:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '642' ],		#self : OmReference [ '643' ],		#time : DateAndTime [ '2018-08-16T16:44:10.403617+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #password,			#protocol : #accessing,			#sourceCode : 'password\r\t"Answer the value of password"\r\r\t^ password',			#stamp : 'rww 9/27/2006 21:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '643' ],		#self : OmReference [ '644' ],		#time : DateAndTime [ '2018-08-16T16:44:10.404836+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'password:',			#protocol : #accessing,			#sourceCode : 'password: anObject\r\t"Set the value of password"\r\r\tpassword := anObject',			#stamp : 'rww 9/27/2006 21:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '644' ],		#self : OmReference [ '645' ],		#time : DateAndTime [ '2018-08-16T16:44:10.405955+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'processDEKInfo:',			#protocol : #initialization,			#sourceCode : 'processDEKInfo: data\r\r\t| stream algorithm |\r\tstream := data readStream.\r\tstream upTo: $:.\r\talgorithm := (stream upTo: $,) withBlanksTrimmed.\r\tself iv: (Integer readFrom: stream base: 16) asByteArray.\r',			#stamp : 'rww 9/27/2006 21:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '645' ],		#self : OmReference [ '646' ],		#time : DateAndTime [ '2018-08-16T16:44:10.406993+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'processProcType:',			#protocol : #initialization,			#sourceCode : 'processProcType: data\r',			#stamp : 'rww 9/27/2006 21:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '646' ],		#self : OmReference [ '647' ],		#time : DateAndTime [ '2018-08-16T16:44:10.408112+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #OpenSSLKeyDerivationFunction,				#isMetaSide : false			},			#name : #'derivedKeyFromPassword:salt:size:',			#protocol : #'as yet unclassified',			#sourceCode : 'derivedKeyFromPassword: password salt: salt size: size\r\r\t| result block digest |\r\tresult := ByteArray new.\r\tdigest := ByteArray new.\r\t(size + 15 // 16) timesRepeat: [\r\t\tblock := digest, password, salt.\r\t\tdigest := MD5 hashMessage: block.\r\t\tresult := result, digest].\r\t^ result readStream next: size.\r\r',			#stamp : 'rww 9/26/2006 15:45',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '647' ],		#self : OmReference [ '648' ],		#time : DateAndTime [ '2018-08-16T16:44:10.409027+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12CRLBag,				#isMetaSide : false			},			#name : #crlId,			#protocol : #accessing,			#sourceCode : 'crlId\r\t"Answer the value of crlId"\r\r\t^ crlId',			#stamp : 'rww 3/29/2007 15:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '648' ],		#self : OmReference [ '649' ],		#time : DateAndTime [ '2018-08-16T16:44:10.409938+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12CRLBag,				#isMetaSide : false			},			#name : #'crlId:',			#protocol : #accessing,			#sourceCode : 'crlId: anObject\r\t"Set the value of crlId"\r\r\tcrlId := anObject',			#stamp : 'rww 3/29/2007 15:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '649' ],		#self : OmReference [ '650' ],		#time : DateAndTime [ '2018-08-16T16:44:10.410964+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12CRLBag,				#isMetaSide : false			},			#name : #crlValue,			#protocol : #accessing,			#sourceCode : 'crlValue\r\t"Answer the value of crlValue"\r\r\t^ crlValue',			#stamp : 'rww 3/29/2007 15:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '650' ],		#self : OmReference [ '651' ],		#time : DateAndTime [ '2018-08-16T16:44:10.412161+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12CRLBag,				#isMetaSide : false			},			#name : #'crlValue:',			#protocol : #accessing,			#sourceCode : 'crlValue: anObject\r\t"Set the value of crlValue"\r\r\tcrlValue := anObject',			#stamp : 'rww 3/29/2007 15:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '651' ],		#self : OmReference [ '652' ],		#time : DateAndTime [ '2018-08-16T16:44:10.41324+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12CertBag,				#isMetaSide : false			},			#name : #certId,			#protocol : #accessing,			#sourceCode : 'certId\r\t"Answer the value of certId"\r\r\t^ certId',			#stamp : 'rww 3/29/2007 15:23',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '652' ],		#self : OmReference [ '653' ],		#time : DateAndTime [ '2018-08-16T16:44:10.414108+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12CertBag,				#isMetaSide : false			},			#name : #'certId:',			#protocol : #accessing,			#sourceCode : 'certId: anObject\r\t"Set the value of certId"\r\r\tcertId := anObject',			#stamp : 'rww 3/29/2007 15:23',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '653' ],		#self : OmReference [ '654' ],		#time : DateAndTime [ '2018-08-16T16:44:10.415242+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12CertBag,				#isMetaSide : false			},			#name : #certValue,			#protocol : #accessing,			#sourceCode : 'certValue\r\t"Answer the value of certValue"\r\r\t^ certValue',			#stamp : 'rww 3/29/2007 15:23',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '654' ],		#self : OmReference [ '655' ],		#time : DateAndTime [ '2018-08-16T16:44:10.416298+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12CertBag,				#isMetaSide : false			},			#name : #'certValue:',			#protocol : #accessing,			#sourceCode : 'certValue: anObject\r\t"Set the value of certValue"\r\r\tcertValue := anObject',			#stamp : 'rww 3/29/2007 15:23',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '655' ],		#self : OmReference [ '656' ],		#time : DateAndTime [ '2018-08-16T16:44:10.417359+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12KeyDerivationFunction,				#isMetaSide : false			},			#name : #'copyResult:toBufferOfSize:',			#protocol : #private,			#sourceCode : 'copyResult: result toBufferOfSize: bufferSize\r\r\t| buffer |\r\tbuffer := ByteArray new: bufferSize.\r\t0 to: bufferSize-1 do: [:i | buffer at: i + 1 put: (result at: (i \\\\ result size + 1))].\r\t^ buffer\r',			#stamp : 'rww 3/30/2007 09:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '656' ],		#self : OmReference [ '657' ],		#time : DateAndTime [ '2018-08-16T16:44:10.418374+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12KeyDerivationFunction,				#isMetaSide : false			},			#name : #'derivedKeyWithId:fromDoubleBytePassword:salt:iterations:size:',			#protocol : #'as yet unclassified',			#sourceCode : 'derivedKeyWithId: id fromDoubleBytePassword: passIn salt: saltIn iterations: iterate size: size\r\r\t| password salt diversifier initial final digest v u pLen sLen c k buffer ij |\r\tv := 64.\r\tu := 20.\r\tdiversifier := ByteArray new: v withAll: id.\r\tpLen := v * (passIn size + v - 1 // v).\r\tsLen := v * (saltIn size + v - 1 // v).\r\tk := (passIn size + v - 1 // v) + (saltIn size + v - 1 // v).\r\r\tpassword := self passwordBufferFromPassword: passIn length: pLen.\r\tsalt := self saltBufferFromSalt: saltIn length: sLen.\r\tinitial := salt, password.\r\tc := size + u - 1 // u.\r\tfinal := ByteArray new.\r\t1 to: c do: [:idx |\r\t\tdigest := diversifier, initial.\r\t\titerate timesRepeat: [digest := SHA1 hashMessage: digest].\r\t\tfinal := final, digest.\r\t\tbuffer := self copyResult: digest toBufferOfSize: v.\r\t\t0 to: k - 1 do: [:j |\r\t\t\tij := initial copyFrom: v*j + 1 to: v*(j+1).\r\t\t\tij := (ij asInteger + buffer asInteger + 1) asByteArray.\r\t\t\tij size > v ifTrue: [ij := ij copyFrom: 2 to: v+1].\r\t\t\tij size < v ifTrue: [ij := ij, (ByteArray new: v - ij size withAll: 0)].\r\t\t\tinitial replaceFrom: v*j + 1 to: v*(j+1) with: ij]].\r\t^ final copyFrom: 1 to: size.',			#stamp : 'rww 3/30/2007 09:18',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '657' ],		#self : OmReference [ '658' ],		#time : DateAndTime [ '2018-08-16T16:44:10.419504+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12KeyDerivationFunction,				#isMetaSide : false			},			#name : #'derivedKeyWithId:fromPassword:salt:iterations:size:',			#protocol : #'as yet unclassified',			#sourceCode : 'derivedKeyWithId: id fromPassword: passIn salt: saltIn iterations: iterate size: size\r\r\t| stream password |\r\tstream := WriteStream on: ByteArray new.\r\tpassIn do: [:e | stream nextPut: 0; nextPut: e asciiValue].\r\tpassword := stream nextPut: 0; nextPut: 0; contents.\r\r\t^ self \r\t\tderivedKeyWithId: id \r\t\tfromDoubleBytePassword: password\r\t\tsalt: saltIn \r\t\titerations: iterate \r\t\tsize: size',			#stamp : 'rww 3/30/2007 08:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '658' ],		#self : OmReference [ '659' ],		#time : DateAndTime [ '2018-08-16T16:44:10.420619+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12KeyDerivationFunction,				#isMetaSide : false			},			#name : #'passwordBufferFromPassword:length:',			#protocol : #private,			#sourceCode : 'passwordBufferFromPassword: pass length: pLen\r\r\t| password |\r\tpassword := ByteArray new: pLen.\r\t0 to: pLen-1 do: [:i | password at: i + 1 put: (pass at: (i \\\\ pass size + 1))].\r\t^ password',			#stamp : 'rww 3/30/2007 08:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '659' ],		#self : OmReference [ '660' ],		#time : DateAndTime [ '2018-08-16T16:44:10.421688+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12KeyDerivationFunction,				#isMetaSide : false			},			#name : #'saltBufferFromSalt:length:',			#protocol : #private,			#sourceCode : 'saltBufferFromSalt: saltIn length: sLen\r\r\t| salt |\r\tsalt := ByteArray new: sLen.\r\t0 to: sLen-1 do: [:i | salt at: i + 1 put: (saltIn at: (i \\\\ saltIn size + 1))].\r\t^ salt\r',			#stamp : 'rww 3/30/2007 08:58',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '660' ],		#self : OmReference [ '661' ],		#time : DateAndTime [ '2018-08-16T16:44:10.422767+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12MacData,				#isMetaSide : false			},			#name : #iterations,			#protocol : #accessing,			#sourceCode : 'iterations\r\t"Answer the value of iterations"\r\r\t^ iterations',			#stamp : 'rww 3/29/2007 11:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '661' ],		#self : OmReference [ '662' ],		#time : DateAndTime [ '2018-08-16T16:44:10.423659+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12MacData,				#isMetaSide : false			},			#name : #'iterations:',			#protocol : #accessing,			#sourceCode : 'iterations: anObject\r\t"Set the value of iterations"\r\r\titerations := anObject',			#stamp : 'rww 3/29/2007 11:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '662' ],		#self : OmReference [ '663' ],		#time : DateAndTime [ '2018-08-16T16:44:10.424679+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12MacData,				#isMetaSide : false			},			#name : #mac,			#protocol : #accessing,			#sourceCode : 'mac\r\t"Answer the value of mac"\r\r\t^ mac',			#stamp : 'rww 3/29/2007 11:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '663' ],		#self : OmReference [ '664' ],		#time : DateAndTime [ '2018-08-16T16:44:10.425697+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12MacData,				#isMetaSide : false			},			#name : #'mac:',			#protocol : #accessing,			#sourceCode : 'mac: anObject\r\t"Set the value of mac"\r\r\tmac := anObject',			#stamp : 'rww 3/29/2007 11:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '664' ],		#self : OmReference [ '665' ],		#time : DateAndTime [ '2018-08-16T16:44:10.426984+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12MacData,				#isMetaSide : false			},			#name : #macSalt,			#protocol : #accessing,			#sourceCode : 'macSalt\r\t"Answer the value of macSalt"\r\r\t^ macSalt',			#stamp : 'rww 3/29/2007 11:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '665' ],		#self : OmReference [ '666' ],		#time : DateAndTime [ '2018-08-16T16:44:10.428008+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12MacData,				#isMetaSide : false			},			#name : #'macSalt:',			#protocol : #accessing,			#sourceCode : 'macSalt: anObject\r\t"Set the value of macSalt"\r\r\tmacSalt := anObject',			#stamp : 'rww 3/29/2007 11:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '666' ],		#self : OmReference [ '667' ],		#time : DateAndTime [ '2018-08-16T16:44:10.42908+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pkcs12PFX class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\r\r\tX509Certificate initialize.\r\tX509CertificateExtension initialize.\r\tself initializeASN1Types.\r\r\r',			#stamp : 'rww 4/20/2007 22:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '667' ],		#self : OmReference [ '668' ],		#time : DateAndTime [ '2018-08-16T16:44:10.430292+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pkcs12PFX class',				#isMetaSide : true			},			#name : #initializeASN1Types,			#protocol : #'class initialization',			#sourceCode : 'initializeASN1Types\r\r\t| module |\r\tmodule := ASN1Module name: #pkcs.\r\tmodule addImport: (ASN1Module name: #x509).\r\r\t(module sequence: #PFX mapping: Pkcs12PFX)\r\t\tadd: #version type: #ASN1IntegerType;\r\t\tadd: #authSafe type: #ContentInfo;\r\t\taddOptional: #macData type: #MacData;\r\t\tyourself.\r\r\t(module sequence: #ContentInfo mapping: PkcsContentInfo)\r\t\tadd: #contentType type: #ContentType;\r\t\tadd: #content type: #ContentInfoContents explicitTag: 0;\r\t\tyourself.\r\tmodule objectIdentifier: #ContentType.\r\t(module any: #ContentInfoContents definedBy: #contentType)\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.7.1\') put: #ASN1ByteArrayType;\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.7.6\') put: #EncryptedData;\r\t\tyourself.\r\t(module sequence: #EncryptedData mapping: PkcsEncryptedData)\r\t\tadd: #version type: #ASN1IntegerType;\r\t\tadd: #encryptedContentInfo type: #EncryptedContentInfo;\r\t\tyourself.\r\t(module sequence: #EncryptedContentInfo mapping: PkcsEncryptedContentInfo)\r\t\tadd: #contentType type: #ContentType;\r\t\tadd: #contentEncryptionAlgorithm type: #AlgorithmIdentifier;\r\t\taddOptional: #encryptedContent type: #EncryptedContent implicitTag: 0;\r\t\tyourself.\r\tmodule byteArray: #EncryptedContent.\r\r\t(module sequence: #MacData mapping: Pkcs12MacData)\r\t\tadd: #mac type: #DigestInfo;\r\t\tadd: #macSalt type: #ASN1ByteArrayType;\r\t\tadd: #iterations type: #ASN1IntegerType default: 1;\r\t\tyourself.\r\t(module sequence: #DigestInfo mapping: PkcsDigestInfo)\r\t\tadd: #digestAlgorithm type: #AlgorithmIdentifier;\r\t\tadd: #digest type: #Digest;\r\t\tyourself.\r\tmodule byteArray: #Digest.\r\tmodule sequence: #AuthenticatedSafe of: #ContentInfo.\r\tmodule sequence: #SafeContents of: #SafeBag.\r\t(module sequence: #SafeBag mapping: Pkcs12SafeBag)\r\t\tadd: #bagId type: #ASN1ObjectIdentifierType;\r\t\tadd: #bagValue type: #BagTypeChoice explicitTag: 0;\r\t\tadd: #bagAttributes type: #BagAttributes;\r\t\tyourself.\r\tmodule set: #BagAttributes of: #ASN1SequenceType.\r\t(module any: #BagTypeChoice definedBy: #bagId)\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.12.10.1.1\') put: #KeyBag;\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.12.10.1.2\') put: #ShroudedKeyBag;\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.12.10.1.3\') put: #CertBag;\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.12.10.1.4\') put: #CRLBag;\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.12.10.1.5\') put: #SecretBag;\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.12.10.1.6\') put: #SafeContents;\r\t\tyourself.\r\tmodule assign: #KeyBag from: #PrivateKeyInfo.\r\tmodule assign: #ShroudedKeyBag from: #EncryptedPrivateKeyInfo.\r\t(module sequence: #PrivateKeyInfo mapping: Pkcs8PrivateKeyInfo)\r\t\tadd: #version type: #ASN1IntegerType;\r\t\tadd: #privateKeyAlgorithm type: #AlgorithmIdentifier;\r\t\tadd: #privateKey type: #ASN1ByteArrayType;\r\t\taddOptional: #attributes type: #PrivateKeyInfoAttributes implicitTag: 0;\r\t\tyourself.\r\tmodule set: #PrivateKeyInfoAttributes of: #ASN1SequenceType.\r\t(module sequence: #EncryptedPrivateKeyInfo mapping: Pkcs8EncryptedPrivateKeyInfo)\r\t\tadd: #encryptionAlgorithm type: #AlgorithmIdentifier;\r\t\tadd: #encryptedData type: #ASN1ByteArrayType;\r\t\tyourself.\r\t(module sequence: #CertBag mapping: Pkcs12CertBag)\r\t\tadd: #certId type: #ASN1ObjectIdentifierType;\r\t\tadd: #certValue type: #CertBagTypeChoice explicitTag: 0;\r\t\tyourself.\r\t(module any: #CertBagTypeChoice definedBy: #certId)\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.9.22.1\') put: #ASN1ByteArrayType;\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.9.22.2\') put: #ASN1IA5StringType;\r\t\tyourself.\r\t(module sequence: #CRLBag mapping: Pkcs12CRLBag)\r\t\tadd: #crlId type: #ASN1ObjectIdentifierType;\r\t\tadd: #crlValue type: #CRLBagTypeChoice explicitTag: 0;\r\t\tyourself.\r\t(module choice: #CRLBagTypeChoice)\r\t\tadd: (ASN1ObjectId fromString: \'1.2.840.113549.1.9.22.1\') type: #ASN1ByteArrayType;\r\t\tyourself.\r\t(module sequence: #SecretBag mapping: Pkcs12SecretBag)\r\t\tadd: #secretId type: #ASN1ObjectIdentifierType;\r\t\tadd: #secretValue type: #SecretBagTypeChoice explicitTag: 0;\r\t\tyourself.\r\t(module choice: #SecretBagTypeChoice)\r\t\tyourself.\r\r\r',			#stamp : 'rww 4/13/2007 22:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '668' ],		#self : OmReference [ '669' ],		#time : DateAndTime [ '2018-08-16T16:44:10.431361+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PFX,				#isMetaSide : false			},			#name : #authSafe,			#protocol : #accessing,			#sourceCode : 'authSafe\r\t"Answer the value of authSafe"\r\r\t^ authSafe',			#stamp : 'rww 3/29/2007 11:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '669' ],		#self : OmReference [ '670' ],		#time : DateAndTime [ '2018-08-16T16:44:10.432226+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PFX,				#isMetaSide : false			},			#name : #'authSafe:',			#protocol : #accessing,			#sourceCode : 'authSafe: anObject\r\t"Set the value of authSafe"\r\r\tauthSafe := anObject.\r',			#stamp : 'rww 3/30/2007 10:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '670' ],		#self : OmReference [ '671' ],		#time : DateAndTime [ '2018-08-16T16:44:10.433238+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PFX,				#isMetaSide : false			},			#name : #macData,			#protocol : #accessing,			#sourceCode : 'macData\r\t"Answer the value of macData"\r\r\t^ macData',			#stamp : 'rww 3/29/2007 11:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '671' ],		#self : OmReference [ '672' ],		#time : DateAndTime [ '2018-08-16T16:44:10.434745+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PFX,				#isMetaSide : false			},			#name : #'macData:',			#protocol : #accessing,			#sourceCode : 'macData: anObject\r\t"Set the value of macData"\r\r\tmacData := anObject',			#stamp : 'rww 3/29/2007 11:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '672' ],		#self : OmReference [ '673' ],		#time : DateAndTime [ '2018-08-16T16:44:10.43613+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PFX,				#isMetaSide : false			},			#name : #version,			#protocol : #accessing,			#sourceCode : 'version\r\t"Answer the value of version"\r\r\t^ version',			#stamp : 'rww 3/29/2007 11:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '673' ],		#self : OmReference [ '674' ],		#time : DateAndTime [ '2018-08-16T16:44:10.437365+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PFX,				#isMetaSide : false			},			#name : #'version:',			#protocol : #accessing,			#sourceCode : 'version: anObject\r\t"Set the value of version"\r\r\tversion := anObject',			#stamp : 'rww 3/29/2007 11:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '674' ],		#self : OmReference [ '675' ],		#time : DateAndTime [ '2018-08-16T16:44:10.438664+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pkcs12PrivateKeyFileReader class',				#isMetaSide : true			},			#name : #'fromFile:',			#protocol : #'as yet unclassified',			#sourceCode : 'fromFile: filename\r\t"(Pkcs12PrivateKeyFileReader fromFile: \'/Users/slosher/Desktop/squeak/certificates/usarhiocertpks12.pfx\')"\r\r\t| password |\r\tpassword := FillInTheBlank requestPassword: \'Enter your password\'.\r\t^ self fromFile: filename password: password.\r',			#stamp : 'rww 4/9/2007 07:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '675' ],		#self : OmReference [ '676' ],		#time : DateAndTime [ '2018-08-16T16:44:10.439767+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pkcs12PrivateKeyFileReader class',				#isMetaSide : true			},			#name : #'fromFile:password:',			#protocol : #'as yet unclassified',			#sourceCode : 'fromFile: filename password: aPassword\r\t"(Pkcs12PrivateKeyFileReader fromFile: \'/Users/slosher/Desktop/squeak/certificates/usarhiocertpks12.pfx\')"\r\r\t| fs data |\r\tfs := StandardFileStream fileNamed: filename.\r\tdata := fs contentsOfEntireFile.\r\t^ self new\r\t\tpassword: aPassword;\r\t\tinitializeFromFileContents: data.\r',			#stamp : 'rww 4/9/2007 07:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '676' ],		#self : OmReference [ '677' ],		#time : DateAndTime [ '2018-08-16T16:44:10.440892+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #asCertificate,			#protocol : #accessing,			#sourceCode : 'asCertificate\r\r\tself certs isEmpty ifTrue: [^ nil].\r\t^ self certs first\r',			#stamp : 'rww 4/8/2007 20:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '677' ],		#self : OmReference [ '678' ],		#time : DateAndTime [ '2018-08-16T16:44:10.441944+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #asPrivateKey,			#protocol : #accessing,			#sourceCode : 'asPrivateKey\r\r\tself privateKeys isEmpty ifTrue: [^ nil].\r\t^ self privateKeys first',			#stamp : 'rww 4/8/2007 20:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '678' ],		#self : OmReference [ '679' ],		#time : DateAndTime [ '2018-08-16T16:44:10.443457+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #certs,			#protocol : #accessing,			#sourceCode : 'certs\r\t"Answer the value of certs"\r\r\tcerts isNil ifTrue: [self certs: OrderedCollection new].\r\t^ certs',			#stamp : 'rww 4/9/2007 04:35',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '679' ],		#self : OmReference [ '680' ],		#time : DateAndTime [ '2018-08-16T16:44:10.444637+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #'certs:',			#protocol : #accessing,			#sourceCode : 'certs: anObject\r\t"Set the value of certs"\r\r\tcerts := anObject',			#stamp : 'rww 4/8/2007 14:15',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '680' ],		#self : OmReference [ '681' ],		#time : DateAndTime [ '2018-08-16T16:44:10.44584+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #'decodeContentInfo:',			#protocol : #initialize-release,			#sourceCode : 'decodeContentInfo: contentInfo\r\r\t| safeContents |\r\tcontentInfo contentType oid = \'1.2.840.113549.1.7.1\'\r\t\tifTrue: [\r\t\t\tsafeContents := ASN1Stream \r\t\t\t\tdecodeBytes: contentInfo content\r\t\t\t\twithType: ((ASN1Module name: #pkcs) find: #SafeContents).\r\t\t\tsafeContents do: [:eachSafeBag | self decodeSafeBag: eachSafeBag].\r\t\t\t^ self].\r\tcontentInfo contentType oid = \'1.2.840.113549.1.7.6\'\r\t\tifTrue: [\r\t\t\tsafeContents := contentInfo content decryptWithPassword: self password.\r\t\t\tsafeContents do: [:eachSafeBag | self decodeSafeBag: eachSafeBag].\r\t\t\t^ self].\r\tself error: \'unknown content info: \', contentInfo contentType oid.\r',			#stamp : 'rww 4/13/2007 22:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '681' ],		#self : OmReference [ '682' ],		#time : DateAndTime [ '2018-08-16T16:44:10.447133+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #'decodeSafeBag:',			#protocol : #initialize-release,			#sourceCode : 'decodeSafeBag: safeBag\r\r\t| asn1 key keyBag cert |\r\tsafeBag bagId oid = \'1.2.840.113549.1.12.10.1.1\'\r\t\tifTrue: [\r\t\t\tasn1 := ASN1Stream decodeBytes: safeBag bagValue.\r\t\t\t(asn1 at: 1) > 0\r\t\t\t\tifTrue: [key := RSAPublicKey exponent: (asn1 at: 3) modulo: (asn1 at: 1)]\r\t\t\t\tifFalse: [key := RSAPrivateKey p: (asn1 at: 5) q: (asn1 at: 6) dP: (asn1 at: 7) dQ: (asn1 at: 8) qInv: (asn1 at: 9)].\r\t\t\tself privateKeys add: key.\r\t\t\t^ self].\r\tsafeBag bagId oid = \'1.2.840.113549.1.12.10.1.2\'\r\t\tifTrue: [\r\t\t\tkeyBag := safeBag bagValue decryptWithPassword: self password.\r\t\t\tkey := keyBag asPrivateKey.\r\t\t\tself privateKeys add: key.\r\t\t\t^ self].\r\tsafeBag bagId oid = \'1.2.840.113549.1.12.10.1.3\'\r\t\tifTrue: [\r\t\t\tcert := ASN1Stream \r\t\t\t\tdecodeBytes: safeBag bagValue certValue \r\t\t\t\twithType: ((ASN1Module name: #x509) find: #Certificate).\r\t\t\tself certs add: cert.\r\t\t\t^ self].\r\tself error: \'unknown safe bag: \', safeBag bagId oid.\r',			#stamp : 'rww 9/28/2010 07:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '682' ],		#self : OmReference [ '683' ],		#time : DateAndTime [ '2018-08-16T16:44:10.448319+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #'initializeFromFileContents:',			#protocol : #initialize-release,			#sourceCode : 'initializeFromFileContents: data\r\r\t| authSafe |\r\tself pfx: (ASN1Stream \r\t\tdecodeBytes: data asByteArray\r\t\twithType: ((ASN1Module name: #pkcs) find: #PFX)).\r\tself validatePFXMAC.\r\tauthSafe := ASN1Stream \r\t\tdecodeBytes: self pfx authSafe content \r\t\twithType: ((ASN1Module name: #pkcs) find: #AuthenticatedSafe).\r\tauthSafe do: [:eachContentInfo | self decodeContentInfo: eachContentInfo].\r\tself password: nil.',			#stamp : 'rww 4/13/2007 22:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '683' ],		#self : OmReference [ '684' ],		#time : DateAndTime [ '2018-08-16T16:44:10.44941+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #password,			#protocol : #accessing,			#sourceCode : 'password\r\t"Answer the value of password"\r\r\t^ password',			#stamp : 'rww 3/29/2007 16:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '684' ],		#self : OmReference [ '685' ],		#time : DateAndTime [ '2018-08-16T16:44:10.450458+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #'password:',			#protocol : #accessing,			#sourceCode : 'password: anObject\r\t"Set the value of password"\r\r\tpassword := anObject',			#stamp : 'rww 3/29/2007 16:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '685' ],		#self : OmReference [ '686' ],		#time : DateAndTime [ '2018-08-16T16:44:10.45175+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #pfx,			#protocol : #accessing,			#sourceCode : 'pfx\r\t"Answer the value of pfx"\r\r\t^ pfx',			#stamp : 'rww 3/29/2007 16:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '686' ],		#self : OmReference [ '687' ],		#time : DateAndTime [ '2018-08-16T16:44:10.45279+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #'pfx:',			#protocol : #accessing,			#sourceCode : 'pfx: anObject\r\t"Set the value of pfx"\r\r\tpfx := anObject',			#stamp : 'rww 3/29/2007 16:57',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '687' ],		#self : OmReference [ '688' ],		#time : DateAndTime [ '2018-08-16T16:44:10.453884+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #privateKeys,			#protocol : #accessing,			#sourceCode : 'privateKeys\r\t"Answer the value of privateKeys"\r\r\tprivateKeys isNil ifTrue: [self privateKeys: OrderedCollection new].\r\t^ privateKeys',			#stamp : 'rww 4/9/2007 04:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '688' ],		#self : OmReference [ '689' ],		#time : DateAndTime [ '2018-08-16T16:44:10.454923+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #'privateKeys:',			#protocol : #accessing,			#sourceCode : 'privateKeys: anObject\r\t"Set the value of privateKeys"\r\r\tprivateKeys := anObject',			#stamp : 'rww 4/8/2007 14:15',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '689' ],		#self : OmReference [ '690' ],		#time : DateAndTime [ '2018-08-16T16:44:10.456169+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12PrivateKeyFileReader,				#isMetaSide : false			},			#name : #validatePFXMAC,			#protocol : #initialize-release,			#sourceCode : 'validatePFXMAC\r\r\t| data salt iterations macValue calculatedMacValue hashMaterial hmac |\r\tdata := self pfx authSafe content.\r\tsalt := self pfx macData macSalt.\r\titerations := self pfx macData iterations.\r\tmacValue := self pfx macData mac digest.\r\thashMaterial := Pkcs12KeyDerivationFunction new\r\t\tderivedKeyWithId: 3\r\t\tfromPassword: self password\r\t\tsalt: salt\r\t\titerations: iterations\r\t\tsize: 20.\r\thmac := SHA1 new hmac.\r\thmac key: hashMaterial.\r\tcalculatedMacValue := hmac digestMessage: data.\r\tcalculatedMacValue = macValue\r\t\tifFalse: [self error: \'invalid MAC\'].\r\t',			#stamp : 'rww 4/8/2007 16:20',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '690' ],		#self : OmReference [ '691' ],		#time : DateAndTime [ '2018-08-16T16:44:10.457265+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12SafeBag,				#isMetaSide : false			},			#name : #bagAttributes,			#protocol : #accessing,			#sourceCode : 'bagAttributes\r\t"Answer the value of bagAttributes"\r\r\t^ bagAttributes',			#stamp : 'rww 3/29/2007 14:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '691' ],		#self : OmReference [ '692' ],		#time : DateAndTime [ '2018-08-16T16:44:10.45819+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12SafeBag,				#isMetaSide : false			},			#name : #'bagAttributes:',			#protocol : #accessing,			#sourceCode : 'bagAttributes: anObject\r\t"Set the value of bagAttributes"\r\r\tbagAttributes := anObject',			#stamp : 'rww 3/29/2007 14:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '692' ],		#self : OmReference [ '693' ],		#time : DateAndTime [ '2018-08-16T16:44:10.459484+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12SafeBag,				#isMetaSide : false			},			#name : #bagId,			#protocol : #accessing,			#sourceCode : 'bagId\r\t"Answer the value of bagId"\r\r\t^ bagId',			#stamp : 'rww 3/29/2007 14:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '693' ],		#self : OmReference [ '694' ],		#time : DateAndTime [ '2018-08-16T16:44:10.460555+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12SafeBag,				#isMetaSide : false			},			#name : #'bagId:',			#protocol : #accessing,			#sourceCode : 'bagId: anObject\r\t"Set the value of bagId"\r\r\tbagId := anObject',			#stamp : 'rww 3/29/2007 14:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '694' ],		#self : OmReference [ '695' ],		#time : DateAndTime [ '2018-08-16T16:44:10.461558+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12SafeBag,				#isMetaSide : false			},			#name : #bagValue,			#protocol : #accessing,			#sourceCode : 'bagValue\r\t"Answer the value of bagValue"\r\r\t^ bagValue',			#stamp : 'rww 3/29/2007 14:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '695' ],		#self : OmReference [ '696' ],		#time : DateAndTime [ '2018-08-16T16:44:10.462591+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12SafeBag,				#isMetaSide : false			},			#name : #'bagValue:',			#protocol : #accessing,			#sourceCode : 'bagValue: anObject\r\t"Set the value of bagValue"\r\r\tbagValue := anObject',			#stamp : 'rww 3/29/2007 14:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '696' ],		#self : OmReference [ '697' ],		#time : DateAndTime [ '2018-08-16T16:44:10.463662+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12SecretBag,				#isMetaSide : false			},			#name : #secretId,			#protocol : #accessing,			#sourceCode : 'secretId\r\t"Answer the value of secretId"\r\r\t^ secretId',			#stamp : 'rww 3/29/2007 15:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '697' ],		#self : OmReference [ '698' ],		#time : DateAndTime [ '2018-08-16T16:44:10.464557+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12SecretBag,				#isMetaSide : false			},			#name : #'secretId:',			#protocol : #accessing,			#sourceCode : 'secretId: anObject\r\t"Set the value of secretId"\r\r\tsecretId := anObject',			#stamp : 'rww 3/29/2007 15:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '698' ],		#self : OmReference [ '699' ],		#time : DateAndTime [ '2018-08-16T16:44:10.465609+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12SecretBag,				#isMetaSide : false			},			#name : #secretValue,			#protocol : #accessing,			#sourceCode : 'secretValue\r\t"Answer the value of secretValue"\r\r\t^ secretValue',			#stamp : 'rww 3/29/2007 15:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '699' ],		#self : OmReference [ '700' ],		#time : DateAndTime [ '2018-08-16T16:44:10.466888+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs12SecretBag,				#isMetaSide : false			},			#name : #'secretValue:',			#protocol : #accessing,			#sourceCode : 'secretValue: anObject\r\t"Set the value of secretValue"\r\r\tsecretValue := anObject',			#stamp : 'rww 3/29/2007 15:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '700' ],		#self : OmReference [ '701' ],		#time : DateAndTime [ '2018-08-16T16:44:10.468158+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8EncryptedPrivateKeyInfo,				#isMetaSide : false			},			#name : #'cipherWithPassword:',			#protocol : #api,			#sourceCode : 'cipherWithPassword: password\r\r\t| salt iterations keyMaterial ivMaterial cipher |\r\tsalt := self encryptionAlgorithm parameters first.\r\titerations := self encryptionAlgorithm parameters last.\r\r\tself encryptionAlgorithm oid oid = \'1.2.840.113549.1.12.1.1\'\r\t\tifTrue: [\r\t\t\tkeyMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 1 \r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 16.\r\t\t\tcipher := ARC4 new key: keyMaterial.\r\t\t\t^ cipher].\r\tself encryptionAlgorithm oid oid = \'1.2.840.113549.1.12.1.2\'\r\t\tifTrue: [\r\t\t\tkeyMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 1 \r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 5.\r\t\t\tcipher := ARC4 new key: keyMaterial.\r\t\t\t^ cipher].\r\tself encryptionAlgorithm oid oid = \'1.2.840.113549.1.12.1.3\'\r\t\tifTrue: [\r\t\t\tkeyMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 1 \r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 24.\r\t\t\tivMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 2\r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 8.\r\t\t\tcipher := TripleDES new key: keyMaterial.\r\t\t\tcipher := cipher cbc initialVector: ivMaterial.\r\t\t\t^ cipher].\r\tself encryptionAlgorithm oid oid = \'1.2.840.113549.1.12.1.5\'\r\t\tifTrue: [\r\t\t\tkeyMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 1 \r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 16.\r\t\t\tivMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 2\r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 8.\r\t\t\tcipher := ARC2 key: keyMaterial effectiveKeyLength: 128.\r\t\t\tcipher := cipher cbc initialVector: ivMaterial.\r\t\t\t^ cipher].\r\tself encryptionAlgorithm oid oid = \'1.2.840.113549.1.12.1.6\'\r\t\tifTrue: [\r\t\t\tkeyMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 1 \r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 5.\r\t\t\tivMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 2\r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 8.\r\t\t\tcipher := ARC2 key: keyMaterial effectiveKeyLength: 40.\r\t\t\tcipher := cipher cbc initialVector: ivMaterial.\r\t\t\t^ cipher].\r\t^ nil',			#stamp : 'rww 4/10/2007 18:05',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '701' ],		#self : OmReference [ '702' ],		#time : DateAndTime [ '2018-08-16T16:44:10.469099+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8EncryptedPrivateKeyInfo,				#isMetaSide : false			},			#name : #'decryptWithPassword:',			#protocol : #api,			#sourceCode : 'decryptWithPassword: password\r\r\t| cipher asn1 |\r\tcipher := self cipherWithPassword: password.\r\tasn1 := cipher decrypt: self encryptedData.\r\t^ ASN1Stream \r\t\tdecodeBytes: asn1\r\t\twithType: ((ASN1Module name: #pkcs) find: #KeyBag)',			#stamp : 'rww 4/13/2007 22:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '702' ],		#self : OmReference [ '703' ],		#time : DateAndTime [ '2018-08-16T16:44:10.470178+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8EncryptedPrivateKeyInfo,				#isMetaSide : false			},			#name : #encryptedData,			#protocol : #accessing,			#sourceCode : 'encryptedData\r\t"Answer the value of encryptedData"\r\r\t^ encryptedData',			#stamp : 'rww 3/29/2007 15:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '703' ],		#self : OmReference [ '704' ],		#time : DateAndTime [ '2018-08-16T16:44:10.471213+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8EncryptedPrivateKeyInfo,				#isMetaSide : false			},			#name : #'encryptedData:',			#protocol : #accessing,			#sourceCode : 'encryptedData: anObject\r\t"Set the value of encryptedData"\r\r\tencryptedData := anObject',			#stamp : 'rww 3/29/2007 15:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '704' ],		#self : OmReference [ '705' ],		#time : DateAndTime [ '2018-08-16T16:44:10.472277+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8EncryptedPrivateKeyInfo,				#isMetaSide : false			},			#name : #encryptionAlgorithm,			#protocol : #accessing,			#sourceCode : 'encryptionAlgorithm\r\t"Answer the value of encryptionAlgorithm"\r\r\t^ encryptionAlgorithm',			#stamp : 'rww 3/29/2007 15:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '705' ],		#self : OmReference [ '706' ],		#time : DateAndTime [ '2018-08-16T16:44:10.473282+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8EncryptedPrivateKeyInfo,				#isMetaSide : false			},			#name : #'encryptionAlgorithm:',			#protocol : #accessing,			#sourceCode : 'encryptionAlgorithm: anObject\r\t"Set the value of encryptionAlgorithm"\r\r\tencryptionAlgorithm := anObject',			#stamp : 'rww 3/29/2007 15:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '706' ],		#self : OmReference [ '707' ],		#time : DateAndTime [ '2018-08-16T16:44:10.474721+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8PrivateKeyInfo,				#isMetaSide : false			},			#name : #asPrivateKey,			#protocol : #api,			#sourceCode : 'asPrivateKey\r\r\t| asn1 |\r\tasn1 := ASN1Stream decodeBytes: self privateKey.\r\t(asn1 at: 1) > 0\r\t\tifTrue: [^ RSAPublicKey exponent: (asn1 at: 3) modulo: (asn1 at: 1)]\r\t\tifFalse: [^ RSAPrivateKey \r\t\t\tp: (asn1 at: 5) \r\t\t\tq: (asn1 at: 6) \r\t\t\tdP: (asn1 at: 7) \r\t\t\tdQ: (asn1 at: 8) \r\t\t\tqInv: (asn1 at: 9)]',			#stamp : 'rww 9/28/2010 07:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '707' ],		#self : OmReference [ '708' ],		#time : DateAndTime [ '2018-08-16T16:44:10.475625+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8PrivateKeyInfo,				#isMetaSide : false			},			#name : #attributes,			#protocol : #accessing,			#sourceCode : 'attributes\r\t"Answer the value of attributes"\r\r\t^ attributes',			#stamp : 'rww 3/29/2007 15:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '708' ],		#self : OmReference [ '709' ],		#time : DateAndTime [ '2018-08-16T16:44:10.476811+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8PrivateKeyInfo,				#isMetaSide : false			},			#name : #'attributes:',			#protocol : #accessing,			#sourceCode : 'attributes: anObject\r\t"Set the value of attributes"\r\r\tattributes := anObject',			#stamp : 'rww 3/29/2007 15:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '709' ],		#self : OmReference [ '710' ],		#time : DateAndTime [ '2018-08-16T16:44:10.477851+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8PrivateKeyInfo,				#isMetaSide : false			},			#name : #privateKey,			#protocol : #accessing,			#sourceCode : 'privateKey\r\t"Answer the value of privateKey"\r\r\t^ privateKey',			#stamp : 'rww 3/29/2007 15:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '710' ],		#self : OmReference [ '711' ],		#time : DateAndTime [ '2018-08-16T16:44:10.478895+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8PrivateKeyInfo,				#isMetaSide : false			},			#name : #'privateKey:',			#protocol : #accessing,			#sourceCode : 'privateKey: anObject\r\t"Set the value of privateKey"\r\r\tprivateKey := anObject',			#stamp : 'rww 3/29/2007 15:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '711' ],		#self : OmReference [ '712' ],		#time : DateAndTime [ '2018-08-16T16:44:10.479918+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8PrivateKeyInfo,				#isMetaSide : false			},			#name : #privateKeyAlgorithm,			#protocol : #accessing,			#sourceCode : 'privateKeyAlgorithm\r\t"Answer the value of privateKeyAlgorithm"\r\r\t^ privateKeyAlgorithm',			#stamp : 'rww 3/29/2007 15:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '712' ],		#self : OmReference [ '713' ],		#time : DateAndTime [ '2018-08-16T16:44:10.480921+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8PrivateKeyInfo,				#isMetaSide : false			},			#name : #'privateKeyAlgorithm:',			#protocol : #accessing,			#sourceCode : 'privateKeyAlgorithm: anObject\r\t"Set the value of privateKeyAlgorithm"\r\r\tprivateKeyAlgorithm := anObject',			#stamp : 'rww 3/29/2007 15:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '713' ],		#self : OmReference [ '714' ],		#time : DateAndTime [ '2018-08-16T16:44:10.482237+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8PrivateKeyInfo,				#isMetaSide : false			},			#name : #version,			#protocol : #accessing,			#sourceCode : 'version\r\t"Answer the value of version"\r\r\t^ version',			#stamp : 'rww 3/29/2007 15:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '714' ],		#self : OmReference [ '715' ],		#time : DateAndTime [ '2018-08-16T16:44:10.483268+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pkcs8PrivateKeyInfo,				#isMetaSide : false			},			#name : #'version:',			#protocol : #accessing,			#sourceCode : 'version: anObject\r\t"Set the value of version"\r\r\tversion := anObject',			#stamp : 'rww 3/29/2007 15:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '715' ],		#self : OmReference [ '716' ],		#time : DateAndTime [ '2018-08-16T16:44:10.484317+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsContentInfo,				#isMetaSide : false			},			#name : #content,			#protocol : #accessing,			#sourceCode : 'content\r\t"Answer the value of content"\r\r\t^ content',			#stamp : 'rww 3/29/2007 11:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '716' ],		#self : OmReference [ '717' ],		#time : DateAndTime [ '2018-08-16T16:44:10.485161+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsContentInfo,				#isMetaSide : false			},			#name : #'content:',			#protocol : #accessing,			#sourceCode : 'content: anObject\r\t"Set the value of content"\r\r\tcontent := anObject',			#stamp : 'rww 3/29/2007 11:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '717' ],		#self : OmReference [ '718' ],		#time : DateAndTime [ '2018-08-16T16:44:10.486179+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsContentInfo,				#isMetaSide : false			},			#name : #contentType,			#protocol : #accessing,			#sourceCode : 'contentType\r\t"Answer the value of contentType"\r\r\t^ contentType',			#stamp : 'rww 3/29/2007 12:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '718' ],		#self : OmReference [ '719' ],		#time : DateAndTime [ '2018-08-16T16:44:10.487227+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsContentInfo,				#isMetaSide : false			},			#name : #'contentType:',			#protocol : #accessing,			#sourceCode : 'contentType: anObject\r\t"Set the value of contentType"\r\r\tcontentType := anObject',			#stamp : 'rww 3/29/2007 12:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '719' ],		#self : OmReference [ '720' ],		#time : DateAndTime [ '2018-08-16T16:44:10.488283+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsDigestInfo,				#isMetaSide : false			},			#name : #digest,			#protocol : #accessing,			#sourceCode : 'digest\r\t"Answer the value of digest"\r\r\t^ digest',			#stamp : 'rww 3/29/2007 11:58',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '720' ],		#self : OmReference [ '721' ],		#time : DateAndTime [ '2018-08-16T16:44:10.489463+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsDigestInfo,				#isMetaSide : false			},			#name : #'digest:',			#protocol : #accessing,			#sourceCode : 'digest: anObject\r\t"Set the value of digest"\r\r\tdigest := anObject',			#stamp : 'rww 3/29/2007 11:58',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '721' ],		#self : OmReference [ '722' ],		#time : DateAndTime [ '2018-08-16T16:44:10.490502+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsDigestInfo,				#isMetaSide : false			},			#name : #digestAlgorithm,			#protocol : #accessing,			#sourceCode : 'digestAlgorithm\r\t"Answer the value of digestAlgorithm"\r\r\t^ digestAlgorithm',			#stamp : 'rww 3/29/2007 11:58',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '722' ],		#self : OmReference [ '723' ],		#time : DateAndTime [ '2018-08-16T16:44:10.491519+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsDigestInfo,				#isMetaSide : false			},			#name : #'digestAlgorithm:',			#protocol : #accessing,			#sourceCode : 'digestAlgorithm: anObject\r\t"Set the value of digestAlgorithm"\r\r\tdigestAlgorithm := anObject',			#stamp : 'rww 3/29/2007 11:58',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '723' ],		#self : OmReference [ '724' ],		#time : DateAndTime [ '2018-08-16T16:44:10.492757+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedContentInfo,				#isMetaSide : false			},			#name : #'cipherWithPassword:',			#protocol : #api,			#sourceCode : 'cipherWithPassword: password\r\r\t| salt iterations keyMaterial ivMaterial cipher |\r\tsalt := self contentEncryptionAlgorithm parameters first.\r\titerations := self contentEncryptionAlgorithm parameters last.\r\r\tself contentEncryptionAlgorithm oid oid = \'1.2.840.113549.1.12.1.1\'\r\t\tifTrue: [\r\t\t\tkeyMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 1 \r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 16.\r\t\t\tcipher := ARC4 new key: keyMaterial.\r\t\t\t^ cipher].\r\tself contentEncryptionAlgorithm oid oid = \'1.2.840.113549.1.12.1.2\'\r\t\tifTrue: [\r\t\t\tkeyMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 1 \r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 5.\r\t\t\tcipher := ARC4 new key: keyMaterial.\r\t\t\t^ cipher].\r\tself contentEncryptionAlgorithm oid oid = \'1.2.840.113549.1.12.1.3\'\r\t\tifTrue: [\r\t\t\tkeyMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 1 \r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 24.\r\t\t\tivMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 2\r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 8.\r\t\t\tcipher := TripleDES new key: keyMaterial.\r\t\t\tcipher := cipher cbc initialVector: ivMaterial.\r\t\t\t^ cipher].\r\tself contentEncryptionAlgorithm oid oid = \'1.2.840.113549.1.12.1.5\'\r\t\tifTrue: [\r\t\t\tkeyMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 1 \r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 16.\r\t\t\tivMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 2\r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 8.\r\t\t\tcipher := ARC2 key: keyMaterial effectiveKeyLength: 128.\r\t\t\tcipher := cipher cbc initialVector: ivMaterial.\r\t\t\t^ cipher].\r\tself contentEncryptionAlgorithm oid oid = \'1.2.840.113549.1.12.1.6\'\r\t\tifTrue: [\r\t\t\tkeyMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 1 \r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 5.\r\t\t\tivMaterial := Pkcs12KeyDerivationFunction new\r\t\t\t\tderivedKeyWithId: 2\r\t\t\t\tfromPassword: password\r\t\t\t\tsalt: salt\r\t\t\t\titerations: iterations\r\t\t\t\tsize: 8.\r\t\t\tcipher := ARC2 key: keyMaterial effectiveKeyLength: 40.\r\t\t\tcipher := cipher cbc initialVector: ivMaterial.\r\t\t\t^ cipher].\r\t^ nil',			#stamp : 'rww 4/10/2007 18:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '724' ],		#self : OmReference [ '725' ],		#time : DateAndTime [ '2018-08-16T16:44:10.493699+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedContentInfo,				#isMetaSide : false			},			#name : #contentEncryptionAlgorithm,			#protocol : #accessing,			#sourceCode : 'contentEncryptionAlgorithm\r\t"Answer the value of contentEncryptionAlgorithm"\r\r\t^ contentEncryptionAlgorithm',			#stamp : 'rww 3/29/2007 14:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '725' ],		#self : OmReference [ '726' ],		#time : DateAndTime [ '2018-08-16T16:44:10.494734+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedContentInfo,				#isMetaSide : false			},			#name : #'contentEncryptionAlgorithm:',			#protocol : #accessing,			#sourceCode : 'contentEncryptionAlgorithm: anObject\r\t"Set the value of contentEncryptionAlgorithm"\r\r\tcontentEncryptionAlgorithm := anObject',			#stamp : 'rww 3/29/2007 14:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '726' ],		#self : OmReference [ '727' ],		#time : DateAndTime [ '2018-08-16T16:44:10.495742+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedContentInfo,				#isMetaSide : false			},			#name : #contentType,			#protocol : #accessing,			#sourceCode : 'contentType\r\t"Answer the value of contentType"\r\r\t^ contentType',			#stamp : 'rww 3/29/2007 14:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '727' ],		#self : OmReference [ '728' ],		#time : DateAndTime [ '2018-08-16T16:44:10.4972+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedContentInfo,				#isMetaSide : false			},			#name : #'contentType:',			#protocol : #accessing,			#sourceCode : 'contentType: anObject\r\t"Set the value of contentType"\r\r\tcontentType := anObject',			#stamp : 'rww 3/29/2007 14:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '728' ],		#self : OmReference [ '729' ],		#time : DateAndTime [ '2018-08-16T16:44:10.498291+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedContentInfo,				#isMetaSide : false			},			#name : #'decryptWithPassword:',			#protocol : #api,			#sourceCode : 'decryptWithPassword: password\r\r\t| cipher asn1 |\r\tcipher := self cipherWithPassword: password.\r\tasn1 := cipher decrypt: self encryptedContent.\r\t^ ASN1Stream \r\t\tdecodeBytes: asn1\r\t\twithType: ((ASN1Module name: #pkcs) find: #SafeContents).\r',			#stamp : 'rww 4/13/2007 22:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '729' ],		#self : OmReference [ '730' ],		#time : DateAndTime [ '2018-08-16T16:44:10.499345+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedContentInfo,				#isMetaSide : false			},			#name : #encryptedContent,			#protocol : #accessing,			#sourceCode : 'encryptedContent\r\t"Answer the value of encryptedContent"\r\r\t^ encryptedContent',			#stamp : 'rww 3/29/2007 14:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '730' ],		#self : OmReference [ '731' ],		#time : DateAndTime [ '2018-08-16T16:44:10.500378+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedContentInfo,				#isMetaSide : false			},			#name : #'encryptedContent:',			#protocol : #accessing,			#sourceCode : 'encryptedContent: anObject\r\t"Set the value of encryptedContent"\r\r\tencryptedContent := anObject',			#stamp : 'rww 3/29/2007 14:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '731' ],		#self : OmReference [ '732' ],		#time : DateAndTime [ '2018-08-16T16:44:10.501448+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedData,				#isMetaSide : false			},			#name : #'decryptWithPassword:',			#protocol : #decrypting,			#sourceCode : 'decryptWithPassword: password\r\r\t^ self encryptedContentInfo decryptWithPassword: password.\r',			#stamp : 'rww 4/8/2007 18:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '732' ],		#self : OmReference [ '733' ],		#time : DateAndTime [ '2018-08-16T16:44:10.50234+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedData,				#isMetaSide : false			},			#name : #encryptedContentInfo,			#protocol : #accessing,			#sourceCode : 'encryptedContentInfo\r\t"Answer the value of encryptedContentInfo"\r\r\t^ encryptedContentInfo',			#stamp : 'rww 3/29/2007 13:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '733' ],		#self : OmReference [ '734' ],		#time : DateAndTime [ '2018-08-16T16:44:10.503374+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedData,				#isMetaSide : false			},			#name : #'encryptedContentInfo:',			#protocol : #accessing,			#sourceCode : 'encryptedContentInfo: anObject\r\t"Set the value of encryptedContentInfo"\r\r\tencryptedContentInfo := anObject',			#stamp : 'rww 3/29/2007 13:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '734' ],		#self : OmReference [ '735' ],		#time : DateAndTime [ '2018-08-16T16:44:10.504681+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedData,				#isMetaSide : false			},			#name : #version,			#protocol : #accessing,			#sourceCode : 'version\r\t"Answer the value of version"\r\r\t^ version',			#stamp : 'rww 3/29/2007 13:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '735' ],		#self : OmReference [ '736' ],		#time : DateAndTime [ '2018-08-16T16:44:10.505753+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PkcsEncryptedData,				#isMetaSide : false			},			#name : #'version:',			#protocol : #accessing,			#sourceCode : 'version: anObject\r\t"Set the value of version"\r\r\tversion := anObject',			#stamp : 'rww 3/29/2007 13:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '736' ],		#self : OmReference [ '737' ],		#time : DateAndTime [ '2018-08-16T16:44:10.506824+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'RSAPrivateKeyFileReader class',				#isMetaSide : true			},			#name : #'fromFile:',			#protocol : #'instance creation',			#sourceCode : 'fromFile: filename\r\t"(RSAPrivateKeyFileReader fromFile: \'/usr/local/ssl/private/CA.key\')"\r\t"(RSAPrivateKeyFileReader fromFile: \'/Users/slosher/Desktop/squeak/certificates/rsa.key\')"\r\r\t| fs data |\r\tfs := StandardFileStream fileNamed: filename.\r\tdata := fs contentsOfEntireFile.\r\t^ self new initializeFromFileContents: data.\r',			#stamp : 'rww 9/28/2006 10:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '737' ],		#self : OmReference [ '738' ],		#time : DateAndTime [ '2018-08-16T16:44:10.507761+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #asASN1Value,			#protocol : #converting,			#sourceCode : 'asASN1Value\r\r\tself decryptedBytes isNil \r\t\tifTrue: [self decrypt].\r\t^ ASN1Stream decodeBytes: self decryptedBytes.\r',			#stamp : 'rww 3/28/2007 11:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '738' ],		#self : OmReference [ '739' ],		#time : DateAndTime [ '2018-08-16T16:44:10.508671+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #asPrivateKey,			#protocol : #converting,			#sourceCode : 'asPrivateKey\r\r\t| asn1 |\r\tasn1 := self asASN1Value.\r\t(asn1 at: 1) > 0\r\t\tifTrue: [^ RSAPublicKey exponent: (asn1 at: 3) modulo: (asn1 at: 1)].\r\t^ RSAPrivateKey p: (asn1 at: 5) q: (asn1 at: 6) dP: (asn1 at: 7) dQ: (asn1 at: 8) qInv: (asn1 at: 9)',			#stamp : 'rww 9/28/2010 07:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '739' ],		#self : OmReference [ '740' ],		#time : DateAndTime [ '2018-08-16T16:44:10.509726+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #asPublicKey,			#protocol : #converting,			#sourceCode : 'asPublicKey\r\r\t| asn1 |\r\tasn1 := self asASN1Value.\r\t^ RSAPublicKey exponent: (asn1 at: 3) modulo: (asn1 at: 2)',			#stamp : 'rww 9/28/2010 07:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '740' ],		#self : OmReference [ '741' ],		#time : DateAndTime [ '2018-08-16T16:44:10.510753+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #bytes,			#protocol : #accessing,			#sourceCode : 'bytes\r\t"Answer the value of bytes"\r\r\t^ bytes',			#stamp : 'rww 9/26/2006 13:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '741' ],		#self : OmReference [ '742' ],		#time : DateAndTime [ '2018-08-16T16:44:10.512067+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'bytes:',			#protocol : #accessing,			#sourceCode : 'bytes: anObject\r\t"Set the value of bytes"\r\r\tbytes := anObject',			#stamp : 'rww 9/26/2006 13:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '742' ],		#self : OmReference [ '743' ],		#time : DateAndTime [ '2018-08-16T16:44:10.513204+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #decrypt,			#protocol : #initialization,			#sourceCode : 'decrypt\r\r\t| cipher key block encryptedStream decryptedStream |\r\tself password isNil \r\t\tifTrue: [self password: (FillInTheBlank requestPassword: \'Enter your password\')].\r\tkey := OpenSSLKeyDerivationFunction new \r\t\tderivedKeyFromPassword: self password \r\t\tsalt: self iv \r\t\tsize: 24.\r\tcipher := (TripleDES key: key) cbc initialVector: iv.\r\tencryptedStream := self bytes readStream.\r\tdecryptedStream := ReadWriteStream on: (ByteArray new: encryptedStream size).\r\t[encryptedStream atEnd] whileFalse: \r\t\t[block := encryptedStream next: 8.\r\t\tcipher decryptBlock: block.\r\t\tdecryptedStream nextPutAll: block].\r\tself decryptedBytes: decryptedStream contents.\r',			#stamp : 'rww 3/30/2007 14:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '743' ],		#self : OmReference [ '744' ],		#time : DateAndTime [ '2018-08-16T16:44:10.514221+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #decryptedBytes,			#protocol : #accessing,			#sourceCode : 'decryptedBytes\r\t"Answer the value of decryptedBytes"\r\r\t^ decryptedBytes',			#stamp : 'rww 9/26/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '744' ],		#self : OmReference [ '745' ],		#time : DateAndTime [ '2018-08-16T16:44:10.515242+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'decryptedBytes:',			#protocol : #accessing,			#sourceCode : 'decryptedBytes: anObject\r\t"Set the value of decryptedBytes"\r\r\tdecryptedBytes := anObject',			#stamp : 'rww 9/26/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '745' ],		#self : OmReference [ '746' ],		#time : DateAndTime [ '2018-08-16T16:44:10.516363+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'initializeFromFileContents:',			#protocol : #initialization,			#sourceCode : 'initializeFromFileContents: data\r\r\t| i j theData |\r\ti := data indexOfSubCollection: \'--BEGIN \' startingAt: 1.\r\ti = 0 ifTrue: [self derBytes: data asByteArray. ^ self].\r\ti := data indexOfSubCollection: \'KEY--\' startingAt: i.\r\ti := data findAnySubStr: String crlf startingAt: i.\r\tj := data findAnySubStr: String crlf startingAt: i + 1.\r\tself processProcType: (data copyFrom: i + 1 to: j).\r\ti := j.\r\tj := data findAnySubStr: String crlf startingAt: i + 1.\r\tself processDEKInfo: (data copyFrom: i + 1 to: j).\r\ti := j.\r\tj := data indexOfSubCollection: \'--END \' startingAt: i.\r\ttheData := (data copyFrom: i to: j)\r\t\treject: [:c | (c = $-) or: [c isSeparator]].\r\ttheData := (Base64MimeConverter mimeDecodeToBytes: theData readStream) contents.\r\tself bytes: theData.\r',			#stamp : 'rww 9/27/2006 18:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '746' ],		#self : OmReference [ '747' ],		#time : DateAndTime [ '2018-08-16T16:44:10.51747+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #iv,			#protocol : #accessing,			#sourceCode : 'iv\r\t"Answer the value of iv"\r\r\t^ iv',			#stamp : 'rww 9/26/2006 15:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '747' ],		#self : OmReference [ '748' ],		#time : DateAndTime [ '2018-08-16T16:44:10.518858+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'iv:',			#protocol : #accessing,			#sourceCode : 'iv: anObject\r\t"Set the value of iv"\r\r\tiv := anObject',			#stamp : 'rww 9/26/2006 15:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '748' ],		#self : OmReference [ '749' ],		#time : DateAndTime [ '2018-08-16T16:44:10.52007+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #password,			#protocol : #accessing,			#sourceCode : 'password\r\t"Answer the value of password"\r\r\t^ password',			#stamp : 'rww 9/27/2006 18:40',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '749' ],		#self : OmReference [ '750' ],		#time : DateAndTime [ '2018-08-16T16:44:10.52116+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'password:',			#protocol : #accessing,			#sourceCode : 'password: anObject\r\t"Set the value of password"\r\r\tpassword := anObject',			#stamp : 'rww 9/27/2006 18:40',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '750' ],		#self : OmReference [ '751' ],		#time : DateAndTime [ '2018-08-16T16:44:10.522341+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'processDEKInfo:',			#protocol : #initialization,			#sourceCode : 'processDEKInfo: data\r\r\t| stream algorithm |\r\tstream := data readStream.\r\tstream upTo: $:.\r\talgorithm := (stream upTo: $,) withBlanksTrimmed.\r\tself iv: (Integer readFrom: stream base: 16) asByteArray.\r',			#stamp : 'rww 9/26/2006 15:53',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '751' ],		#self : OmReference [ '752' ],		#time : DateAndTime [ '2018-08-16T16:44:10.523409+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPrivateKeyFileReader,				#isMetaSide : false			},			#name : #'processProcType:',			#protocol : #initialization,			#sourceCode : 'processProcType: data\r',			#stamp : 'rww 9/26/2006 13:23',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '752' ],		#self : OmReference [ '753' ],		#time : DateAndTime [ '2018-08-16T16:44:10.524519+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'RSAPublicKeyFileReader class',				#isMetaSide : true			},			#name : #'fromFile:',			#protocol : #'instance creation',			#sourceCode : 'fromFile: filename\r\t"(RSAPrivateKeyFileReader fromFile: \'/usr/local/ssl/private/CA.key\')"\r\t"(RSAPrivateKeyFileReader fromFile: \'/Users/slosher/Desktop/squeak/certificates/rsa.key\')"\r\r\t| fs data |\r\tfs := StandardFileStream fileNamed: filename.\r\tdata := fs contentsOfEntireFile.\r\t^ self new initializeFromFileContents: data.\r',			#stamp : 'rww 9/23/2010 03:45',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '753' ],		#self : OmReference [ '754' ],		#time : DateAndTime [ '2018-08-16T16:44:10.525507+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPublicKeyFileReader,				#isMetaSide : false			},			#name : #asASN1Value,			#protocol : #converting,			#sourceCode : 'asASN1Value\r\r\t| asn1 |\r\tasn1 := ASN1Stream decodeBytes: self bytes.\r\t^ ASN1Stream decodeBytes: (asn1 at: 2) bytes',			#stamp : 'rww 9/23/2010 03:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '754' ],		#self : OmReference [ '755' ],		#time : DateAndTime [ '2018-08-16T16:44:10.526769+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPublicKeyFileReader,				#isMetaSide : false			},			#name : #asPublicKey,			#protocol : #converting,			#sourceCode : 'asPublicKey\r\r\t| asn1 |\r\tasn1 := self asASN1Value.\r\t^ RSAPublicKey exponent: (asn1 at: 2) modulo: (asn1 at: 1)',			#stamp : 'rww 9/28/2010 07:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '755' ],		#self : OmReference [ '756' ],		#time : DateAndTime [ '2018-08-16T16:44:10.527839+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPublicKeyFileReader,				#isMetaSide : false			},			#name : #bytes,			#protocol : #accessing,			#sourceCode : 'bytes\r\t"Answer the value of bytes"\r\r\t^ bytes',			#stamp : 'rww 9/23/2010 03:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '756' ],		#self : OmReference [ '757' ],		#time : DateAndTime [ '2018-08-16T16:44:10.528888+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPublicKeyFileReader,				#isMetaSide : false			},			#name : #'bytes:',			#protocol : #accessing,			#sourceCode : 'bytes: anObject\r\t"Set the value of bytes"\r\r\tbytes := anObject',			#stamp : 'rww 9/23/2010 03:46',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '757' ],		#self : OmReference [ '758' ],		#time : DateAndTime [ '2018-08-16T16:44:10.530059+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RSAPublicKeyFileReader,				#isMetaSide : false			},			#name : #'initializeFromFileContents:',			#protocol : #initialize-release,			#sourceCode : 'initializeFromFileContents: data\r\r\t| i j theData |\r\ti := data indexOfSubCollection: \'--BEGIN \' startingAt: 1.\r\ti = 0 ifTrue: [self derBytes: data asByteArray. ^ self].\r\ti := data indexOfSubCollection: \'KEY--\' startingAt: i.\r\ti := data findAnySubStr: String crlf startingAt: i.\r\tj := data findAnySubStr: String crlf startingAt: i + 1.\r"\tself processProcType: (data copyFrom: i + 1 to: j)."\r\ti := j.\r\tj := data findAnySubStr: String crlf startingAt: i + 1.\r"\tself processDEKInfo: (data copyFrom: i + 1 to: j)."\r\ti := j.\r\tj := data indexOfSubCollection: \'--END \' startingAt: i.\r\ttheData := (data copyFrom: i to: j)\r\t\treject: [:c | (c = $-) or: [c isSeparator]].\r\ttheData := (Base64MimeConverter mimeDecodeToBytes: theData readStream) contents.\r\tself bytes: theData.\r',			#stamp : 'rww 9/23/2010 03:48',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '758' ],		#self : OmReference [ '759' ],		#time : DateAndTime [ '2018-08-16T16:44:10.531115+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AccessDescription,				#isMetaSide : false			},			#name : #accessLocation,			#protocol : #accessing,			#sourceCode : 'accessLocation\r\t"Answer the value of accessLocation"\r\r\t^ accessLocation',			#stamp : 'rww 3/28/2007 21:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '759' ],		#self : OmReference [ '760' ],		#time : DateAndTime [ '2018-08-16T16:44:10.532023+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AccessDescription,				#isMetaSide : false			},			#name : #'accessLocation:',			#protocol : #accessing,			#sourceCode : 'accessLocation: anObject\r\t"Set the value of accessLocation"\r\r\taccessLocation := anObject',			#stamp : 'rww 3/28/2007 21:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '760' ],		#self : OmReference [ '761' ],		#time : DateAndTime [ '2018-08-16T16:44:10.533078+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AccessDescription,				#isMetaSide : false			},			#name : #accessMethod,			#protocol : #accessing,			#sourceCode : 'accessMethod\r\t"Answer the value of accessMethod"\r\r\t^ accessMethod',			#stamp : 'rww 3/28/2007 21:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '761' ],		#self : OmReference [ '762' ],		#time : DateAndTime [ '2018-08-16T16:44:10.534496+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AccessDescription,				#isMetaSide : false			},			#name : #'accessMethod:',			#protocol : #accessing,			#sourceCode : 'accessMethod: anObject\r\t"Set the value of accessMethod"\r\r\taccessMethod := anObject',			#stamp : 'rww 3/28/2007 21:10',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '762' ],		#self : OmReference [ '763' ],		#time : DateAndTime [ '2018-08-16T16:44:10.535915+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509AlgorithmIdentifier class',				#isMetaSide : true			},			#name : #'oid:',			#protocol : #'instance creation',			#sourceCode : 'oid: oid\r\r\t^ self new\r\t\toid: oid;\r\t\tyourself',			#stamp : 'rww 4/27/2007 14:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '763' ],		#self : OmReference [ '764' ],		#time : DateAndTime [ '2018-08-16T16:44:10.53714+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509AlgorithmIdentifier class',				#isMetaSide : true			},			#name : #'oid:parameters:',			#protocol : #'instance creation',			#sourceCode : 'oid: oid parameters: params\r\r\t^ self new\r\t\toid: oid;\r\t\tparameters: params;\r\t\tyourself',			#stamp : 'rww 4/20/2007 09:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '764' ],		#self : OmReference [ '765' ],		#time : DateAndTime [ '2018-08-16T16:44:10.538461+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509AlgorithmIdentifier class',				#isMetaSide : true			},			#name : #'oidString:',			#protocol : #'instance creation',			#sourceCode : 'oidString: oidString\r\r\t^ self oid: (ASN1ObjectId fromString: oidString).\r',			#stamp : 'rww 4/27/2007 14:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '765' ],		#self : OmReference [ '766' ],		#time : DateAndTime [ '2018-08-16T16:44:10.539754+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509AlgorithmIdentifier class',				#isMetaSide : true			},			#name : #'oidString:parameters:',			#protocol : #'instance creation',			#sourceCode : 'oidString: oidString parameters: params\r\r\t^ self oid: (ASN1ObjectId fromString: oidString) parameters: params.\r',			#stamp : 'rww 4/20/2007 09:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '766' ],		#self : OmReference [ '767' ],		#time : DateAndTime [ '2018-08-16T16:44:10.541028+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AlgorithmIdentifier,				#isMetaSide : false			},			#name : #hasParameters,			#protocol : #accessing,			#sourceCode : 'hasParameters\r\t"Answer the value of hasParameters"\r\r\t^ hasParameters',			#stamp : 'rww 1/28/2007 13:49',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '767' ],		#self : OmReference [ '768' ],		#time : DateAndTime [ '2018-08-16T16:44:10.542049+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AlgorithmIdentifier,				#isMetaSide : false			},			#name : #'hasParameters:',			#protocol : #accessing,			#sourceCode : 'hasParameters: anObject\r\t"Set the value of hasParameters"\r\r\thasParameters := anObject',			#stamp : 'rww 1/28/2007 13:49',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '768' ],		#self : OmReference [ '769' ],		#time : DateAndTime [ '2018-08-16T16:44:10.543663+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AlgorithmIdentifier,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\r\tself hasParameters: false.',			#stamp : 'rww 3/23/2007 22:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '769' ],		#self : OmReference [ '770' ],		#time : DateAndTime [ '2018-08-16T16:44:10.544871+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AlgorithmIdentifier,				#isMetaSide : false			},			#name : #isDSA,			#protocol : #testing,			#sourceCode : 'isDSA\r\r\t^ self oid oid = \'1.2.840.10040.4.1\'\r',			#stamp : 'rww 3/27/2007 21:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '770' ],		#self : OmReference [ '771' ],		#time : DateAndTime [ '2018-08-16T16:44:10.545994+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AlgorithmIdentifier,				#isMetaSide : false			},			#name : #isRSA,			#protocol : #testing,			#sourceCode : 'isRSA\r\r\t^ self oid oid = \'1.2.840.113549.1.1.1\'\r',			#stamp : 'rww 3/27/2007 21:13',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '771' ],		#self : OmReference [ '772' ],		#time : DateAndTime [ '2018-08-16T16:44:10.547172+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AlgorithmIdentifier,				#isMetaSide : false			},			#name : #isTripleDESCBC,			#protocol : #testing,			#sourceCode : 'isTripleDESCBC\r\r\t^ self oid oid = \'1.2.840.113549.3.7\'\r',			#stamp : 'rww 4/20/2007 09:42',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '772' ],		#self : OmReference [ '773' ],		#time : DateAndTime [ '2018-08-16T16:44:10.548279+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AlgorithmIdentifier,				#isMetaSide : false			},			#name : #oid,			#protocol : #accessing,			#sourceCode : 'oid\r\t"Answer the value of oid"\r\r\t^ oid',			#stamp : 'rww 9/15/2006 11:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '773' ],		#self : OmReference [ '774' ],		#time : DateAndTime [ '2018-08-16T16:44:10.549378+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AlgorithmIdentifier,				#isMetaSide : false			},			#name : #'oid:',			#protocol : #accessing,			#sourceCode : 'oid: anObject\r\t"Set the value of oid"\r\r\toid := anObject',			#stamp : 'rww 9/15/2006 11:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '774' ],		#self : OmReference [ '775' ],		#time : DateAndTime [ '2018-08-16T16:44:10.550415+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AlgorithmIdentifier,				#isMetaSide : false			},			#name : #parameters,			#protocol : #accessing,			#sourceCode : 'parameters\r\t"Answer the value of parameters"\r\r\t^ parameters',			#stamp : 'rww 9/15/2006 13:58',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '775' ],		#self : OmReference [ '776' ],		#time : DateAndTime [ '2018-08-16T16:44:10.551859+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AlgorithmIdentifier,				#isMetaSide : false			},			#name : #'parameters:',			#protocol : #accessing,			#sourceCode : 'parameters: anObject\r\t"Set the value of parameters"\r\r\tself hasParameters: true.\r\tparameters := anObject',			#stamp : 'rww 3/23/2007 22:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '776' ],		#self : OmReference [ '777' ],		#time : DateAndTime [ '2018-08-16T16:44:10.552969+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AlgorithmIdentifier,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: stream\r\r\tsuper printOn: stream.\r\tstream nextPutAll: \'(\'.\r\tstream nextPutAll: self oid asString.\r\tstream nextPutAll: \')\'.\r',			#stamp : 'rww 4/28/2007 11:41',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '777' ],		#self : OmReference [ '778' ],		#time : DateAndTime [ '2018-08-16T16:44:10.554048+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AnotherName,				#isMetaSide : false			},			#name : #typeId,			#protocol : #accessing,			#sourceCode : 'typeId\r\t"Answer the value of typeId"\r\r\t^ typeId',			#stamp : 'rww 3/28/2007 16:53',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '778' ],		#self : OmReference [ '779' ],		#time : DateAndTime [ '2018-08-16T16:44:10.554957+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AnotherName,				#isMetaSide : false			},			#name : #'typeId:',			#protocol : #accessing,			#sourceCode : 'typeId: anObject\r\t"Set the value of typeId"\r\r\ttypeId := anObject',			#stamp : 'rww 3/28/2007 16:53',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '779' ],		#self : OmReference [ '780' ],		#time : DateAndTime [ '2018-08-16T16:44:10.556032+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AnotherName,				#isMetaSide : false			},			#name : #value,			#protocol : #accessing,			#sourceCode : 'value\r\r\t^ value',			#stamp : 'rww 3/28/2007 16:53',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '780' ],		#self : OmReference [ '781' ],		#time : DateAndTime [ '2018-08-16T16:44:10.557046+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AnotherName,				#isMetaSide : false			},			#name : #'value:',			#protocol : #accessing,			#sourceCode : 'value: anObject\r\t"Set the value of value"\r\r\tvalue := anObject',			#stamp : 'rww 3/28/2007 16:53',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '781' ],		#self : OmReference [ '782' ],		#time : DateAndTime [ '2018-08-16T16:44:10.558645+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509AuthorityKeyIdentifier class',				#isMetaSide : true			},			#name : #initializeASN1Types,			#protocol : #'as yet unclassified',			#sourceCode : 'initializeASN1Types\r\r\t((ASN1Module name: #x509) sequence: #Certificate mapping: X509Certificate)\r\t\tadd: #tbsCertificate type: #TBSCertificate;\r\t\tadd: #signatureAlgorithm type: #AlgorithmIdentifier;\r\t\tadd: #signature type: #ASN1BitStringType;\r\t\tyourself.\r\t(ASN1Module name: #x509) find: #Certificate.\r\r\t((ASN1Module name: #x509) sequence: #TBSCertificate mapping: X509TBSCertificate)\r\t\tadd: #version type: #Version explicitTag: 0 default: 0;\r\t\tadd: #serialNumber type: #CertificateSerialNumber;\r\t\tadd: #signature type: #AlgorithmIdentifier;\r\t\tadd: #issuer type: #Name;\r\t\tadd: #validity type: #Validity;\r\t\tadd: #subject type: #Name;\r\t\tadd: #subjectPublicKeyInfo type: #SubjectPublicKeyInfo;\r\t\taddOptional: #issuerUniqueID type: #UniqueIdentifier implicitTag: 1;\r\t\taddOptional: #subjectUniqueID type: #UniqueIdentifier implicitTag: 2;\r\t\taddOptional: #extensions type: #Extensions explicitTag: 3;\r\t\tyourself.\r\r\t((ASN1Module name: #x509) sequence: #AlgorithmIdentifier mapping: X509AlgorithmIdentifier)\r\t\tadd: #oid type: #ASN1ObjectIdentifierType;\r\t\taddOptional: #parameters type: #ASN1AnyType;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) integer: #Version.\r\t(ASN1Module name: #x509) integer: #CertificateSerialNumber.\r\t(ASN1Module name: #x509) bitString: #UniqueIdentifier.\r\t(ASN1Module name: #x509) sequence: #Extensions of: #Extension.\r\r\t((ASN1Module name: #x509) sequence: #Validity mapping: X509Validity)\r\t\tadd: #notBefore type: #Time;\r\t\tadd: #notAfter type: #Time;\r\t\tyourself.\r\t(ASN1Module name: #x509) utcTime: #Time.\r\r\t((ASN1Module name: #x509) sequence: #AttributeTypeAndValue mapping: X520Attribute)\r\t\tadd: #attrOid type: #AttributeType;\r\t\tadd: #attrValue type: #AttributeValue;\r\t\tyourself.\r\t(ASN1Module name: #x509) objectIdentifier: #AttributeType.\r\t((ASN1Module name: #x509) any: #AttributeValue definedBy: #attrOid)\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.41\') put: #X520Name;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.4\') put: #X520Name;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.42\') put: #X520Name;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.43\') put: #X520Name;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.44\') put: #X520Name;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.3\') put: #X520CommonName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.7\') put: #X520LocalityName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.8\') put: #X520StateOrProvinceName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.10\') put: #X520OrganizationName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.11\') put: #X520OrganizationalUnitName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.6\') put: #X520CountryName;\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.9.1\') put: #X520Pkcs9EmailAddress;\r\t\tdefaultType: #ASN1StringType;\r\t\tyourself.\r\t((ASN1Module name: #x509) choice: #X509StringChoice)\r\t\tadd: #teletexString type: #ASN1TeletexStringType;\r\t\tadd: #printableString type: #ASN1PrintableStringType;\r\t\tadd: #universalString type: #ASN1UniversalStringType;\r\t\tadd: #utf8String type: #ASN1StringType;\r\t\tadd: #bmpString type: #ASN1BMPStringType;\r\t\tyourself.\r\t((ASN1Module name: #x509) mapped: #X520Name)\r\t\tmapping: X520Name mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520CommonName)\r\t\tmapping: X520CommonName mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520LocalityName)\r\t\tmapping: X520LocalityName mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520StateOrProvinceName)\r\t\tmapping: X520StateOrProvinceName mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520OrganizationName)\r\t\tmapping: X520OrganizationName mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520OrganizationalUnitName)\r\t\tmapping: X520OrganizationalUnitName mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520CountryName)\r\t\tmapping: X520CountryName mappingSymbol: #string type: #ASN1PrintableStringType.\r\t((ASN1Module name: #x509) mapped: #X520Pkcs9EmailAddress)\r\t\tmapping: X520Pkcs9EmailAddress mappingSymbol: #string type: #ASN1IA5StringType.\r\t\r\r\t(ASN1Module name: #x509) set: #RelativeDistinguishedName of: #AttributeTypeAndValue.\r\t(ASN1Module name: #x509) sequence: #RDNSequence of: #RelativeDistinguishedName.\r\t((ASN1Module name: #x509) choice: #Name)\r\t\tadd: #names type: #RDNSequence.\r\r\t((ASN1Module name: #x509) sequence: #Extension mapping: X509CertificateExtension)\r\t\tadd: #extnId type: #ASN1ObjectIdentifierType;\r\t\taddOptional: #extnCritical type: #ASN1BooleanType default: false;\r\t\tadd: #extnValue type: #ASN1ByteArrayType;\r\t\tyourself.\r\r\t((ASN1Module name: #x509) sequence: #SubjectPublicKeyInfo mapping: X509SubjectPublicKeyInfo)\r\t\tadd: #algorithm type: #AlgorithmIdentifier;\r\t\tadd: #subjectPublicKey type: #ASN1BitStringType;\r\t\tyourself.\r\r\t((ASN1Module name: #x509) sequence: #AuthorityKeyIdentifier mapping: X509AuthorityKeyIdentifier)\r\t\taddOptional: #keyIdentifier type: #KeyIdentifier implicitTag: 0;\r\t\taddOptional: #certIssuer type: #GeneralNames implicitTag: 0;\r\t\taddOptional: #certSerialNumber type: #CertificateSerialNumber implicitTag: 0;\r\t\tyourself.\r\r',			#stamp : 'rww 3/28/2007 16:23',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '782' ],		#self : OmReference [ '783' ],		#time : DateAndTime [ '2018-08-16T16:44:10.560013+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AuthorityKeyIdentifier,				#isMetaSide : false			},			#name : #certIssuer,			#protocol : #accessing,			#sourceCode : 'certIssuer\r\t"Answer the value of certIssuer"\r\r\t^ certIssuer',			#stamp : 'rww 3/28/2007 16:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '783' ],		#self : OmReference [ '784' ],		#time : DateAndTime [ '2018-08-16T16:44:10.56099+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AuthorityKeyIdentifier,				#isMetaSide : false			},			#name : #'certIssuer:',			#protocol : #accessing,			#sourceCode : 'certIssuer: anObject\r\t"Set the value of certIssuer"\r\r\tcertIssuer := anObject',			#stamp : 'rww 3/28/2007 16:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '784' ],		#self : OmReference [ '785' ],		#time : DateAndTime [ '2018-08-16T16:44:10.562086+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AuthorityKeyIdentifier,				#isMetaSide : false			},			#name : #certSerialNumber,			#protocol : #accessing,			#sourceCode : 'certSerialNumber\r\t"Answer the value of certSerialNumber"\r\r\t^ certSerialNumber',			#stamp : 'rww 3/28/2007 16:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '785' ],		#self : OmReference [ '786' ],		#time : DateAndTime [ '2018-08-16T16:44:10.563189+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AuthorityKeyIdentifier,				#isMetaSide : false			},			#name : #'certSerialNumber:',			#protocol : #accessing,			#sourceCode : 'certSerialNumber: anObject\r\t"Set the value of certSerialNumber"\r\r\tcertSerialNumber := anObject',			#stamp : 'rww 3/28/2007 16:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '786' ],		#self : OmReference [ '787' ],		#time : DateAndTime [ '2018-08-16T16:44:10.564258+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AuthorityKeyIdentifier,				#isMetaSide : false			},			#name : #keyIdentifier,			#protocol : #accessing,			#sourceCode : 'keyIdentifier\r\t"Answer the value of keyIdentifier"\r\r\t^ keyIdentifier',			#stamp : 'rww 3/28/2007 16:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '787' ],		#self : OmReference [ '788' ],		#time : DateAndTime [ '2018-08-16T16:44:10.565332+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509AuthorityKeyIdentifier,				#isMetaSide : false			},			#name : #'keyIdentifier:',			#protocol : #accessing,			#sourceCode : 'keyIdentifier: anObject\r\t"Set the value of keyIdentifier"\r\r\tkeyIdentifier := anObject',			#stamp : 'rww 3/28/2007 16:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '788' ],		#self : OmReference [ '789' ],		#time : DateAndTime [ '2018-08-16T16:44:10.566679+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509BasicConstraints class',				#isMetaSide : true			},			#name : #initializeASN1Types,			#protocol : #'class initialization',			#sourceCode : 'initializeASN1Types\r\r\t((ASN1Module name: #x509) sequence: #AuthorityKeyIdentifier mapping: X509AuthorityKeyIdentifier)\r\t\taddOptional: #keyIdentifier type: #KeyIdentifier implicitTag: 0;\r\t\taddOptional: #certIssuer type: #GeneralNames implicitTag: 1;\r\t\taddOptional: #certSerialNumber type: #CertificateSerialNumber implicitTag: 2;\r\t\tyourself.\r\t(ASN1Module name: #x509) byteArray: #KeyIdentifier.\r\r\t(ASN1Module name: #x509) sequence: #GeneralNames of: #GeneralName.\r\t((ASN1Module name: #x509) choice: #GeneralName)\r\t\tadd: #otherName type: #AnotherName implicitTag: 0;\r\t\tadd: #rfc822Name type: #ASN1IA5StringType implicitTag: 1;\r\t\tadd: #dNSName type: #ASN1IA5StringType implicitTag: 2;\r"\t\tadd: #x400Address type: #ORAddress implicitTag: 3;"\r\t\tadd: #directoryName type: #Name explicitTag: 4;\r\t\tadd: #ediPartyName type: #EDIPartyName implicitTag: 5;\r\t\tadd: #uniformResourceIdenifier type: #ASN1IA5StringType implicitTag: 6;\r\t\tadd: #iPAddress type: #ASN1ByteArrayType implicitTag: 7;\r\t\tadd: #registeredID type: #ASN1ObjectIdentifierType implicitTag: 8;\r\t\tyourself.\r\t((ASN1Module name: #x509) sequence: #AnotherName mapping: X509AnotherName)\r\t\tadd: #typeId type: #ASN1ObjectIdentifierType;\r\t\tadd: #value type: #ASN1AnyType explicitTag: 0;\r\t\tyourself.\r\t((ASN1Module name: #x509) sequence: #EDIPartyName mapping: X509EDIPartyName)\r\t\taddOptional: #nameAssigner type: #X509StringChoice implicitTag: 0;\r\t\tadd: #partyName type: #X509StringChoice implicitTag: 1;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) bitString: #KeyUsage.\r\r\t((ASN1Module name: #x509) sequence: #PrivateKeyUsagePeriod mapping: X509Validity)\r\t\taddOptional: #notBefore type: #ASN1UTCTimeType implicitTag: 0;\r\t\taddOptional: #notAfter type: #ASN1UTCTimeType implicitTag: 1;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) sequence: #CertificatePolicies of: #PolicyInformation.\r\t((ASN1Module name: #x509) sequence: #PolicyInformation mapping: X509PolicyInformation)\r\t\tadd: #id type: #ASN1ObjectIdentifierType;\r\t\taddOptional: #qualifiers type: #PolicyQualifierInfos;\r\t\tyourself.\r\t(ASN1Module name: #x509) sequence: #PolicyQualifierInfos of: #PolicyQualifierInfo.\r\t((ASN1Module name: #x509) sequence: #PolicyQualifierInfo mapping: X509PolicyQualifierInfo)\r\t\tadd: #id type: #ASN1ObjectIdentifierType;\r\t\tadd: #qualifier type: #ASN1AnyType;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) sequence: #PolicyMappings of: #PolicyMapping.\r\t((ASN1Module name: #x509) sequence: #PolicyMapping mapping: X509PolicyMapping)\r\t\tadd: #issuerDomainPolicy type: #ASN1ObjectIdentifierType;\r\t\tadd: #subjectDomainPolicy type: #ASN1ObjectIdentifierType;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) sequence: #SubjectDirectoryAttributes of: #Attribute.\r\r\t((ASN1Module name: #x509) sequence: #BasicConstraints mapping: X509BasicConstraints)\r\t\tadd: #ca type: #ASN1BooleanType default: false;\r\t\taddOptional: #pathLengthConstraint type: #ASN1IntegerType;\r\t\tyourself.\r\r"\r#NameConstraints\r#PolicyConstraints\r#CRLDistributionPoints\r#ExtKeyUsageSyntax\r#InhibitAnyPolicy\r#FreshestCRL\r#AuthorityInfoAccessSyntax\r#SubjectInfoAccessSyntax\r#CRLNumber\r#IssuingDistributionPoint\r#BaseCRLNumber\r#CRLReason\r#BaseCRLNumber\r#CertificateIssuer\r#HoldInstructionCode\r#InvalidityDate\r"',			#stamp : 'rww 3/28/2007 19:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '789' ],		#self : OmReference [ '790' ],		#time : DateAndTime [ '2018-08-16T16:44:10.567999+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509BasicConstraints,				#isMetaSide : false			},			#name : #ca,			#protocol : #accessing,			#sourceCode : 'ca\r\t"Answer the value of ca"\r\r\t^ ca',			#stamp : 'rww 3/28/2007 19:35',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '790' ],		#self : OmReference [ '791' ],		#time : DateAndTime [ '2018-08-16T16:44:10.568929+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509BasicConstraints,				#isMetaSide : false			},			#name : #'ca:',			#protocol : #accessing,			#sourceCode : 'ca: anObject\r\t"Set the value of ca"\r\r\tca := anObject',			#stamp : 'rww 3/28/2007 19:35',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '791' ],		#self : OmReference [ '792' ],		#time : DateAndTime [ '2018-08-16T16:44:10.570009+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509BasicConstraints,				#isMetaSide : false			},			#name : #pathLengthConstraint,			#protocol : #accessing,			#sourceCode : 'pathLengthConstraint\r\t"Answer the value of pathLengthConstraint"\r\r\t^ pathLengthConstraint',			#stamp : 'rww 3/28/2007 19:35',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '792' ],		#self : OmReference [ '793' ],		#time : DateAndTime [ '2018-08-16T16:44:10.571072+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509BasicConstraints,				#isMetaSide : false			},			#name : #'pathLengthConstraint:',			#protocol : #accessing,			#sourceCode : 'pathLengthConstraint: anObject\r\t"Set the value of pathLengthConstraint"\r\r\tpathLengthConstraint := anObject',			#stamp : 'rww 3/28/2007 19:35',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '793' ],		#self : OmReference [ '794' ],		#time : DateAndTime [ '2018-08-16T16:44:10.572167+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509Certificate class',				#isMetaSide : true			},			#name : #'fromBytes:',			#protocol : #'instance creation',			#sourceCode : 'fromBytes: bytes\r\r\t| type |\r\ttype := (ASN1Module name: #x509) find: #Certificate.\r\t^ ASN1Stream decodeBytes: bytes withType: type.\r',			#stamp : 'rww 3/29/2007 09:45',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '794' ],		#self : OmReference [ '795' ],		#time : DateAndTime [ '2018-08-16T16:44:10.573126+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509Certificate class',				#isMetaSide : true			},			#name : #'fromFile:',			#protocol : #'instance creation',			#sourceCode : 'fromFile: filename\r\r\t| fs data i j |\r\tfs := StandardFileStream readOnlyFileNamed: filename.\r\tdata := fs contentsOfEntireFile.\r\ti := data indexOfSubCollection: \'--BEGIN \' startingAt: 1.\r\ti = 0 ifTrue: [^ self fromBytes: data asByteArray].\r\ti := data indexOfSubCollection: \'CERTIFICATE--\' startingAt: i.\r\tj := data indexOfSubCollection: \'--END \' startingAt: i.\r\ti := data findAnySubStr: String crlf startingAt: i.\r\tdata := (data copyFrom: i to: j)\r\t\treject: [:c | (c = $-) or: [c isSeparator]].\r\tdata := (Base64MimeConverter mimeDecodeToBytes: data readStream) contents.\r\t^ self fromBytes: data.\r',			#stamp : 'rww 3/26/2007 09:26',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '795' ],		#self : OmReference [ '796' ],		#time : DateAndTime [ '2018-08-16T16:44:10.574195+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509Certificate class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\r\r\tself initializeASN1Types.\r',			#stamp : 'rww 3/26/2007 14:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '796' ],		#self : OmReference [ '797' ],		#time : DateAndTime [ '2018-08-16T16:44:10.576033+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509Certificate class',				#isMetaSide : true			},			#name : #initializeASN1Types,			#protocol : #'class initialization',			#sourceCode : 'initializeASN1Types\r\r\t((ASN1Module name: #x509) sequence: #Certificate mapping: X509Certificate)\r\t\tadd: #tbsCertificate type: #TBSCertificate;\r\t\tadd: #signatureAlgorithm type: #AlgorithmIdentifier;\r\t\tadd: #signature type: #ASN1BitStringType;\r\t\tyourself.\r\t(ASN1Module name: #x509) find: #Certificate.\r\r\t((ASN1Module name: #x509) sequence: #TBSCertificate mapping: X509TBSCertificate)\r\t\tadd: #version type: #Version explicitTag: 0 default: 0;\r\t\tadd: #serialNumber type: #CertificateSerialNumber;\r\t\tadd: #signature type: #AlgorithmIdentifier;\r\t\tadd: #issuer type: #Name;\r\t\tadd: #validity type: #Validity;\r\t\tadd: #subject type: #Name;\r\t\tadd: #subjectPublicKeyInfo type: #SubjectPublicKeyInfo;\r\t\taddOptional: #issuerUniqueID type: #UniqueIdentifier implicitTag: 1;\r\t\taddOptional: #subjectUniqueID type: #UniqueIdentifier implicitTag: 2;\r\t\taddOptional: #extensions type: #Extensions explicitTag: 3;\r\t\tyourself.\r\r\t((ASN1Module name: #x509) sequence: #AlgorithmIdentifier mapping: X509AlgorithmIdentifier)\r\t\tadd: #oid type: #ASN1ObjectIdentifierType;\r\t\taddOptional: #parameters type: #ASN1AnyType;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) integer: #Version.\r\t(ASN1Module name: #x509) integer: #CertificateSerialNumber.\r\t(ASN1Module name: #x509) bitString: #UniqueIdentifier.\r\t(ASN1Module name: #x509) sequence: #Extensions of: #Extension.\r\r\t((ASN1Module name: #x509) sequence: #SubjectPublicKeyInfo mapping: X509SubjectPublicKeyInfo)\r\t\tadd: #algorithm type: #AlgorithmIdentifier;\r\t\tadd: #subjectPublicKey type: #ASN1BitStringType;\r\t\tyourself.\r\r\t((ASN1Module name: #x509) sequence: #Validity mapping: X509Validity)\r\t\tadd: #notBefore type: #Time;\r\t\tadd: #notAfter type: #Time;\r\t\tyourself.\r\t(ASN1Module name: #x509) utcTime: #Time.\r\r\t((ASN1Module name: #x509) choice: #Name)\r\t\tadd: #names type: #RDNSequence.\r\t(ASN1Module name: #x509) sequence: #RDNSequence of: #RelativeDistinguishedName.\r\t(ASN1Module name: #x509) set: #RelativeDistinguishedName of: #AttributeTypeAndValue.\r\r\t((ASN1Module name: #x509) sequence: #Extension mapping: X509CertificateExtension)\r\t\tadd: #extnId type: #ASN1ObjectIdentifierType;\r\t\taddOptional: #extnCritical type: #ASN1BooleanType default: false;\r\t\tadd: #extnValue type: #ASN1ByteArrayType;\r\t\tyourself.\r\r\t((ASN1Module name: #x509) sequence: #AttributeTypeAndValue mapping: X520Attribute)\r\t\tadd: #attrOid type: #AttributeType;\r\t\tadd: #attrValue type: #AttributeValue;\r\t\tyourself.\r\t(ASN1Module name: #x509) objectIdentifier: #AttributeType.\r\t((ASN1Module name: #x509) any: #AttributeValue definedBy: #attrOid)\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.41\') put: #X520Name;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.4\') put: #X520Name;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.42\') put: #X520Name;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.43\') put: #X520Name;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.44\') put: #X520Name;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.3\') put: #X520CommonName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.7\') put: #X520LocalityName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.8\') put: #X520StateOrProvinceName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.10\') put: #X520OrganizationName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.11\') put: #X520OrganizationalUnitName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.4.6\') put: #X520CountryName;\r\t\tat: (ASN1ObjectId fromString: \'1.2.840.113549.1.9.1\') put: #X520Pkcs9EmailAddress;\r\t\tdefaultType: #X509StringChoice;\r\t\tyourself.\r\t((ASN1Module name: #x509) choice: #X509StringChoice)\r\t\tadd: #teletexString type: #ASN1TeletexStringType;\r\t\tadd: #printableString type: #ASN1PrintableStringType;\r\t\tadd: #universalString type: #ASN1UniversalStringType;\r\t\tadd: #utf8String type: #ASN1StringType;\r\t\tadd: #bmpString type: #ASN1BMPStringType;\r\t\tyourself.\r\t((ASN1Module name: #x509) mapped: #X520Name)\r\t\tmapping: X520Name mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520CommonName)\r\t\tmapping: X520CommonName mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520LocalityName)\r\t\tmapping: X520LocalityName mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520StateOrProvinceName)\r\t\tmapping: X520StateOrProvinceName mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520OrganizationName)\r\t\tmapping: X520OrganizationName mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520OrganizationalUnitName)\r\t\tmapping: X520OrganizationalUnitName mappingSymbol: #string type: #X509StringChoice.\r\t((ASN1Module name: #x509) mapped: #X520CountryName)\r\t\tmapping: X520CountryName mappingSymbol: #string type: #ASN1PrintableStringType.\r\t((ASN1Module name: #x509) mapped: #X520Pkcs9EmailAddress)\r\t\tmapping: X520Pkcs9EmailAddress mappingSymbol: #string type: #ASN1IA5StringType.\r\t\r',			#stamp : 'rww 3/30/2007 13:47',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '797' ],		#self : OmReference [ '798' ],		#time : DateAndTime [ '2018-08-16T16:44:10.577206+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #asAsn1Bytes,			#protocol : #converting,			#sourceCode : 'asAsn1Bytes\r\r\t| type |\r\ttype := (ASN1Module name: #x509) find: #Certificate.\r\t^ ASN1Stream encode: self withType: type\r',			#stamp : 'rww 3/28/2007 12:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '798' ],		#self : OmReference [ '799' ],		#time : DateAndTime [ '2018-08-16T16:44:10.578102+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #asDerCertificateList,			#protocol : #converting,			#sourceCode : 'asDerCertificateList\r\r\t^ (OrderedCollection with: self) asAsn1Bytes\r',			#stamp : 'rww 3/28/2007 12:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '799' ],		#self : OmReference [ '800' ],		#time : DateAndTime [ '2018-08-16T16:44:10.579242+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #signature,			#protocol : #accessing,			#sourceCode : 'signature\r\t"Answer the value of signature"\r\r\t^ signature',			#stamp : 'rww 9/14/2006 21:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '800' ],		#self : OmReference [ '801' ],		#time : DateAndTime [ '2018-08-16T16:44:10.580282+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #'signature:',			#protocol : #accessing,			#sourceCode : 'signature: anObject\r\t"Set the value of signature"\r\r\tsignature := anObject',			#stamp : 'rww 9/14/2006 21:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '801' ],		#self : OmReference [ '802' ],		#time : DateAndTime [ '2018-08-16T16:44:10.581299+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #signatureAlgorithm,			#protocol : #accessing,			#sourceCode : 'signatureAlgorithm\r\t"Answer the value of signatureAlgorithm"\r\r\t^ signatureAlgorithm',			#stamp : 'rww 9/14/2006 21:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '802' ],		#self : OmReference [ '803' ],		#time : DateAndTime [ '2018-08-16T16:44:10.582331+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #'signatureAlgorithm:',			#protocol : #accessing,			#sourceCode : 'signatureAlgorithm: anObject\r\t"Set the value of signatureAlgorithm"\r\r\tsignatureAlgorithm := anObject',			#stamp : 'rww 9/14/2006 21:36',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '803' ],		#self : OmReference [ '804' ],		#time : DateAndTime [ '2018-08-16T16:44:10.583751+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #tbsCertificate,			#protocol : #accessing,			#sourceCode : 'tbsCertificate\r\t"Answer the value of tbsCertificate"\r\r\t^ tbsCertificate',			#stamp : 'rww 9/15/2006 13:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '804' ],		#self : OmReference [ '805' ],		#time : DateAndTime [ '2018-08-16T16:44:10.584789+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #'tbsCertificate:',			#protocol : #accessing,			#sourceCode : 'tbsCertificate: anObject\r\t"Set the value of tbsCertificate"\r\r\ttbsCertificate := anObject',			#stamp : 'rww 9/15/2006 13:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '805' ],		#self : OmReference [ '806' ],		#time : DateAndTime [ '2018-08-16T16:44:10.585911+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #'verifyFromParentCertificate:',			#protocol : #verifying,			#sourceCode : 'verifyFromParentCertificate: parentCert\r\r\t(DateAndTime now \r\t\tbetween: self tbsCertificate validity notBefore\r\t\tand: self tbsCertificate validity notAfter)\r\t\t\tifFalse: [^ false].\r\tself tbsCertificate issuer = parentCert tbsCertificate subject\r\t\tifFalse: [^ false].\r\t(self tbsCertificate signature oid oid = \'1.2.840.113549.1.1.2\')\r\t\tifTrue: [^ self verifyMD2WithRSAEncryptionFromParentCertificate: parentCert].\r\t(self tbsCertificate signature oid oid = \'1.2.840.113549.1.1.4\')\r\t\tifTrue: [^ self verifyMD5WithRSAEncryptionFromParentCertificate: parentCert].\r\t(self tbsCertificate signature oid oid = \'1.2.840.113549.1.1.5\')\r\t\tifTrue: [^ self verifySHA1WithRSAEncryptionFromParentCertificate: parentCert].\r\t(self tbsCertificate signature oid oid = \'1.2.840.10040.4.3\')\r\t\tifTrue: [^ self verifySHA1WithDSAEncryptionFromParentCertificate: parentCert].\r\t^ false.\r',			#stamp : 'rww 4/28/2007 19:33',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '806' ],		#self : OmReference [ '807' ],		#time : DateAndTime [ '2018-08-16T16:44:10.587008+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #'verifyMD2WithRSAEncryptionFromParentCertificate:',			#protocol : #verifying,			#sourceCode : 'verifyMD2WithRSAEncryptionFromParentCertificate: parentCert\r\r\t| publicKey hash msg |\r\tpublicKey := parentCert tbsCertificate subjectPublicKeyInfo asPublicKey.\r\r\thash := MD2 hashMessage: self tbsCertificate asAsn1Bytes.\r\tmsg := OrderedCollection new\r\t\tadd: (OrderedCollection new add: (ASN1ObjectId fromString: \'1.2.840.113549.2.2\'); add: nil; yourself);\r\t\tadd: hash;\r\t\tasAsn1Bytes.\r\t^ publicKey v15VerifySignature: self signature bytes ofMessageHash: msg.\r',			#stamp : 'rww 3/28/2007 12:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '807' ],		#self : OmReference [ '808' ],		#time : DateAndTime [ '2018-08-16T16:44:10.588108+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #'verifyMD5WithRSAEncryptionFromParentCertificate:',			#protocol : #verifying,			#sourceCode : 'verifyMD5WithRSAEncryptionFromParentCertificate: parentCert\r\r\t| publicKey hash msg |\r\tpublicKey := parentCert tbsCertificate subjectPublicKeyInfo asPublicKey.\r\thash := MD5 hashMessage: self tbsCertificate asAsn1Bytes.\r\tmsg := OrderedCollection new\r\t\tadd: (OrderedCollection new add: (ASN1ObjectId fromString: \'1.2.840.113549.2.5\'); add: nil; yourself);\r\t\tadd: hash;\r\t\tasAsn1Bytes.\r\t^ publicKey v15VerifySignature: self signature bytes ofMessageHash: msg.\r',			#stamp : 'rww 3/28/2007 12:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '808' ],		#self : OmReference [ '809' ],		#time : DateAndTime [ '2018-08-16T16:44:10.589165+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #'verifySHA1WithDSAEncryptionFromParentCertificate:',			#protocol : #verifying,			#sourceCode : 'verifySHA1WithDSAEncryptionFromParentCertificate: parentCert\r\r\t| publicKey sig toBeSigned |\r\tpublicKey := parentCert tbsCertificate subjectPublicKeyInfo asPublicKey.\r\tsig := ASN1Stream decodeBytes: self signature bytes.\r\ttoBeSigned := SHA1 hashMessage: self tbsCertificate asAsn1Bytes.\r\t^ publicKey verifySignature: sig ofMessageHash: toBeSigned.\r',			#stamp : 'rww 3/28/2007 12:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '809' ],		#self : OmReference [ '810' ],		#time : DateAndTime [ '2018-08-16T16:44:10.590598+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Certificate,				#isMetaSide : false			},			#name : #'verifySHA1WithRSAEncryptionFromParentCertificate:',			#protocol : #verifying,			#sourceCode : 'verifySHA1WithRSAEncryptionFromParentCertificate: parentCert\r\r\t| publicKey hash msg |\r\tpublicKey := parentCert tbsCertificate subjectPublicKeyInfo asPublicKey.\r\r\thash := SHA1 hashMessage: self tbsCertificate asAsn1Bytes.\r\tmsg := OrderedCollection new\r\t\tadd: (OrderedCollection new add: (ASN1ObjectId fromString: \'1.3.14.3.2.26\'); add: nil; yourself);\r\t\tadd: hash;\r\t\tasAsn1Bytes.\r\t^ publicKey v15VerifySignature: self signature bytes ofMessageHash: msg.\r',			#stamp : 'rww 3/28/2007 12:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '810' ],		#self : OmReference [ '811' ],		#time : DateAndTime [ '2018-08-16T16:44:10.591685+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509CertificateDerReader class',				#isMetaSide : true			},			#name : #'fromDerBytes:',			#protocol : #'instance creation',			#sourceCode : 'fromDerBytes: bytes\r\r\t^ self new \r\t\tderBytes: bytes;\r\t\tyourself.\r',			#stamp : 'rww 9/15/2006 16:41',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '811' ],		#self : OmReference [ '812' ],		#time : DateAndTime [ '2018-08-16T16:44:10.592605+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509CertificateDerReader class',				#isMetaSide : true			},			#name : #'fromFile:',			#protocol : #'instance creation',			#sourceCode : 'fromFile: filename\r\t"(X509CertificateDerReader fromFile: \'/Users/slosher/Desktop/squeak/certificates/rsa.cert\') asCertificate"\r\t"(X509CertificateDerReader fromFile: \'/Users/slosher/Desktop/squeak/certificates/dsa.cert\') asCertificate"\r\t"(X509CertificateDerReader fromFile: \'/Users/slosher/Desktop/squeak/certificates/class3cacert.crt\') asCertificate"\r\t"(X509CertificateDerReader fromFile: \'/Users/slosher/Desktop/squeak/certificates/class1cacert.crt\') asCertificate"\r\r\t| fs data |\r\tfs := StandardFileStream fileNamed: filename.\r\tdata := fs contentsOfEntireFile.\r\t^ self new initializeFromFileContents: data.\r',			#stamp : 'rww 1/22/2007 10:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '812' ],		#self : OmReference [ '813' ],		#time : DateAndTime [ '2018-08-16T16:44:10.593724+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateDerReader,				#isMetaSide : false			},			#name : #asCertificate,			#protocol : #converting,			#sourceCode : 'asCertificate\r\r\t^ X509Certificate fromBytes: self derBytes.\r',			#stamp : 'rww 3/26/2007 09:26',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '813' ],		#self : OmReference [ '814' ],		#time : DateAndTime [ '2018-08-16T16:44:10.594609+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateDerReader,				#isMetaSide : false			},			#name : #derBytes,			#protocol : #accessing,			#sourceCode : 'derBytes\r\t"Answer the value of derBytes"\r\r\t^ derBytes',			#stamp : 'rww 9/15/2006 16:37',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '814' ],		#self : OmReference [ '815' ],		#time : DateAndTime [ '2018-08-16T16:44:10.595634+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateDerReader,				#isMetaSide : false			},			#name : #'derBytes:',			#protocol : #accessing,			#sourceCode : 'derBytes: anObject\r\t"Set the value of derBytes"\r\r\tderBytes := anObject',			#stamp : 'rww 9/15/2006 16:37',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '815' ],		#self : OmReference [ '816' ],		#time : DateAndTime [ '2018-08-16T16:44:10.596758+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateDerReader,				#isMetaSide : false			},			#name : #'initializeFromFileContents:',			#protocol : #initialize-release,			#sourceCode : 'initializeFromFileContents: data\r\r\t| i j theData |\r\ti := data indexOfSubCollection: \'--BEGIN \' startingAt: 1.\r\ti = 0 \r\t\tifTrue: [theData := data reject: [:c | (c = $-) or: [c isSeparator]]]\r\t\tifFalse: [\r\t\t\ti := data indexOfSubCollection: \'CERTIFICATE--\' startingAt: i.\r\t\t\tj := data indexOfSubCollection: \'--END \' startingAt: i.\r\t\t\ti := data findAnySubStr: String crlf startingAt: i.\r\t\t\ttheData := (data copyFrom: i to: j)\r\t\t\t\treject: [:c | (c = $-) or: [c isSeparator]]].\r\ttheData := (Base64MimeConverter mimeDecodeToBytes: theData readStream) contents.\r\tself derBytes: theData.\r',			#stamp : 'rww 1/22/2007 18:37',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '816' ],		#self : OmReference [ '817' ],		#time : DateAndTime [ '2018-08-16T16:44:10.598207+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509CertificateExtension class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\r\r\tself initializeASN1Types.\r',			#stamp : 'rww 3/28/2007 16:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '817' ],		#self : OmReference [ '818' ],		#time : DateAndTime [ '2018-08-16T16:44:10.599718+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509CertificateExtension class',				#isMetaSide : true			},			#name : #initializeASN1Types,			#protocol : #'class initialization',			#sourceCode : 'initializeASN1Types\r\r\t((ASN1Module name: #x509) sequence: #AuthorityKeyIdentifier mapping: X509AuthorityKeyIdentifier)\r\t\taddOptional: #keyIdentifier type: #KeyIdentifier implicitTag: 0;\r\t\taddOptional: #certIssuer type: #GeneralNames implicitTag: 1;\r\t\taddOptional: #certSerialNumber type: #CertificateSerialNumber implicitTag: 2;\r\t\tyourself.\r\t(ASN1Module name: #x509) byteArray: #KeyIdentifier.\r\r\t(ASN1Module name: #x509) sequence: #GeneralNames of: #GeneralName.\r\t((ASN1Module name: #x509) choice: #GeneralName)\r\t\tadd: #otherName type: #AnotherName implicitTag: 0;\r\t\tadd: #rfc822Name type: #ASN1IA5StringType implicitTag: 1;\r\t\tadd: #dNSName type: #ASN1IA5StringType implicitTag: 2;\r"\t\tadd: #x400Address type: #ORAddress implicitTag: 3;"\r\t\tadd: #directoryName type: #Name explicitTag: 4;\r\t\tadd: #ediPartyName type: #EDIPartyName implicitTag: 5;\r\t\tadd: #uniformResourceIdenifier type: #ASN1IA5StringType implicitTag: 6;\r\t\tadd: #iPAddress type: #ASN1ByteArrayType implicitTag: 7;\r\t\tadd: #registeredID type: #ASN1ObjectIdentifierType implicitTag: 8;\r\t\tyourself.\r\t((ASN1Module name: #x509) sequence: #AnotherName mapping: X509AnotherName)\r\t\tadd: #typeId type: #ASN1ObjectIdentifierType;\r\t\tadd: #value type: #ASN1AnyType explicitTag: 0;\r\t\tyourself.\r\t((ASN1Module name: #x509) sequence: #EDIPartyName mapping: X509EDIPartyName)\r\t\taddOptional: #nameAssigner type: #X509StringChoice implicitTag: 0;\r\t\tadd: #partyName type: #X509StringChoice implicitTag: 1;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) bitString: #KeyUsage.\r\r\t((ASN1Module name: #x509) sequence: #PrivateKeyUsagePeriod mapping: X509Validity)\r\t\taddOptional: #notBefore type: #ASN1UTCTimeType implicitTag: 0;\r\t\taddOptional: #notAfter type: #ASN1UTCTimeType implicitTag: 1;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) sequence: #CertificatePolicies of: #PolicyInformation.\r\t((ASN1Module name: #x509) sequence: #PolicyInformation mapping: X509PolicyInformation)\r\t\tadd: #id type: #CertPolicyId;\r\t\taddOptional: #qualifiers type: #PolicyQualifierInfos;\r\t\tyourself.\r\t(ASN1Module name: #x509) objectIdentifier: #CertPolicyId.\r\t(ASN1Module name: #x509) sequence: #PolicyQualifierInfos of: #PolicyQualifierInfo.\r\t((ASN1Module name: #x509) sequence: #PolicyQualifierInfo mapping: X509PolicyQualifierInfo)\r\t\tadd: #id type: #ASN1ObjectIdentifierType;\r\t\tadd: #qualifier type: #ASN1AnyType;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) sequence: #PolicyMappings of: #PolicyMapping.\r\t((ASN1Module name: #x509) sequence: #PolicyMapping mapping: X509PolicyMapping)\r\t\tadd: #issuerDomainPolicy type: #CertPolicyId;\r\t\tadd: #subjectDomainPolicy type: #CertPolicyId;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) assign: #SubjectAltName from: #GeneralNames.\r\t(ASN1Module name: #x509) assign: #IssuerAltName from: #GeneralNames.\r\r\t(ASN1Module name: #x509) sequence: #SubjectDirectoryAttributes of: #Attribute.\r\r\t((ASN1Module name: #x509) sequence: #BasicConstraints mapping: X509BasicConstraints)\r\t\tadd: #ca type: #ASN1BooleanType default: false;\r\t\taddOptional: #pathLengthConstraint type: #ASN1IntegerType;\r\t\tyourself.\r\r\t((ASN1Module name: #x509) sequence: #NameConstraints mapping: X509NameConstraints)\r\t\taddOptional: #permittedSubtrees type: #GeneralSubtrees implicitTag: 0;\r\t\taddOptional: #excludedSubtrees type: #GeneralSubtrees implicitTag: 1;\r\t\tyourself.\r\t(ASN1Module name: #x509) sequence: #GeneralSubtrees of: #GeneralSubtree.\r\t((ASN1Module name: #x509) sequence: #GeneralSubtree mapping: X509GeneralSubtree)\r\t\tadd: #base type: #GeneralName;\r\t\tadd: #minimum type: #BaseDistance implicitTag: 0 default: 0;\r\t\taddOptional: #maximum type: #BaseDistance implicitTag: 1;\r\t\tyourself.\r\t(ASN1Module name: #x509) integer: #BaseDistance.\r\r\t((ASN1Module name: #x509) sequence: #PolicyConstraints mapping: X509PolicyConstraints)\r\t\taddOptional: #requireExplicitPolicy type: #SkipCerts implicitTag: 0;\r\t\taddOptional: #inhibitPolicyMapping type: #SkipCerts implicitTag: 1;\r\t\tyourself.\r\t(ASN1Module name: #x509) integer: #SkipCerts.\r\r\t(ASN1Module name: #x509) sequence: #CRLDistributionPoints of: #DistributionPoint.\r\t((ASN1Module name: #x509) sequence: #DistributionPoint mapping: X509DistributionPoint)\r\t\taddOptional: #distributionPoint type: #DistributionPointName explicitTag: 0;\r\t\taddOptional: #reasons type: #ReasonFlags implicitTag: 1;\r\t\taddOptional: #cRLIssuer type: #GeneralNames implicitTag: 2;\r\t\tyourself.\r\t((ASN1Module name: #x509) choice: #DistributionPointName)\r\t\tadd: #fullName type: #GeneralNames implicitTag: 0;\r\t\tadd: #nameRelativeToCRLIssuer type: #RelativeDistinguishedName implicitTag: 1;\r\t\tyourself.\r\t(ASN1Module name: #x509) bitString: #ReasonFlags.\r\r\t(ASN1Module name: #x509) sequence: #ExtKeyUsageSyntax of: #KeyPurposeId.\r\t(ASN1Module name: #x509) objectIdentifier: #KeyPurposeId.\r\r\t(ASN1Module name: #x509) assign: #InhibitAnyPolicy from: #SkipCerts.\r\r\t(ASN1Module name: #x509) assign: #FreshestCRL from: #CRLDistributionPoints.\r\r\t(ASN1Module name: #x509) sequence: #AuthorityInfoAccessSyntax of: #AccessDescription.\r\t((ASN1Module name: #x509) sequence: #AccessDescription mapping: X509AccessDescription)\r\t\tadd: #accessMethod type: #ASN1ObjectIdentifierType;\r\t\tadd: #accessLocation type: #GeneralName;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) sequence: #SubjectInfoAccessSyntax of: #AccessDescription.\r\r\t(ASN1Module name: #x509) integer: #CRLNumber.\r\r\t((ASN1Module name: #x509) sequence: #IssuingDistributionPoint mapping: X509IssuingDistributionPoint)\r\t\taddOptional: #distributionPoint type: #DistributionPointName explicitTag: 0;\r\t\tadd: #onlyContainsUserCerts type: #ASN1BooleanType implicitTag: 1 default: false;\r\t\tadd: #onlyContainsCACerts type: #ASN1BooleanType implicitTag: 2 default: false;\r\t\taddOptional: #onlySomeReasons type: #ReasonFlags implicitTag: 3;\r\t\tadd: #indirectCRL type: #ASN1BooleanType implicitTag: 4 default: false;\r\t\tadd: #onlyContainsAttributeCerts type: #ASN1BooleanType implicitTag: 5 default: false;\r\t\tyourself.\r\r\t(ASN1Module name: #x509) assign: #BaseCRLNumber from: #CRLNumber.\r\r"\t(ASN1Module name: #x509) enumerated: #CRLReason."\r\r\t(ASN1Module name: #x509) assign: #CertificateIssuer from: #GeneralNames.\r\r\t(ASN1Module name: #x509) objectIdentifier: #HoldInstructionCode.\r\r\t(ASN1Module name: #x509) utcTime: #InvalidityDate.\r',			#stamp : 'rww 3/29/2007 10:18',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '818' ],		#self : OmReference [ '819' ],		#time : DateAndTime [ '2018-08-16T16:44:10.60088+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'X509CertificateExtension class',				#isMetaSide : true			},			#name : #objectIdToTypeSymbolMap,			#protocol : #'class initialization',			#sourceCode : 'objectIdToTypeSymbolMap\r\r\t| map |\r\tmap := Dictionary new\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.35\') put: #AuthorityKeyIdentifier;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.14\') put: #KeyIdentifier;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.15\') put: #KeyUsage;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.16\') put: #PrivateKeyUsagePeriod;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.32\') put: #CertificatePolicies;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.33\') put: #PolicyMappings;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.17\') put: #SubjectAltName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.18\') put: #IssuerAltName;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.9\') put: #SubjectDirectoryAttributes;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.19\') put: #BasicConstraints;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.30\') put: #NameConstraints;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.36\') put: #PolicyConstraints;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.31\') put: #CRLDistributionPoints;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.37\') put: #ExtKeyUsageSyntax;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.54\') put: #InhibitAnyPolicy;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.46\') put: #FreshestCRL;\r\t\tat: (ASN1ObjectId fromString: \'1.3.6.1.5.5.7.1.1\') put: #AuthorityInfoAccessSyntax;\r\t\tat: (ASN1ObjectId fromString: \'1.3.6.1.5.5.7.1.11\') put: #SubjectInfoAccessSyntax;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.20\') put: #CRLNumber;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.28\') put: #IssuingDistributionPoint;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.27\') put: #BaseCRLNumber;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.21\') put: #CRLReason;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.29\') put: #CertificateIssuer;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.23\') put: #HoldInstructionCode;\r\t\tat: (ASN1ObjectId fromString: \'2.5.29.24\') put: #InvalidityDate;\r\t\tyourself.\r\t^ map',			#stamp : 'rww 3/29/2007 06:15',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '819' ],		#self : OmReference [ '820' ],		#time : DateAndTime [ '2018-08-16T16:44:10.602036+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateExtension,				#isMetaSide : false			},			#name : #asn1TypeForExtension,			#protocol : #private,			#sourceCode : 'asn1TypeForExtension\r\t"\r\t\tid-ce = 2.5.29\r\t\tid-pe = 1.3.6.1.5.5.7.1\r\t\tid-qt = 1.3.6.1.5.5.7.2\r\t\tid-kp = 1.3.6.1.5.5.7.3\r\t\tid-ad = 1.3.6.1.5.5.7.48\r\t"\r\t\r\t| typeSymbol |\r\ttypeSymbol := self class objectIdToTypeSymbolMap at: self extnId ifAbsent: [^nil].\r\t^ (ASN1Module name: #x509) find: typeSymbol.\r\t',			#stamp : 'rww 3/28/2007 17:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '820' ],		#self : OmReference [ '821' ],		#time : DateAndTime [ '2018-08-16T16:44:10.602978+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateExtension,				#isMetaSide : false			},			#name : #decodeExtension,			#protocol : #private,			#sourceCode : 'decodeExtension\r\r\t| type ext |\r\ttype := self asn1TypeForExtension.\r\text := [ASN1Stream decodeBytes: self extnValue withType: type]\r\t\ton: Error\r\t\tdo: [:ex | ASN1Stream decodeBytes: self extnValue].\r\tself decodedExtension: ext.\r',			#stamp : 'rww 3/29/2007 10:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '821' ],		#self : OmReference [ '822' ],		#time : DateAndTime [ '2018-08-16T16:44:10.604061+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateExtension,				#isMetaSide : false			},			#name : #decodedExtension,			#protocol : #accessing,			#sourceCode : 'decodedExtension\r\t"Answer the value of decodedExtension"\r\r\t^ decodedExtension',			#stamp : 'rww 3/28/2007 14:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '822' ],		#self : OmReference [ '823' ],		#time : DateAndTime [ '2018-08-16T16:44:10.605145+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateExtension,				#isMetaSide : false			},			#name : #'decodedExtension:',			#protocol : #accessing,			#sourceCode : 'decodedExtension: anObject\r\t"Set the value of decodedExtension"\r\r\tdecodedExtension := anObject',			#stamp : 'rww 3/28/2007 14:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '823' ],		#self : OmReference [ '824' ],		#time : DateAndTime [ '2018-08-16T16:44:10.606615+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateExtension,				#isMetaSide : false			},			#name : #extnCritical,			#protocol : #accessing,			#sourceCode : 'extnCritical\r\t"Answer the value of extnCritical"\r\r\t^ extnCritical',			#stamp : 'rww 1/26/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '824' ],		#self : OmReference [ '825' ],		#time : DateAndTime [ '2018-08-16T16:44:10.607842+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateExtension,				#isMetaSide : false			},			#name : #'extnCritical:',			#protocol : #accessing,			#sourceCode : 'extnCritical: anObject\r\t"Set the value of extnCritical"\r\r\textnCritical := anObject',			#stamp : 'rww 1/26/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '825' ],		#self : OmReference [ '826' ],		#time : DateAndTime [ '2018-08-16T16:44:10.608909+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateExtension,				#isMetaSide : false			},			#name : #extnId,			#protocol : #accessing,			#sourceCode : 'extnId\r\t"Answer the value of extnId"\r\r\t^ extnId',			#stamp : 'rww 1/26/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '826' ],		#self : OmReference [ '827' ],		#time : DateAndTime [ '2018-08-16T16:44:10.60999+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateExtension,				#isMetaSide : false			},			#name : #'extnId:',			#protocol : #accessing,			#sourceCode : 'extnId: anObject\r\t"Set the value of extnId"\r\r\textnId := anObject',			#stamp : 'rww 1/26/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '827' ],		#self : OmReference [ '828' ],		#time : DateAndTime [ '2018-08-16T16:44:10.611037+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateExtension,				#isMetaSide : false			},			#name : #extnValue,			#protocol : #accessing,			#sourceCode : 'extnValue\r\t"Answer the value of extnValue"\r\r\t^ extnValue',			#stamp : 'rww 1/26/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '828' ],		#self : OmReference [ '829' ],		#time : DateAndTime [ '2018-08-16T16:44:10.612083+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509CertificateExtension,				#isMetaSide : false			},			#name : #'extnValue:',			#protocol : #accessing,			#sourceCode : 'extnValue: anObject\r\t"Set the value of extnValue"\r\r\textnValue := anObject.\r\tself decodeExtension.',			#stamp : 'rww 3/28/2007 14:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '829' ],		#self : OmReference [ '830' ],		#time : DateAndTime [ '2018-08-16T16:44:10.613159+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509DistributionPoint,				#isMetaSide : false			},			#name : #cRLIssuer,			#protocol : #accessing,			#sourceCode : 'cRLIssuer\r\t"Answer the value of cRLIssuer"\r\r\t^ cRLIssuer',			#stamp : 'rww 3/28/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '830' ],		#self : OmReference [ '831' ],		#time : DateAndTime [ '2018-08-16T16:44:10.6145+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509DistributionPoint,				#isMetaSide : false			},			#name : #'cRLIssuer:',			#protocol : #accessing,			#sourceCode : 'cRLIssuer: anObject\r\t"Set the value of cRLIssuer"\r\r\tcRLIssuer := anObject',			#stamp : 'rww 3/28/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '831' ],		#self : OmReference [ '832' ],		#time : DateAndTime [ '2018-08-16T16:44:10.615628+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509DistributionPoint,				#isMetaSide : false			},			#name : #distributionPoint,			#protocol : #accessing,			#sourceCode : 'distributionPoint\r\t"Answer the value of distributionPoint"\r\r\t^ distributionPoint',			#stamp : 'rww 3/28/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '832' ],		#self : OmReference [ '833' ],		#time : DateAndTime [ '2018-08-16T16:44:10.616703+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509DistributionPoint,				#isMetaSide : false			},			#name : #'distributionPoint:',			#protocol : #accessing,			#sourceCode : 'distributionPoint: anObject\r\t"Set the value of distributionPoint"\r\r\tdistributionPoint := anObject',			#stamp : 'rww 3/28/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '833' ],		#self : OmReference [ '834' ],		#time : DateAndTime [ '2018-08-16T16:44:10.617741+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509DistributionPoint,				#isMetaSide : false			},			#name : #reasons,			#protocol : #accessing,			#sourceCode : 'reasons\r\t"Answer the value of reasons"\r\r\t^ reasons',			#stamp : 'rww 3/28/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '834' ],		#self : OmReference [ '835' ],		#time : DateAndTime [ '2018-08-16T16:44:10.618745+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509DistributionPoint,				#isMetaSide : false			},			#name : #'reasons:',			#protocol : #accessing,			#sourceCode : 'reasons: anObject\r\t"Set the value of reasons"\r\r\treasons := anObject',			#stamp : 'rww 3/28/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '835' ],		#self : OmReference [ '836' ],		#time : DateAndTime [ '2018-08-16T16:44:10.61993+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509EDIPartyName,				#isMetaSide : false			},			#name : #nameAssigner,			#protocol : #accessing,			#sourceCode : 'nameAssigner\r\t"Answer the value of nameAssigner"\r\r\t^ nameAssigner',			#stamp : 'rww 3/28/2007 16:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '836' ],		#self : OmReference [ '837' ],		#time : DateAndTime [ '2018-08-16T16:44:10.620811+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509EDIPartyName,				#isMetaSide : false			},			#name : #'nameAssigner:',			#protocol : #accessing,			#sourceCode : 'nameAssigner: anObject\r\t"Set the value of nameAssigner"\r\r\tnameAssigner := anObject',			#stamp : 'rww 3/28/2007 16:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '837' ],		#self : OmReference [ '838' ],		#time : DateAndTime [ '2018-08-16T16:44:10.622313+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509EDIPartyName,				#isMetaSide : false			},			#name : #partyName,			#protocol : #accessing,			#sourceCode : 'partyName\r\t"Answer the value of partyName"\r\r\t^ partyName',			#stamp : 'rww 3/28/2007 16:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '838' ],		#self : OmReference [ '839' ],		#time : DateAndTime [ '2018-08-16T16:44:10.623342+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509EDIPartyName,				#isMetaSide : false			},			#name : #'partyName:',			#protocol : #accessing,			#sourceCode : 'partyName: anObject\r\t"Set the value of partyName"\r\r\tpartyName := anObject',			#stamp : 'rww 3/28/2007 16:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '839' ],		#self : OmReference [ '840' ],		#time : DateAndTime [ '2018-08-16T16:44:10.624405+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509GeneralSubtree,				#isMetaSide : false			},			#name : #base,			#protocol : #accessing,			#sourceCode : 'base\r\t"Answer the value of base"\r\r\t^ base',			#stamp : 'rww 3/28/2007 21:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '840' ],		#self : OmReference [ '841' ],		#time : DateAndTime [ '2018-08-16T16:44:10.625301+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509GeneralSubtree,				#isMetaSide : false			},			#name : #'base:',			#protocol : #accessing,			#sourceCode : 'base: anObject\r\t"Set the value of base"\r\r\tbase := anObject',			#stamp : 'rww 3/28/2007 21:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '841' ],		#self : OmReference [ '842' ],		#time : DateAndTime [ '2018-08-16T16:44:10.626335+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509GeneralSubtree,				#isMetaSide : false			},			#name : #maximum,			#protocol : #accessing,			#sourceCode : 'maximum\r\t"Answer the value of maximum"\r\r\t^ maximum',			#stamp : 'rww 3/28/2007 21:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '842' ],		#self : OmReference [ '843' ],		#time : DateAndTime [ '2018-08-16T16:44:10.627394+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509GeneralSubtree,				#isMetaSide : false			},			#name : #'maximum:',			#protocol : #accessing,			#sourceCode : 'maximum: anObject\r\t"Set the value of maximum"\r\r\tmaximum := anObject',			#stamp : 'rww 3/28/2007 21:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '843' ],		#self : OmReference [ '844' ],		#time : DateAndTime [ '2018-08-16T16:44:10.628419+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509GeneralSubtree,				#isMetaSide : false			},			#name : #minimum,			#protocol : #accessing,			#sourceCode : 'minimum\r\t"Answer the value of minimum"\r\r\t^ minimum',			#stamp : 'rww 3/28/2007 21:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '844' ],		#self : OmReference [ '845' ],		#time : DateAndTime [ '2018-08-16T16:44:10.62994+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509GeneralSubtree,				#isMetaSide : false			},			#name : #'minimum:',			#protocol : #accessing,			#sourceCode : 'minimum: anObject\r\t"Set the value of minimum"\r\r\tminimum := anObject',			#stamp : 'rww 3/28/2007 21:04',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '845' ],		#self : OmReference [ '846' ],		#time : DateAndTime [ '2018-08-16T16:44:10.631026+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #distributionPoint,			#protocol : #accessing,			#sourceCode : 'distributionPoint\r\t"Answer the value of distributionPoint"\r\r\t^ distributionPoint',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '846' ],		#self : OmReference [ '847' ],		#time : DateAndTime [ '2018-08-16T16:44:10.631922+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #'distributionPoint:',			#protocol : #accessing,			#sourceCode : 'distributionPoint: anObject\r\t"Set the value of distributionPoint"\r\r\tdistributionPoint := anObject',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '847' ],		#self : OmReference [ '848' ],		#time : DateAndTime [ '2018-08-16T16:44:10.633002+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #indirectCRL,			#protocol : #accessing,			#sourceCode : 'indirectCRL\r\t"Answer the value of indirectCRL"\r\r\t^ indirectCRL',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '848' ],		#self : OmReference [ '849' ],		#time : DateAndTime [ '2018-08-16T16:44:10.634044+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #'indirectCRL:',			#protocol : #accessing,			#sourceCode : 'indirectCRL: anObject\r\t"Set the value of indirectCRL"\r\r\tindirectCRL := anObject',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '849' ],		#self : OmReference [ '850' ],		#time : DateAndTime [ '2018-08-16T16:44:10.635195+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #onlyContainsAttributeCerts,			#protocol : #accessing,			#sourceCode : 'onlyContainsAttributeCerts\r\t"Answer the value of onlyContainsAttributeCerts"\r\r\t^ onlyContainsAttributeCerts',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '850' ],		#self : OmReference [ '851' ],		#time : DateAndTime [ '2018-08-16T16:44:10.636339+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #'onlyContainsAttributeCerts:',			#protocol : #accessing,			#sourceCode : 'onlyContainsAttributeCerts: anObject\r\t"Set the value of onlyContainsAttributeCerts"\r\r\tonlyContainsAttributeCerts := anObject',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '851' ],		#self : OmReference [ '852' ],		#time : DateAndTime [ '2018-08-16T16:44:10.638034+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #onlyContainsCACerts,			#protocol : #accessing,			#sourceCode : 'onlyContainsCACerts\r\t"Answer the value of onlyContainsCACerts"\r\r\t^ onlyContainsCACerts',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '852' ],		#self : OmReference [ '853' ],		#time : DateAndTime [ '2018-08-16T16:44:10.639243+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #'onlyContainsCACerts:',			#protocol : #accessing,			#sourceCode : 'onlyContainsCACerts: anObject\r\t"Set the value of onlyContainsCACerts"\r\r\tonlyContainsCACerts := anObject',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '853' ],		#self : OmReference [ '854' ],		#time : DateAndTime [ '2018-08-16T16:44:10.640443+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #onlyContainsUserCerts,			#protocol : #accessing,			#sourceCode : 'onlyContainsUserCerts\r\t"Answer the value of onlyContainsUserCerts"\r\r\t^ onlyContainsUserCerts',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '854' ],		#self : OmReference [ '855' ],		#time : DateAndTime [ '2018-08-16T16:44:10.641551+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #'onlyContainsUserCerts:',			#protocol : #accessing,			#sourceCode : 'onlyContainsUserCerts: anObject\r\t"Set the value of onlyContainsUserCerts"\r\r\tonlyContainsUserCerts := anObject',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '855' ],		#self : OmReference [ '856' ],		#time : DateAndTime [ '2018-08-16T16:44:10.642671+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #onlySomeReasons,			#protocol : #accessing,			#sourceCode : 'onlySomeReasons\r\t"Answer the value of onlySomeReasons"\r\r\t^ onlySomeReasons',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '856' ],		#self : OmReference [ '857' ],		#time : DateAndTime [ '2018-08-16T16:44:10.643772+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509IssuingDistributionPoint,				#isMetaSide : false			},			#name : #'onlySomeReasons:',			#protocol : #accessing,			#sourceCode : 'onlySomeReasons: anObject\r\t"Set the value of onlySomeReasons"\r\r\tonlySomeReasons := anObject',			#stamp : 'rww 3/28/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '857' ],		#self : OmReference [ '858' ],		#time : DateAndTime [ '2018-08-16T16:44:10.644912+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509NameConstraints,				#isMetaSide : false			},			#name : #excludedSubtrees,			#protocol : #accessing,			#sourceCode : 'excludedSubtrees\r\t"Answer the value of excludedSubtrees"\r\r\t^ excludedSubtrees',			#stamp : 'rww 3/28/2007 21:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '858' ],		#self : OmReference [ '859' ],		#time : DateAndTime [ '2018-08-16T16:44:10.646329+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509NameConstraints,				#isMetaSide : false			},			#name : #'excludedSubtrees:',			#protocol : #accessing,			#sourceCode : 'excludedSubtrees: anObject\r\t"Set the value of excludedSubtrees"\r\r\texcludedSubtrees := anObject',			#stamp : 'rww 3/28/2007 21:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '859' ],		#self : OmReference [ '860' ],		#time : DateAndTime [ '2018-08-16T16:44:10.647425+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509NameConstraints,				#isMetaSide : false			},			#name : #permittedSubtrees,			#protocol : #accessing,			#sourceCode : 'permittedSubtrees\r\t"Answer the value of permittedSubtrees"\r\r\t^ permittedSubtrees',			#stamp : 'rww 3/28/2007 21:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '860' ],		#self : OmReference [ '861' ],		#time : DateAndTime [ '2018-08-16T16:44:10.64852+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509NameConstraints,				#isMetaSide : false			},			#name : #'permittedSubtrees:',			#protocol : #accessing,			#sourceCode : 'permittedSubtrees: anObject\r\t"Set the value of permittedSubtrees"\r\r\tpermittedSubtrees := anObject',			#stamp : 'rww 3/28/2007 21:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '861' ],		#self : OmReference [ '862' ],		#time : DateAndTime [ '2018-08-16T16:44:10.649665+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyConstraints,				#isMetaSide : false			},			#name : #inhibitPolicyMapping,			#protocol : #accessing,			#sourceCode : 'inhibitPolicyMapping\r\t"Answer the value of inhibitPolicyMapping"\r\r\t^ inhibitPolicyMapping',			#stamp : 'rww 3/28/2007 21:05',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '862' ],		#self : OmReference [ '863' ],		#time : DateAndTime [ '2018-08-16T16:44:10.650551+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyConstraints,				#isMetaSide : false			},			#name : #'inhibitPolicyMapping:',			#protocol : #accessing,			#sourceCode : 'inhibitPolicyMapping: anObject\r\t"Set the value of inhibitPolicyMapping"\r\r\tinhibitPolicyMapping := anObject',			#stamp : 'rww 3/28/2007 21:05',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '863' ],		#self : OmReference [ '864' ],		#time : DateAndTime [ '2018-08-16T16:44:10.651605+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyConstraints,				#isMetaSide : false			},			#name : #requireExplicitPolicy,			#protocol : #accessing,			#sourceCode : 'requireExplicitPolicy\r\t"Answer the value of requireExplicitPolicy"\r\r\t^ requireExplicitPolicy',			#stamp : 'rww 3/29/2007 06:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '864' ],		#self : OmReference [ '865' ],		#time : DateAndTime [ '2018-08-16T16:44:10.652637+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyConstraints,				#isMetaSide : false			},			#name : #'requireExplicitPolicy:',			#protocol : #accessing,			#sourceCode : 'requireExplicitPolicy: anObject\r\t"Set the value of requireExplicitPolicy"\r\r\trequireExplicitPolicy := anObject',			#stamp : 'rww 3/29/2007 06:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '865' ],		#self : OmReference [ '866' ],		#time : DateAndTime [ '2018-08-16T16:44:10.654209+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyInformation,				#isMetaSide : false			},			#name : #id,			#protocol : #accessing,			#sourceCode : 'id\r\t"Answer the value of id"\r\r\t^ id',			#stamp : 'rww 3/28/2007 19:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '866' ],		#self : OmReference [ '867' ],		#time : DateAndTime [ '2018-08-16T16:44:10.655145+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyInformation,				#isMetaSide : false			},			#name : #'id:',			#protocol : #accessing,			#sourceCode : 'id: anObject\r\t"Set the value of id"\r\r\tid := anObject',			#stamp : 'rww 3/28/2007 19:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '867' ],		#self : OmReference [ '868' ],		#time : DateAndTime [ '2018-08-16T16:44:10.656234+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyInformation,				#isMetaSide : false			},			#name : #qualifiers,			#protocol : #accessing,			#sourceCode : 'qualifiers\r\t"Answer the value of qualifiers"\r\r\t^ qualifiers',			#stamp : 'rww 3/28/2007 19:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '868' ],		#self : OmReference [ '869' ],		#time : DateAndTime [ '2018-08-16T16:44:10.657269+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyInformation,				#isMetaSide : false			},			#name : #'qualifiers:',			#protocol : #accessing,			#sourceCode : 'qualifiers: anObject\r\t"Set the value of qualifiers"\r\r\tqualifiers := anObject',			#stamp : 'rww 3/28/2007 19:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '869' ],		#self : OmReference [ '870' ],		#time : DateAndTime [ '2018-08-16T16:44:10.658387+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyMapping,				#isMetaSide : false			},			#name : #issuerDomainPolicy,			#protocol : #accessing,			#sourceCode : 'issuerDomainPolicy\r\t"Answer the value of issuerDomainPolicy"\r\r\t^ issuerDomainPolicy',			#stamp : 'rww 3/28/2007 19:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '870' ],		#self : OmReference [ '871' ],		#time : DateAndTime [ '2018-08-16T16:44:10.659285+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyMapping,				#isMetaSide : false			},			#name : #'issuerDomainPolicy:',			#protocol : #accessing,			#sourceCode : 'issuerDomainPolicy: anObject\r\t"Set the value of issuerDomainPolicy"\r\r\tissuerDomainPolicy := anObject',			#stamp : 'rww 3/28/2007 19:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '871' ],		#self : OmReference [ '872' ],		#time : DateAndTime [ '2018-08-16T16:44:10.660354+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyMapping,				#isMetaSide : false			},			#name : #subjectDomainPolicy,			#protocol : #accessing,			#sourceCode : 'subjectDomainPolicy\r\t"Answer the value of subjectDomainPolicy"\r\r\t^ subjectDomainPolicy',			#stamp : 'rww 3/28/2007 19:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '872' ],		#self : OmReference [ '873' ],		#time : DateAndTime [ '2018-08-16T16:44:10.66203+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyMapping,				#isMetaSide : false			},			#name : #'subjectDomainPolicy:',			#protocol : #accessing,			#sourceCode : 'subjectDomainPolicy: anObject\r\t"Set the value of subjectDomainPolicy"\r\r\tsubjectDomainPolicy := anObject',			#stamp : 'rww 3/28/2007 19:27',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '873' ],		#self : OmReference [ '874' ],		#time : DateAndTime [ '2018-08-16T16:44:10.663196+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyQualifierInfo,				#isMetaSide : false			},			#name : #id,			#protocol : #accessing,			#sourceCode : 'id\r\t"Answer the value of id"\r\r\t^ id',			#stamp : 'rww 3/28/2007 19:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '874' ],		#self : OmReference [ '875' ],		#time : DateAndTime [ '2018-08-16T16:44:10.664152+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyQualifierInfo,				#isMetaSide : false			},			#name : #'id:',			#protocol : #accessing,			#sourceCode : 'id: anObject\r\t"Set the value of id"\r\r\tid := anObject',			#stamp : 'rww 3/28/2007 19:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '875' ],		#self : OmReference [ '876' ],		#time : DateAndTime [ '2018-08-16T16:44:10.665244+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyQualifierInfo,				#isMetaSide : false			},			#name : #qualifier,			#protocol : #accessing,			#sourceCode : 'qualifier\r\t"Answer the value of qualifier"\r\r\t^ qualifier',			#stamp : 'rww 3/28/2007 19:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '876' ],		#self : OmReference [ '877' ],		#time : DateAndTime [ '2018-08-16T16:44:10.666346+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509PolicyQualifierInfo,				#isMetaSide : false			},			#name : #'qualifier:',			#protocol : #accessing,			#sourceCode : 'qualifier: anObject\r\t"Set the value of qualifier"\r\r\tqualifier := anObject',			#stamp : 'rww 3/28/2007 19:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '877' ],		#self : OmReference [ '878' ],		#time : DateAndTime [ '2018-08-16T16:44:10.667425+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509SubjectPublicKeyInfo,				#isMetaSide : false			},			#name : #algorithm,			#protocol : #accessing,			#sourceCode : 'algorithm\r\t"Answer the value of algorithm"\r\r\t^ algorithm',			#stamp : 'rww 9/15/2006 11:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '878' ],		#self : OmReference [ '879' ],		#time : DateAndTime [ '2018-08-16T16:44:10.668322+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509SubjectPublicKeyInfo,				#isMetaSide : false			},			#name : #'algorithm:',			#protocol : #accessing,			#sourceCode : 'algorithm: anObject\r\t"Set the value of algorithm"\r\r\talgorithm := anObject',			#stamp : 'rww 9/15/2006 11:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '879' ],		#self : OmReference [ '880' ],		#time : DateAndTime [ '2018-08-16T16:44:10.669908+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509SubjectPublicKeyInfo,				#isMetaSide : false			},			#name : #asDSAPublicKey,			#protocol : #private,			#sourceCode : 'asDSAPublicKey\r\r\t| params y |\r\tparams := self algorithm parameters.\r\ty := self subjectPublicKeyDecoded.\r\t^ DSAPublicKey p: (params at: 1) q: (params at: 2) g: (params at: 3) y: y.\r',			#stamp : 'rww 3/27/2007 21:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '880' ],		#self : OmReference [ '881' ],		#time : DateAndTime [ '2018-08-16T16:44:10.671022+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509SubjectPublicKeyInfo,				#isMetaSide : false			},			#name : #asPublicKey,			#protocol : #accessing,			#sourceCode : 'asPublicKey\r\r\tself algorithm isDSA ifTrue: [^ self asDSAPublicKey].\r\tself algorithm isRSA ifTrue: [^ self asRSAPublicKey].\r\t^ nil',			#stamp : 'rww 3/27/2007 21:14',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '881' ],		#self : OmReference [ '882' ],		#time : DateAndTime [ '2018-08-16T16:44:10.672381+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509SubjectPublicKeyInfo,				#isMetaSide : false			},			#name : #asRSAPublicKey,			#protocol : #private,			#sourceCode : 'asRSAPublicKey\r\r\t| keys |\r\tkeys := self subjectPublicKeyDecoded.\r\t^ (RSAPublicKey exponent: (keys at: 2) asInteger modulo: (keys at: 1) asInteger).\r',			#stamp : 'rww 9/28/2010 07:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '882' ],		#self : OmReference [ '883' ],		#time : DateAndTime [ '2018-08-16T16:44:10.67349+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509SubjectPublicKeyInfo,				#isMetaSide : false			},			#name : #subjectPublicKey,			#protocol : #accessing,			#sourceCode : 'subjectPublicKey\r\t"Answer the value of subjectPublicKey"\r\r\t^ subjectPublicKey',			#stamp : 'rww 9/15/2006 11:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '883' ],		#self : OmReference [ '884' ],		#time : DateAndTime [ '2018-08-16T16:44:10.674615+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509SubjectPublicKeyInfo,				#isMetaSide : false			},			#name : #'subjectPublicKey:',			#protocol : #accessing,			#sourceCode : 'subjectPublicKey: anObject\r\t"Set the value of subjectPublicKey"\r\r\tsubjectPublicKey := anObject',			#stamp : 'rww 9/15/2006 11:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '884' ],		#self : OmReference [ '885' ],		#time : DateAndTime [ '2018-08-16T16:44:10.675707+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509SubjectPublicKeyInfo,				#isMetaSide : false			},			#name : #subjectPublicKeyDecoded,			#protocol : #accessing,			#sourceCode : 'subjectPublicKeyDecoded\r\r\t^ ASN1Stream decodeBytes: self subjectPublicKey bytes.\r',			#stamp : 'rww 3/28/2007 11:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '885' ],		#self : OmReference [ '886' ],		#time : DateAndTime [ '2018-08-16T16:44:10.676847+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #asAsn1Bytes,			#protocol : #initialize-release,			#sourceCode : 'asAsn1Bytes\r\r\t| type |\r\ttype := (ASN1Module name: #x509) find: #TBSCertificate.\r\t^ ASN1Stream encode: self withType: type\r',			#stamp : 'rww 3/28/2007 12:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '886' ],		#self : OmReference [ '887' ],		#time : DateAndTime [ '2018-08-16T16:44:10.678279+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #extensions,			#protocol : #accessing,			#sourceCode : 'extensions\r\t"Answer the value of extensions"\r\r\t^ extensions',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '887' ],		#self : OmReference [ '888' ],		#time : DateAndTime [ '2018-08-16T16:44:10.679356+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #'extensions:',			#protocol : #accessing,			#sourceCode : 'extensions: anObject\r\t"Set the value of extensions"\r\r\textensions := anObject',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '888' ],		#self : OmReference [ '889' ],		#time : DateAndTime [ '2018-08-16T16:44:10.680434+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #issuer,			#protocol : #accessing,			#sourceCode : 'issuer\r\t"Answer the value of issuer"\r\r\t^ issuer',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '889' ],		#self : OmReference [ '890' ],		#time : DateAndTime [ '2018-08-16T16:44:10.681614+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #'issuer:',			#protocol : #accessing,			#sourceCode : 'issuer: anObject\r\t"Set the value of issuer"\r\r\tissuer := anObject',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '890' ],		#self : OmReference [ '891' ],		#time : DateAndTime [ '2018-08-16T16:44:10.682695+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #issuerUniqueID,			#protocol : #accessing,			#sourceCode : 'issuerUniqueID\r\r\t^ nil',			#stamp : 'rww 3/25/2007 18:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '891' ],		#self : OmReference [ '892' ],		#time : DateAndTime [ '2018-08-16T16:44:10.683763+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #serialNumber,			#protocol : #accessing,			#sourceCode : 'serialNumber\r\t"Answer the value of serialNumber"\r\r\t^ serialNumber',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '892' ],		#self : OmReference [ '893' ],		#time : DateAndTime [ '2018-08-16T16:44:10.684777+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #'serialNumber:',			#protocol : #accessing,			#sourceCode : 'serialNumber: anObject\r\t"Set the value of serialNumber"\r\r\tserialNumber := anObject',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '893' ],		#self : OmReference [ '894' ],		#time : DateAndTime [ '2018-08-16T16:44:10.686388+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #signature,			#protocol : #accessing,			#sourceCode : 'signature\r\t"Answer the value of signature"\r\r\t^ signature',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '894' ],		#self : OmReference [ '895' ],		#time : DateAndTime [ '2018-08-16T16:44:10.687467+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #'signature:',			#protocol : #accessing,			#sourceCode : 'signature: anObject\r\t"Set the value of signature"\r\r\tsignature := anObject',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '895' ],		#self : OmReference [ '896' ],		#time : DateAndTime [ '2018-08-16T16:44:10.688549+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #subject,			#protocol : #accessing,			#sourceCode : 'subject\r\t"Answer the value of subject"\r\r\t^ subject',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '896' ],		#self : OmReference [ '897' ],		#time : DateAndTime [ '2018-08-16T16:44:10.689601+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #'subject:',			#protocol : #accessing,			#sourceCode : 'subject: anObject\r\t"Set the value of subject"\r\r\tsubject := anObject',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '897' ],		#self : OmReference [ '898' ],		#time : DateAndTime [ '2018-08-16T16:44:10.690639+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #subjectPublicKeyInfo,			#protocol : #accessing,			#sourceCode : 'subjectPublicKeyInfo\r\t"Answer the value of subjectPublicKeyInfo"\r\r\t^ subjectPublicKeyInfo',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '898' ],		#self : OmReference [ '899' ],		#time : DateAndTime [ '2018-08-16T16:44:10.691692+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #'subjectPublicKeyInfo:',			#protocol : #accessing,			#sourceCode : 'subjectPublicKeyInfo: anObject\r\t"Set the value of subjectPublicKeyInfo"\r\r\tsubjectPublicKeyInfo := anObject',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '899' ],		#self : OmReference [ '900' ],		#time : DateAndTime [ '2018-08-16T16:44:10.692713+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #subjectUniqueID,			#protocol : #accessing,			#sourceCode : 'subjectUniqueID\r\r\t^ nil',			#stamp : 'rww 3/25/2007 18:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '900' ],		#self : OmReference [ '901' ],		#time : DateAndTime [ '2018-08-16T16:44:10.694356+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #validity,			#protocol : #accessing,			#sourceCode : 'validity\r\t"Answer the value of validity"\r\r\t^ validity',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '901' ],		#self : OmReference [ '902' ],		#time : DateAndTime [ '2018-08-16T16:44:10.695445+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #'validity:',			#protocol : #accessing,			#sourceCode : 'validity: anObject\r\t"Set the value of validity"\r\r\tvalidity := anObject',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '902' ],		#self : OmReference [ '903' ],		#time : DateAndTime [ '2018-08-16T16:44:10.696542+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #version,			#protocol : #accessing,			#sourceCode : 'version\r\t"Answer the value of version"\r\r\t^ version',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '903' ],		#self : OmReference [ '904' ],		#time : DateAndTime [ '2018-08-16T16:44:10.697584+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509TBSCertificate,				#isMetaSide : false			},			#name : #'version:',			#protocol : #accessing,			#sourceCode : 'version: anObject\r\t"Set the value of version"\r\r\tversion := anObject',			#stamp : 'rww 9/15/2006 13:09',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '904' ],		#self : OmReference [ '905' ],		#time : DateAndTime [ '2018-08-16T16:44:10.698706+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Validity,				#isMetaSide : false			},			#name : #notAfter,			#protocol : #accessing,			#sourceCode : 'notAfter\r\t"Answer the value of notAfter"\r\r\t^ notAfter',			#stamp : 'rww 10/5/2006 17:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '905' ],		#self : OmReference [ '906' ],		#time : DateAndTime [ '2018-08-16T16:44:10.699631+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Validity,				#isMetaSide : false			},			#name : #'notAfter:',			#protocol : #accessing,			#sourceCode : 'notAfter: anObject\r\t"Set the value of notAfter"\r\r\tnotAfter := anObject',			#stamp : 'rww 10/5/2006 17:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '906' ],		#self : OmReference [ '907' ],		#time : DateAndTime [ '2018-08-16T16:44:10.700665+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Validity,				#isMetaSide : false			},			#name : #notBefore,			#protocol : #accessing,			#sourceCode : 'notBefore\r\t"Answer the value of notBefore"\r\r\t^ notBefore',			#stamp : 'rww 10/5/2006 17:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '907' ],		#self : OmReference [ '908' ],		#time : DateAndTime [ '2018-08-16T16:44:10.702416+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X509Validity,				#isMetaSide : false			},			#name : #'notBefore:',			#protocol : #accessing,			#sourceCode : 'notBefore: anObject\r\t"Set the value of notBefore"\r\r\tnotBefore := anObject',			#stamp : 'rww 10/5/2006 17:50',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '908' ],		#self : OmReference [ '909' ],		#time : DateAndTime [ '2018-08-16T16:44:10.703578+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520AbstractName,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= anotherName\r\r\t^ self string = anotherName string\r',			#stamp : 'rww 3/30/2007 13:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '909' ],		#self : OmReference [ '910' ],		#time : DateAndTime [ '2018-08-16T16:44:10.704488+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520AbstractName,				#isMetaSide : false			},			#name : #displayName,			#protocol : #printing,			#sourceCode : 'displayName\r\r\t^ \'A\'',			#stamp : 'rww 3/28/2007 13:51',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '910' ],		#self : OmReference [ '911' ],		#time : DateAndTime [ '2018-08-16T16:44:10.705583+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520AbstractName,				#isMetaSide : false			},			#name : #hash,			#protocol : #comparing,			#sourceCode : 'hash\r\r\t^ self string hash\r',			#stamp : 'rww 3/30/2007 13:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '911' ],		#self : OmReference [ '912' ],		#time : DateAndTime [ '2018-08-16T16:44:10.706651+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520AbstractName,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: stream\r\r\tstream nextPutAll: self displayName.\r\tstream nextPutAll: \' = \'.\r\tself string printOn: stream.\r',			#stamp : 'rww 3/28/2007 14:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '912' ],		#self : OmReference [ '913' ],		#time : DateAndTime [ '2018-08-16T16:44:10.707675+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520AbstractName,				#isMetaSide : false			},			#name : #string,			#protocol : #accessing,			#sourceCode : 'string\r\t"Answer the value of string"\r\r\t^ string',			#stamp : 'rww 3/28/2007 13:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '913' ],		#self : OmReference [ '914' ],		#time : DateAndTime [ '2018-08-16T16:44:10.708727+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520AbstractName,				#isMetaSide : false			},			#name : #'string:',			#protocol : #accessing,			#sourceCode : 'string: anObject\r\t"Set the value of string"\r\r\tstring := anObject',			#stamp : 'rww 3/28/2007 13:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '914' ],		#self : OmReference [ '915' ],		#time : DateAndTime [ '2018-08-16T16:44:10.71045+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520CommonName,				#isMetaSide : false			},			#name : #displayName,			#protocol : #printing,			#sourceCode : 'displayName\r\r\t^ \'CN\'',			#stamp : 'rww 3/28/2007 13:48',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '915' ],		#self : OmReference [ '916' ],		#time : DateAndTime [ '2018-08-16T16:44:10.71138+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520CountryName,				#isMetaSide : false			},			#name : #displayName,			#protocol : #printing,			#sourceCode : 'displayName\r\r\t^ \'C\'',			#stamp : 'rww 3/28/2007 13:48',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '916' ],		#self : OmReference [ '917' ],		#time : DateAndTime [ '2018-08-16T16:44:10.712305+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520LocalityName,				#isMetaSide : false			},			#name : #displayName,			#protocol : #printing,			#sourceCode : 'displayName\r\r\t^ \'L\'',			#stamp : 'rww 3/28/2007 13:51',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '917' ],		#self : OmReference [ '918' ],		#time : DateAndTime [ '2018-08-16T16:44:10.71326+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520Name,				#isMetaSide : false			},			#name : #displayName,			#protocol : #printing,			#sourceCode : 'displayName\r\r\t^ \'N\'',			#stamp : 'rww 3/28/2007 13:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '918' ],		#self : OmReference [ '919' ],		#time : DateAndTime [ '2018-08-16T16:44:10.714136+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520OrganizationName,				#isMetaSide : false			},			#name : #displayName,			#protocol : #printing,			#sourceCode : 'displayName\r\r\t^ \'O\'',			#stamp : 'rww 3/28/2007 13:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '919' ],		#self : OmReference [ '920' ],		#time : DateAndTime [ '2018-08-16T16:44:10.715133+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520OrganizationalUnitName,				#isMetaSide : false			},			#name : #displayName,			#protocol : #printing,			#sourceCode : 'displayName\r\r\t^ \'OU\'',			#stamp : 'rww 3/28/2007 13:52',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '920' ],		#self : OmReference [ '921' ],		#time : DateAndTime [ '2018-08-16T16:44:10.716053+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520Pkcs9EmailAddress,				#isMetaSide : false			},			#name : #displayName,			#protocol : #printing,			#sourceCode : 'displayName\r\r\t^ \'E\'',			#stamp : 'rww 3/28/2007 13:53',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '921' ],		#self : OmReference [ '922' ],		#time : DateAndTime [ '2018-08-16T16:44:10.716967+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520StateOrProvinceName,				#isMetaSide : false			},			#name : #displayName,			#protocol : #printing,			#sourceCode : 'displayName\r\r\t^ \'S\'',			#stamp : 'rww 3/28/2007 13:53',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '922' ],		#self : OmReference [ '923' ],		#time : DateAndTime [ '2018-08-16T16:44:10.71849+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520Attribute,				#isMetaSide : false			},			#name : #'=',			#protocol : #comparing,			#sourceCode : '= attr\r\r\t^ self attrOid = attr attrOid\r\t\tand: [self attrValue = attr attrValue]',			#stamp : 'rww 1/23/2007 20:51',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '923' ],		#self : OmReference [ '924' ],		#time : DateAndTime [ '2018-08-16T16:44:10.719433+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520Attribute,				#isMetaSide : false			},			#name : #attrOid,			#protocol : #accessing,			#sourceCode : 'attrOid\r\t"Answer the value of attrOid"\r\r\t^ attrOid',			#stamp : 'rww 10/6/2006 23:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '924' ],		#self : OmReference [ '925' ],		#time : DateAndTime [ '2018-08-16T16:44:10.720518+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520Attribute,				#isMetaSide : false			},			#name : #'attrOid:',			#protocol : #accessing,			#sourceCode : 'attrOid: anObject\r\t"Set the value of attrOid"\r\r\tattrOid := anObject',			#stamp : 'rww 10/6/2006 23:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '925' ],		#self : OmReference [ '926' ],		#time : DateAndTime [ '2018-08-16T16:44:10.721676+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520Attribute,				#isMetaSide : false			},			#name : #attrValue,			#protocol : #accessing,			#sourceCode : 'attrValue\r\t"Answer the value of attrValue"\r\r\t^ attrValue',			#stamp : 'rww 10/6/2006 23:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '926' ],		#self : OmReference [ '927' ],		#time : DateAndTime [ '2018-08-16T16:44:10.722738+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520Attribute,				#isMetaSide : false			},			#name : #'attrValue:',			#protocol : #accessing,			#sourceCode : 'attrValue: anObject\r\t"Set the value of attrValue"\r\r\tattrValue := anObject',			#stamp : 'rww 10/6/2006 23:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '927' ],		#self : OmReference [ '928' ],		#time : DateAndTime [ '2018-08-16T16:44:10.723779+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520Attribute,				#isMetaSide : false			},			#name : #hash,			#protocol : #comparing,			#sourceCode : 'hash\r\r\t^ self attrOid hash + self attrValue hash',			#stamp : 'rww 3/26/2007 11:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '928' ],		#self : OmReference [ '929' ],		#time : DateAndTime [ '2018-08-16T16:44:10.724827+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520Attribute,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #initialize-release,			#sourceCode : 'printOn: stream\r\r\tstream nextPutAll: self attrValue asString.\r',			#stamp : 'rww 3/28/2007 20:00',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '929' ],		#self : OmReference [ '930' ],		#time : DateAndTime [ '2018-08-16T16:44:10.726521+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #X520Attribute,				#isMetaSide : false			},			#name : #shortName,			#protocol : #accessing,			#sourceCode : 'shortName\r\r\t^ \'Attribute-\', self attrOid oid',			#stamp : 'rww 10/7/2006 07:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '930' ],		#self : OmReference [ '931' ],		#time : DateAndTime [ '2018-08-16T16:44:10.728571+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #asAsn1Bytes,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asAsn1Bytes\r\r\t^ ASN1Stream encode: self.\r',			#stamp : 'rww 3/28/2007 12:03',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '931' ],		#self : OmReference [ '932' ],		#time : DateAndTime [ '2018-08-16T16:44:10.730082+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asn1Tag\r\r\t^ 5',			#stamp : 'rww 3/25/2007 12:28',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '932' ],		#self : OmReference [ '933' ],		#time : DateAndTime [ '2018-08-16T16:44:10.730882+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DSAPublicKey class',				#isMetaSide : true			},			#name : #'fromAsnDerBytes:',			#protocol : #'instance creation',			#sourceCode : 'fromAsnDerBytes: bytes\r\r\t| collection algorithm dssSig p q g y |\r\tcollection := ASN1Stream decodeBytes: bytes.\r\talgorithm := collection first.\r\tdssSig := algorithm last.\r\t(dssSig size = 3) ifFalse: [self error: \'incorrect number of dss parameters\'].\r\tp := dssSig at: 1.\r\tq := dssSig at: 2.\r\tg := dssSig at: 3.\r\ty := ASN1Stream decodeBytes: collection last bytes.\r\t^ DSAPublicKey p: p q: q g: g y: y.\r',			#stamp : 'rww 3/28/2007 11:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '933' ],		#self : OmReference [ '934' ],		#time : DateAndTime [ '2018-08-16T16:44:10.732069+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPublicKey,				#isMetaSide : false			},			#name : #asAsn1Bytes,			#protocol : #'as yet unclassified',			#sourceCode : 'asAsn1Bytes\r\r\t| algorithm keyInfo |\r\talgorithm := OrderedCollection \r\t\twith: (ASN1ObjectId fromString: \'1.2.840.10040.4.1\') \r\t\twith: self dssSig.\r\tkeyInfo := OrderedCollection with: algorithm with: self subjectPublicKey.\r\t^ keyInfo asAsn1Bytes.\r',			#stamp : 'rww 3/28/2007 12:07',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '934' ],		#self : OmReference [ '935' ],		#time : DateAndTime [ '2018-08-16T16:44:10.733021+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DSAPublicKey,				#isMetaSide : false			},			#name : #subjectPublicKey,			#protocol : #'as yet unclassified',			#sourceCode : 'subjectPublicKey\r\r\t^ ASN1BitString fromByteArray: y asAsn1Bytes',			#stamp : 'rww 3/28/2007 12:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '935' ],		#self : OmReference [ '936' ],		#time : DateAndTime [ '2018-08-16T16:44:10.735832+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #String,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asn1Tag\r\r\t^ 12\r',			#stamp : 'rww 3/25/2007 10:45',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '936' ],		#self : OmReference [ '937' ],		#time : DateAndTime [ '2018-08-16T16:44:10.737682+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #String,				#isMetaSide : false			},			#name : #formatASN1,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'formatASN1\r\t"return a asn1 tab formed string\r\t\'30818513818154686973206973206120313239206279746520737472696E672C2062757420746861742069732061207265616C6C79206C6F6E6720737472696E6720736F204920686176652061206C6F7420746F20747970652E20204E6F7065204920616D206E6F7420646F6E65207965742C207374696C6C206E6F7420646F6E6520616C6D6F\' formatASN1\r\t"\r\t^self formatASN1TabLevel: 0',			#stamp : 'RJT 9/1/2006 15:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '937' ],		#self : OmReference [ '938' ],		#time : DateAndTime [ '2018-08-16T16:44:10.739399+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #String,				#isMetaSide : false			},			#name : #'formatASN1TabLevel:',			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'formatASN1TabLevel: aTabLevel\r\t| aReadStream aWriteStream | \r\t"return a asn1 tab formed string\r\t\'30818513818154686973206973206120313239206279746520737472696E672C2062757420746861742069732061207265616C6C79206C6F6E6720737472696E6720736F204920686176652061206C6F7420746F20747970652E20204E6F7065204920616D206E6F7420646F6E65207965742C207374696C6C206E6F7420646F6E6520616C6D6F\' formatASN1\r\t"\r\taReadStream := ((self copyWithoutAll: {Character space. Character tab. Character cr}) divideBySize: 2) readStream.\r\taWriteStream := String new writeStream.\r\taWriteStream nextPutAll: (aReadStream formatASN1TabLevel: aTabLevel).\r\t^aWriteStream contents',			#stamp : 'RJT 9/1/2006 15:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '938' ],		#self : OmReference [ '939' ],		#time : DateAndTime [ '2018-08-16T16:44:10.741054+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #String,				#isMetaSide : false			},			#name : #'tokensBasedOn:',			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'tokensBasedOn: aChar\r\t"Answer an array of the substrings that compose the receiver."\r\t| result end begin |\r\r\tresult := WriteStream on: (Array new: 10).\r\r\tbegin := 1.\r\t"find one substring each time through this loop"\r\t[ \r\t\t"find the beginning of the next substring"\r\t\tend := self indexOf: aChar startingAt: begin ifAbsent: [ nil ].\r\t\tend ~~ nil ] \r\twhileTrue: [\r\t\tresult nextPut: (self copyFrom: begin to: end - 1).\r\t\tbegin := end + 1].\r\tresult nextPut: (self copyFrom: begin to: self size).\r\t^result contents\r',			#stamp : 'RJT 12/18/2006 10:08',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '939' ],		#self : OmReference [ '940' ],		#time : DateAndTime [ '2018-08-16T16:44:10.742586+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SequenceableCollection,				#isMetaSide : false			},			#name : #asAsn1Bytes,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asAsn1Bytes\r\r\t^ ASN1Stream encode: self.\r',			#stamp : 'rww 3/28/2007 12:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '940' ],		#self : OmReference [ '941' ],		#time : DateAndTime [ '2018-08-16T16:44:10.744072+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SequenceableCollection,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asn1Tag\r\r\t^ 48\r',			#stamp : 'rww 3/25/2007 10:44',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '941' ],		#self : OmReference [ '942' ],		#time : DateAndTime [ '2018-08-16T16:44:10.747403+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Boolean,				#isMetaSide : false			},			#name : #asAsn1Bytes,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asAsn1Bytes\r\r\t^ ASN1Stream encode: self.\r',			#stamp : 'rww 3/28/2007 12:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '942' ],		#self : OmReference [ '943' ],		#time : DateAndTime [ '2018-08-16T16:44:10.748937+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Boolean,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asn1Tag\r\r\t^ 1\r',			#stamp : 'rww 3/25/2007 10:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '943' ],		#self : OmReference [ '944' ],		#time : DateAndTime [ '2018-08-16T16:44:10.750507+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ReadStream,				#isMetaSide : false			},			#name : #'formatASN1TabLevel:',			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'formatASN1TabLevel: aTabLevel \r\t| result tag aString size tabs sizeAndBytes bytes |\r\tself atEnd\r\t\tifTrue: [^ String new].\r\ttabs := ((1 to: aTabLevel)\r\t\t\t\tcollect: [:i | \'.\' , String tab]) merge.\r\tresult := tabs , (tag := self next) , String tab.\r\tsizeAndBytes := tag = \'00\'\r\t\t\t\tifTrue: [(Number readFrom: (bytes := self next: 2) merge asUppercase base: 16) -> bytes merge]\r\t\t\t\tifFalse: [Integer asnDerLengthFromHexStreamWithBytes: self].\r\tsize := sizeAndBytes key.\r\taString := (self next: size) merge.\r\taString isEmpty\r\t\tifTrue: [aString := String new].\r\t(tag = \'30\'\r\t\t\tor: [tag = \'31\'\r\t\t\t\t\tor: [tag first asLowercase = $a or: [tag = \'00\']]])\r\t\tifTrue: [result := result , sizeAndBytes value , \' (\' , size asString , \'): \' , String cr\r\t\t\t\t\t\t, (aString formatASN1TabLevel: aTabLevel + 1)]\r\t\tifFalse: [result := result , sizeAndBytes value , \' (\' , size asString , \'): \' , String cr , tabs , String tab , aString , String cr\r\t\t\t\t\t\t, (self formatASN1TabLevel: aTabLevel)].\r\t^ result\r\t\t, (self formatASN1TabLevel: aTabLevel)',			#stamp : 'RJT 9/1/2006 17:19',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '944' ],		#self : OmReference [ '945' ],		#time : DateAndTime [ '2018-08-16T16:44:10.751992+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DateAndTime,				#isMetaSide : false			},			#name : #asAsn1Bytes,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asAsn1Bytes\r\r\t^ ASN1Stream encode: self.\r',			#stamp : 'rww 3/28/2007 12:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '945' ],		#self : OmReference [ '946' ],		#time : DateAndTime [ '2018-08-16T16:44:10.753437+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DateAndTime,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asn1Tag\r\r\t^ 23\r',			#stamp : 'rww 3/25/2007 10:44',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '946' ],		#self : OmReference [ '947' ],		#time : DateAndTime [ '2018-08-16T16:44:10.754829+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Set,				#isMetaSide : false			},			#name : #asAsn1Bytes,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asAsn1Bytes\r\r\t^ ASN1Stream encode: self.\r',			#stamp : 'rww 3/28/2007 12:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '947' ],		#self : OmReference [ '948' ],		#time : DateAndTime [ '2018-08-16T16:44:10.756126+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Set,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asn1Tag\r\r\t^ 49\r',			#stamp : 'rww 3/25/2007 10:44',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '948' ],		#self : OmReference [ '949' ],		#time : DateAndTime [ '2018-08-16T16:44:10.758197+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ByteArray,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asn1Tag\r\r\t^ 4\r',			#stamp : 'rww 3/25/2007 10:43',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '949' ],		#self : OmReference [ '950' ],		#time : DateAndTime [ '2018-08-16T16:44:10.759619+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Integer class',				#isMetaSide : true			},			#name : #'asnDerLengthFromHexStreamWithBytes:',			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asnDerLengthFromHexStreamWithBytes: aStream\r\r\t| byte length bytes |\r\tbytes := OrderedCollection new.\r\tbyte := (Number readFrom: ((bytes add: aStream next) ifNil: [^0->#()]) asUppercase base: 16).\r\tbyte <= 16r80\r\t\tifTrue: [^byte->bytes merge]\r\t\tifFalse: [\r\t\t\tlength := 0.\r\t\t\t(byte bitAnd: 16r7F) timesRepeat: [\r\t\t\t\tlength := (length bitShift: 8) bitOr: (Number readFrom: (bytes add: aStream next) asUppercase base: 16).].\r\t\t\t^ length->(bytes merge)].',			#stamp : 'RJT 8/31/2006 10:20',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '950' ],		#self : OmReference [ '951' ],		#time : DateAndTime [ '2018-08-16T16:44:10.761022+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Integer,				#isMetaSide : false			},			#name : #asAsn1Bytes,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asAsn1Bytes\r\r\t^ ASN1Stream encode: self.\r',			#stamp : 'rww 3/28/2007 12:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '951' ],		#self : OmReference [ '952' ],		#time : DateAndTime [ '2018-08-16T16:44:10.762418+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Integer,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #'*Cryptography-ASN1',			#sourceCode : 'asn1Tag\r\r\t^ 2\r',			#stamp : 'rww 3/25/2007 10:44',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '952' ],		#self : OmReference [ '953' ],		#time : DateAndTime [ '2018-08-16T16:44:10.763169+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #OrderedSet,				#isMetaSide : false			},			#name : #asn1Tag,			#protocol : #accessing,			#sourceCode : 'asn1Tag\r\r\t^ 49\r',			#stamp : 'rww 4/16/2007 02:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '953' ],		#self : OmReference [ '954' ],		#time : DateAndTime [ '2018-08-16T16:44:10.764559+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'RandomGenerator class',				#isMetaSide : true			},			#name : #destroyPickers,			#protocol : #initialize-release,			#sourceCode : 'destroyPickers\r\tself withAllSubclassesDo: \r\t\t[ : each | \r\t\t(each instVarNamed: \'picker\') ifNotNil: [ : thePicker | thePicker destroy ].\r\t\teach \r\t\t\tinstVarNamed: \'picker\'\r\t\t\tput: nil ]',			#stamp : ' 8/16/2018 00:08:53',			#package : #Cryptography		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'RandomGenerator class',				#isMetaSide : true			},			#name : #destroyPickers,			#protocol : #initialize-release,			#sourceCode : 'destroyPickers\r\tself withAllSubclassesDo: \r\t\t[ : each | \r\t\t(each instVarNamed: \'picker\') ifNotNilDo: [ : thePicker | thePicker destroy ].\r\t\teach \r\t\t\tinstVarNamed: \'picker\'\r\t\t\tput: nil ]',			#stamp : 'cmm 12/16/2006 10:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '954' ],		#self : OmReference [ '955' ],		#time : DateAndTime [ '2018-08-16T16:44:10.766052+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'HashFunction class',				#isMetaSide : true			},			#name : #'digestInfoAsn1DerEncodingFromMessage:',			#protocol : #'*Cryptography',			#sourceCode : 'digestInfoAsn1DerEncodingFromMessage: msg\r\r\t^ (self digestInfoFromMessage: msg) asAsn1Bytes',			#stamp : 'rww 9/21/2010 14:34',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '955' ],		#self : OmReference [ '956' ],		#time : DateAndTime [ '2018-08-16T16:44:10.767829+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'HashFunction class',				#isMetaSide : true			},			#name : #'digestInfoFromMessage:',			#protocol : #'*Cryptography',			#sourceCode : 'digestInfoFromMessage: msg\r\r\t^ (OrderedCollection \r\t\twith: (OrderedCollection with: self oid with: nil)\r\t\twith: (self hashMessage: msg))\r',			#stamp : 'rww 9/21/2010 14:33',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '956' ],		#self : OmReference [ '957' ],		#time : DateAndTime [ '2018-08-16T16:44:10.768703+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'HashFunction class',				#isMetaSide : true			},			#name : #'doubleHashMessage:',			#protocol : #'*Cryptography',			#sourceCode : 'doubleHashMessage: aStringOrByteArray \r\t^ self new doubleHashMessage: aStringOrByteArray',			#stamp : 'cmm 1/27/2009 19:44',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '957' ],		#self : OmReference [ '958' ],		#time : DateAndTime [ '2018-08-16T16:44:10.769549+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'HashFunction class',				#isMetaSide : true			},			#name : #oid,			#protocol : #'*Cryptography',			#sourceCode : 'oid\r\r\t^ ASN1ObjectId fromString: self oidString.\r',			#stamp : 'rww 9/21/2010 14:35',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '958' ],		#self : OmReference [ '959' ],		#time : DateAndTime [ '2018-08-16T16:44:10.770386+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'HashFunction class',				#isMetaSide : true			},			#name : #oidString,			#protocol : #'*Cryptography',			#sourceCode : 'oidString\r\r\t^ self subclassResponsibility',			#stamp : 'rww 9/21/2010 13:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '959' ],		#self : OmReference [ '960' ],		#time : DateAndTime [ '2018-08-16T16:44:10.771214+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testBMPString,			#protocol : #'tests - base',			#sourceCode : 'testBMPString\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(30 11 104 101 108 108 111 32 119 111 114 108 100).\r\ttestObj := \'hello world\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '960' ],		#self : OmReference [ '961' ],		#time : DateAndTime [ '2018-08-16T16:44:10.772445+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testBaseExplicitType,			#protocol : #'tests - defined types',			#sourceCode : 'testBaseExplicitType\r\r\t| bytes obj newBytes type |\r\t(ASN1Module name: #test) explicit: #TestExplicit type: #ASN1IntegerType tag: 0.\r\r\ttype := (ASN1Module name: #test) find: #TestExplicit.\r\tbytes := #(160 4 2 2 3 21).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj = 789).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/31/2007 00:26',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '961' ],		#self : OmReference [ '962' ],		#time : DateAndTime [ '2018-08-16T16:44:10.773708+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testBaseImplicitConstructedType,			#protocol : #'tests - defined types',			#sourceCode : 'testBaseImplicitConstructedType\r\r\t| bytes obj newBytes type |\r\t(ASN1Module name: #test) implicit: #TestImplicit type: #ASN1SequenceType tag: 0.\r\r\ttype := (ASN1Module name: #test) find: #TestImplicit.\r\tbytes := #(160 4 2 2 3 21).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj = (OrderedCollection with: 789)).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/31/2007 00:25',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '962' ],		#self : OmReference [ '963' ],		#time : DateAndTime [ '2018-08-16T16:44:10.775607+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testBaseImplicitPrimitiveType,			#protocol : #'tests - defined types',			#sourceCode : 'testBaseImplicitPrimitiveType\r\r\t| bytes obj newBytes type |\r\t(ASN1Module name: #test) implicit: #TestImplicit type: #ASN1IntegerType tag: 0.\r\r\ttype := (ASN1Module name: #test) find: #TestImplicit.\r\tbytes := #(128 2 3 21).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj = 789).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/31/2007 00:23',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '963' ],		#self : OmReference [ '964' ],		#time : DateAndTime [ '2018-08-16T16:44:10.776892+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testBitString,			#protocol : #'tests - base',			#sourceCode : 'testBitString\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(3 3 3 168 121).\r\ttestObj := ASN1BitString new \r\t\tbytes: #(168 121); \r\t\tbitsPadding: 3; \r\t\tyourself.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '964' ],		#self : OmReference [ '965' ],		#time : DateAndTime [ '2018-08-16T16:44:10.778081+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testBoolean,			#protocol : #'tests - base',			#sourceCode : 'testBoolean\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(1 1 255).\r\ttestObj := true.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '965' ],		#self : OmReference [ '966' ],		#time : DateAndTime [ '2018-08-16T16:44:10.779235+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testByteArray,			#protocol : #'tests - base',			#sourceCode : 'testByteArray\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(4 5 3 21 55 43 76).\r\ttestObj := #(3 21 55 43 76) asByteArray.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '966' ],		#self : OmReference [ '967' ],		#time : DateAndTime [ '2018-08-16T16:44:10.780387+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testConstructedBMPString,			#protocol : #'tests - BER',			#sourceCode : 'testConstructedBMPString\r\r\t| bytes obj testObj |\r\tbytes := #(62 15 30 5 84 101 115 116 32 30 6 85 115 101 114 32 49).\r\ttestObj := \'Test User 1\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '967' ],		#self : OmReference [ '968' ],		#time : DateAndTime [ '2018-08-16T16:44:10.781556+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testConstructedBitString,			#protocol : #'tests - BER',			#sourceCode : 'testConstructedBitString\r\r\t| bytes obj testObj |\r\tbytes := #(35 9 3 3 0 110 93 3 2 6 192).\r\ttestObj := ASN1BitString new\r\t\tbytes: #(110 93 192) asByteArray;\r\t\tbitsPadding: 6;\r\t\tyourself.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '968' ],		#self : OmReference [ '969' ],		#time : DateAndTime [ '2018-08-16T16:44:10.782836+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testConstructedByteArray,			#protocol : #'tests - BER',			#sourceCode : 'testConstructedByteArray\r\r\t| bytes obj testObj |\r\tbytes := #(36 12 4 4 1 35 69 103 4 4 137 171 205 239).\r\ttestObj :=#(1 35 69 103 137 171 205 239) asByteArray.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r',			#stamp : 'rww 3/28/2007 11:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '969' ],		#self : OmReference [ '970' ],		#time : DateAndTime [ '2018-08-16T16:44:10.784671+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testConstructedIA5String,			#protocol : #'tests - BER',			#sourceCode : 'testConstructedIA5String\r\r\t| bytes obj testObj |\r\tbytes := #(54 15 22 5 84 101 115 116 32 22 6 85 115 101 114 32 49).\r\ttestObj := \'Test User 1\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r',			#stamp : 'rww 3/28/2007 11:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '970' ],		#self : OmReference [ '971' ],		#time : DateAndTime [ '2018-08-16T16:44:10.785824+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testConstructedPrintableString,			#protocol : #'tests - BER',			#sourceCode : 'testConstructedPrintableString\r\r\t| bytes obj testObj |\r\tbytes := #(51 15 19 5 84 101 115 116 32 19 6 85 115 101 114 32 49).\r\ttestObj := \'Test User 1\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '971' ],		#self : OmReference [ '972' ],		#time : DateAndTime [ '2018-08-16T16:44:10.786966+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testConstructedTeletexString,			#protocol : #'tests - BER',			#sourceCode : 'testConstructedTeletexString\r\r\t| bytes obj testObj |\r\tbytes := #(52 15 20 5 84 101 115 116 32 20 6 85 115 101 114 32 49).\r\ttestObj := \'Test User 1\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r',			#stamp : 'rww 3/28/2007 11:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '972' ],		#self : OmReference [ '973' ],		#time : DateAndTime [ '2018-08-16T16:44:10.788093+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testConstructedUTF8String,			#protocol : #'tests - BER',			#sourceCode : 'testConstructedUTF8String\r\r\t| bytes obj testObj |\r\tbytes := #(44 15 12 5 84 101 115 116 32 12 6 85 115 101 114 32 49).\r\ttestObj := \'Test User 1\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r',			#stamp : 'rww 3/28/2007 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '973' ],		#self : OmReference [ '974' ],		#time : DateAndTime [ '2018-08-16T16:44:10.789218+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testConstructedUniversalString,			#protocol : #'tests - BER',			#sourceCode : 'testConstructedUniversalString\r\r\t| bytes obj testObj |\r\tbytes := #(60 15 28 5 84 101 115 116 32 28 6 85 115 101 114 32 49).\r\ttestObj := \'Test User 1\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r',			#stamp : 'rww 3/28/2007 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '974' ],		#self : OmReference [ '975' ],		#time : DateAndTime [ '2018-08-16T16:44:10.790438+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedAnyDefinedByType,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedAnyDefinedByType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) sequence: #TestSequence mapping: ASN1TestModel)\r\t\tadd: #testSlot1 type: #ASN1ObjectIdentifierType;\r\t\tadd: #testSlot2 type: #TestAnyDefinedBy;\r\t\tyourself.\r\t((ASN1Module name: #test) any: #TestAnyDefinedBy definedBy: #testSlot1)\r\t\tat: (ASN1ObjectId fromString: \'1.1\') put: #ASN1BooleanType;\r\t\tat: (ASN1ObjectId fromString: \'1.2\') put: #ASN1IntegerType;\r\t\tyourself.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\r\tbytes := #(48 6 6 1 41 1 1 255).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = (ASN1ObjectId fromString: \'1.1\')).\r\tself assert: (obj testSlot2 = true).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r\r\tbytes := #(48 7 6 1 42 2 2 3 21).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = (ASN1ObjectId fromString: \'1.2\')).\r\tself assert: (obj testSlot2 = 789).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '975' ],		#self : OmReference [ '976' ],		#time : DateAndTime [ '2018-08-16T16:44:10.792259+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedAnyType,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedAnyType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) sequence: #TestSequence mapping: ASN1TestModel)\r\t\tadd: #testSlot1 type: #ASN1AnyType;\r\t\tyourself.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\r\tbytes := #(48 3 1 1 255).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = true).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r\r\tbytes := #(48 4 2 2 3 21).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = 789).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '976' ],		#self : OmReference [ '977' ],		#time : DateAndTime [ '2018-08-16T16:44:10.793519+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedChoiceType,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedChoiceType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) sequence: #TestSequence mapping: ASN1TestModel)\r\t\tadd: #testSlot1 type: #TestChoice;\r\t\tyourself.\r\t((ASN1Module name: #test) choice: #TestChoice)\r\t\tadd: #boolean type: #ASN1BooleanType;\r\t\tadd: #integer type: #ASN1IntegerType;\r\t\tyourself.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\r\tbytes := #(48 3 1 1 255).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = true).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r\r\tbytes := #(48 4 2 2 3 21).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = 789).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '977' ],		#self : OmReference [ '978' ],		#time : DateAndTime [ '2018-08-16T16:44:10.794725+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedExplicitType,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedExplicitType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) sequence: #TestSequence mapping: ASN1TestModel)\r\t\tadd: #testSlot1 type: #ASN1IntegerType explicitTag: 0;\r\t\tyourself.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\tbytes := #(48 6 160 4 2 2 3 21).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = 789).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '978' ],		#self : OmReference [ '979' ],		#time : DateAndTime [ '2018-08-16T16:44:10.795893+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedImplicitConstructedType,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedImplicitConstructedType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) sequence: #TestSequence mapping: ASN1TestModel)\r\t\tadd: #testSlot1 type: #ASN1SequenceType implicitTag: 0;\r\t\tyourself.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\tbytes := #(48 6 160 4 2 2 3 21).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = (OrderedCollection with: 789)).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '979' ],		#self : OmReference [ '980' ],		#time : DateAndTime [ '2018-08-16T16:44:10.797056+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedImplicitPrimitiveType,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedImplicitPrimitiveType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) sequence: #TestSequence mapping: ASN1TestModel)\r\t\tadd: #testSlot1 type: #ASN1IntegerType implicitTag: 0;\r\t\tyourself.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\tbytes := #(48 4 128 2 3 21).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = 789).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '980' ],		#self : OmReference [ '981' ],		#time : DateAndTime [ '2018-08-16T16:44:10.798221+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedMappedBMPStringType,			#protocol : #'tests - mapped',			#sourceCode : 'testDefinedMappedBMPStringType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) mapped: #TestMapped)\r\t\tmapping: ASN1TestModel mappingSymbol: #testSlot1 type: #ASN1BMPStringType.\r\ttype := (ASN1Module name: #test) find: #TestMapped.\r\r\tbytes := #(30 11 104 101 108 108 111 32 119 111 114 108 100).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = \'hello world\').\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '981' ],		#self : OmReference [ '982' ],		#time : DateAndTime [ '2018-08-16T16:44:10.799371+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedMappedBooleanType,			#protocol : #'tests - mapped',			#sourceCode : 'testDefinedMappedBooleanType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) mapped: #TestMapped)\r\t\tmapping: ASN1TestModel mappingSymbol: #testSlot1 type: #ASN1BooleanType.\r\ttype := (ASN1Module name: #test) find: #TestMapped.\r\r\tbytes := #(1 1 255).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = true).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '982' ],		#self : OmReference [ '983' ],		#time : DateAndTime [ '2018-08-16T16:44:10.801185+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedMappedIntegerType,			#protocol : #'tests - mapped',			#sourceCode : 'testDefinedMappedIntegerType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) mapped: #TestMapped)\r\t\tmapping: ASN1TestModel mappingSymbol: #testSlot1 type: #ASN1IntegerType.\r\ttype := (ASN1Module name: #test) find: #TestMapped.\r\r\tbytes := #(2 2 3 21).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = 789).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '983' ],		#self : OmReference [ '984' ],		#time : DateAndTime [ '2018-08-16T16:44:10.802345+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedMappedSequenceType,			#protocol : #'tests - mapped',			#sourceCode : 'testDefinedMappedSequenceType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) mapped: #TestMapped)\r\t\tmapping: ASN1TestModel mappingSymbol: #testSlot1 type: #TestSequence.\r\t((ASN1Module name: #test) sequence: #TestSequence mapping: ASN1TestModel)\r\t\tadd: #testSlot1 type: #ASN1BooleanType.\r\ttype := (ASN1Module name: #test) find: #TestMapped.\r\r\tbytes := #(48 3 1 1 255).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 testSlot1 = true).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '984' ],		#self : OmReference [ '985' ],		#time : DateAndTime [ '2018-08-16T16:44:10.804091+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedMappedUTF8StringType,			#protocol : #'tests - mapped',			#sourceCode : 'testDefinedMappedUTF8StringType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) mapped: #TestMapped)\r\t\tmapping: ASN1TestModel mappingSymbol: #testSlot1 type: #ASN1StringType.\r\ttype := (ASN1Module name: #test) find: #TestMapped.\r\r\tbytes := #(12 11 104 101 108 108 111 32 119 111 114 108 100).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = \'hello world\').\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '985' ],		#self : OmReference [ '986' ],		#time : DateAndTime [ '2018-08-16T16:44:10.805896+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedSequenceOfType,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedSequenceOfType\r\r\t| bytes obj newBytes type |\r\t(ASN1Module name: #test) sequence: #TestSequence of: #ASN1BooleanType.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\tbytes := #(48 3 1 1 255).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: OrderedCollection).\r\tself assert: (obj first = true).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '986' ],		#self : OmReference [ '987' ],		#time : DateAndTime [ '2018-08-16T16:44:10.807785+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedSequenceType,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedSequenceType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) sequence: #TestSequence mapping: ASN1TestModel)\r\t\tadd: #testSlot1 type: #ASN1BooleanType;\r\t\tyourself.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\tbytes := #(48 3 1 1 255).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = true).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '987' ],		#self : OmReference [ '988' ],		#time : DateAndTime [ '2018-08-16T16:44:10.809213+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedSequenceTypeDefault,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedSequenceTypeDefault\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) sequence: #TestSequence mapping: ASN1TestModel)\r\t\tadd: #testSlot1 type: #ASN1BooleanType default: false;\r\t\tyourself.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\tbytes := #(48 0).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = false).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:33',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '988' ],		#self : OmReference [ '989' ],		#time : DateAndTime [ '2018-08-16T16:44:10.811226+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedSequenceTypeOptional,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedSequenceTypeOptional\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) sequence: #TestSequence mapping: ASN1TestModel)\r\t\taddOptional: #testSlot1 type: #ASN1BooleanType;\r\t\tyourself.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\tbytes := #(48 0).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '989' ],		#self : OmReference [ '990' ],		#time : DateAndTime [ '2018-08-16T16:44:10.812477+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedSequenceTypeOptionalDefault,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedSequenceTypeOptionalDefault\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) sequence: #TestSequence mapping: ASN1TestModel)\r\t\taddOptional: #testSlot1 type: #ASN1BooleanType default: false;\r\t\tyourself.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\tbytes := #(48 0).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = false).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:33',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '990' ],		#self : OmReference [ '991' ],		#time : DateAndTime [ '2018-08-16T16:44:10.81377+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedSetType,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedSetType\r\r\t| bytes obj newBytes type |\r\t((ASN1Module name: #test) set: #TestSet mapping: ASN1TestModel)\r\t\tadd: #testSlot1 type: #ASN1BooleanType;\r\t\tyourself.\r\r\ttype := (ASN1Module name: #test) find: #TestSet.\r\tbytes := #(49 3 1 1 255).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: ASN1TestModel).\r\tself assert: (obj testSlot1 = true).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '991' ],		#self : OmReference [ '992' ],		#time : DateAndTime [ '2018-08-16T16:44:10.814984+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedUnmappedSequenceType,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedUnmappedSequenceType\r\r\t| bytes obj newBytes type |\r\t(ASN1Module name: #test) sequence: #TestSequence.\r\r\ttype := (ASN1Module name: #test) find: #TestSequence.\r\tbytes := #(48 3 1 1 255).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: OrderedCollection).\r\tself assert: (obj first = true).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:32',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '992' ],		#self : OmReference [ '993' ],		#time : DateAndTime [ '2018-08-16T16:44:10.816221+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testDefinedUnmappedSetType,			#protocol : #'tests - defined types',			#sourceCode : 'testDefinedUnmappedSetType\r\r\t| bytes obj newBytes type |\r\t(ASN1Module name: #test) set: #TestSet.\r\r\ttype := (ASN1Module name: #test) find: #TestSet.\r\tbytes := #(49 3 1 1 255).\r\tobj := ASN1Stream decodeBytes: bytes withType: type.\r\tself assert: (obj isKindOf: OrderedSet).\r\tself assert: (obj includes: true).\r\tnewBytes := ASN1Stream encode: obj withType: type.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 4/16/2007 15:02',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '993' ],		#self : OmReference [ '994' ],		#time : DateAndTime [ '2018-08-16T16:44:10.817378+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testEqualsChecksType,			#protocol : #'tests - base',			#sourceCode : 'testEqualsChecksType\r\r\tself deny: (ASN1ObjectId fromString: \'1.3.6.1.5.5.7.8.5\') = Object new\r',			#stamp : 'cds 7/5/2010 16:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '994' ],		#self : OmReference [ '995' ],		#time : DateAndTime [ '2018-08-16T16:44:10.818512+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testIA5String,			#protocol : #'tests - base',			#sourceCode : 'testIA5String\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(22 11 104 101 108 108 111 32 119 111 114 108 100).\r\ttestObj := \'hello world\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '995' ],		#self : OmReference [ '996' ],		#time : DateAndTime [ '2018-08-16T16:44:10.820403+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testIndefiniteLengthSequence,			#protocol : #'tests - BER',			#sourceCode : 'testIndefiniteLengthSequence\r\r\t| bytes obj testObj |\r\tbytes := #(48 128 1 1 255 2 2 3 21 4 2 108 100 0 0).\r\ttestObj := OrderedCollection new\r\t\tadd: true;\r\t\tadd: 789;\r\t\tadd: #(108 100) asByteArray;\r\t\tyourself.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r',			#stamp : 'rww 3/28/2007 11:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '996' ],		#self : OmReference [ '997' ],		#time : DateAndTime [ '2018-08-16T16:44:10.821559+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testInteger,			#protocol : #'tests - base',			#sourceCode : 'testInteger\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(2 2 3 21).\r\ttestObj := 789.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:29',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '997' ],		#self : OmReference [ '998' ],		#time : DateAndTime [ '2018-08-16T16:44:10.822728+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testNull,			#protocol : #'tests - base',			#sourceCode : 'testNull\r\r\t| bytes obj newBytes |\r\tbytes := #(5 0).\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: obj isNil.\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '998' ],		#self : OmReference [ '999' ],		#time : DateAndTime [ '2018-08-16T16:44:10.824014+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testObjectIdentifier,			#protocol : #'tests - base',			#sourceCode : 'testObjectIdentifier\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(6 8 43 6 1 5 5 7 8 5).\r\ttestObj := ASN1ObjectId new\r\t\toid: \'1.3.6.1.5.5.7.8.5\';\r\t\tyourself.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:33',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '999' ],		#self : OmReference [ '1000' ],		#time : DateAndTime [ '2018-08-16T16:44:10.825162+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testPrintableString,			#protocol : #'tests - base',			#sourceCode : 'testPrintableString\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(19 11 104 101 108 108 111 32 119 111 114 108 100).\r\ttestObj := \'hello world\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1000' ],		#self : OmReference [ '1001' ],		#time : DateAndTime [ '2018-08-16T16:44:10.826295+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testSequence,			#protocol : #'tests - base',			#sourceCode : 'testSequence\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(48 11 1 1 255 2 2 3 21 4 2 108 100).\r\ttestObj := OrderedCollection new\r\t\tadd: true;\r\t\tadd: 789;\r\t\tadd: #(108 100) asByteArray;\r\t\tyourself.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1001' ],		#self : OmReference [ '1002' ],		#time : DateAndTime [ '2018-08-16T16:44:10.828149+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testSet,			#protocol : #'tests - base',			#sourceCode : 'testSet\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(49 11 1 1 255 4 2 108 100 2 2 3 21 ).\r\ttestObj := OrderedSet new\r\t\tadd: true;\r\t\tadd: #(108 100) asByteArray;\r\t\tadd: 789;\r\t\tyourself.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 4/16/2007 15:01',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1002' ],		#self : OmReference [ '1003' ],		#time : DateAndTime [ '2018-08-16T16:44:10.829367+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testString,			#protocol : #'tests - base',			#sourceCode : 'testString\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(12 11 104 101 108 108 111 32 119 111 114 108 100).\r\ttestObj := \'hello world\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:30',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1003' ],		#self : OmReference [ '1004' ],		#time : DateAndTime [ '2018-08-16T16:44:10.830557+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testTeletexString,			#protocol : #'tests - base',			#sourceCode : 'testTeletexString\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(20 11 104 101 108 108 111 32 119 111 114 108 100).\r\ttestObj := \'hello world\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:33',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1004' ],		#self : OmReference [ '1005' ],		#time : DateAndTime [ '2018-08-16T16:44:10.831716+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testUTCTime,			#protocol : #'tests - base',			#sourceCode : 'testUTCTime\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(23 13 48 55 48 51 50 50 49 53 53 56 49 55 90).\r\tobj := ASN1Stream decodeBytes: bytes.\r\ttestObj := DateAndTime fromString: \'2007-03-22T15:58:17+00:00\'.\t\r\tself assert: obj rounded equals: testObj rounded.\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'EstebanMaringolo 9/15/2016 12:16',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1005' ],		#self : OmReference [ '1006' ],		#time : DateAndTime [ '2018-08-16T16:44:10.832884+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoASN1Test,				#isMetaSide : false			},			#name : #testUniversalString,			#protocol : #'tests - base',			#sourceCode : 'testUniversalString\r\r\t| bytes obj newBytes testObj |\r\tbytes := #(28 11 104 101 108 108 111 32 119 111 114 108 100).\r\ttestObj := \'hello world\'.\r\tobj := ASN1Stream decodeBytes: bytes.\r\tself assert: (obj = testObj).\r\tnewBytes := ASN1Stream encode: obj.\r\tself assert: (bytes asByteArray = newBytes).\r',			#stamp : 'rww 3/28/2007 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1006' ],		#self : OmReference [ '1007' ],		#time : DateAndTime [ '2018-08-16T16:44:10.834226+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoPKCS12Test,				#isMetaSide : false			},			#name : #test1,			#protocol : #testing,			#sourceCode : 'test1\r\r\t| key |\r\tkey := (Pkcs12KeyDerivationFunction new\r\t\tderivedKeyWithId: 2 \r\t\tfromPassword: \'smeg\' \r\t\tsalt: #(10 88 207 100 83 13 130 63)\r\t\titerations: 1\r\t\tsize: 8) hex.\r\tself assert: key = \'79993dfe048d3b76\'\r',			#stamp : 'RobertWithers 10/12/2015 22:17',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1007' ],		#self : OmReference [ '1008' ],		#time : DateAndTime [ '2018-08-16T16:44:10.835287+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoPKCS12Test,				#isMetaSide : false			},			#name : #test10,			#protocol : #testing,			#sourceCode : 'test10\r\r\t| key |\r\tkey := (Pkcs12KeyDerivationFunction new\r\t\tderivedKeyWithId: 1\r\t\tfromPassword: \'queeg\' \r\t\tsalt: #(22 130 192 252 91 63 126 197)\r\t\titerations: 1000\r\t\tsize: 24) hex.\r\tself assert: key = \'483dd6e919d7de2e8e648ba8f862f3fbfbdc2bcb2c02957f\'\r',			#stamp : 'RobertWithers 10/12/2015 22:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1008' ],		#self : OmReference [ '1009' ],		#time : DateAndTime [ '2018-08-16T16:44:10.837241+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoPKCS12Test,				#isMetaSide : false			},			#name : #test2,			#protocol : #testing,			#sourceCode : 'test2\r\r\t| key |\r\tkey := (Pkcs12KeyDerivationFunction new\r\t\tderivedKeyWithId: 2 \r\t\tfromPassword: \'smeg\' \r\t\tsalt: #(100 43 153 171 68 251 75 31)\r\t\titerations: 1\r\t\tsize: 8) hex.\r\tself assert: key = \'c0a38d64a79bea1d\'\r',			#stamp : 'RobertWithers 10/12/2015 22:20',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1009' ],		#self : OmReference [ '1010' ],		#time : DateAndTime [ '2018-08-16T16:44:10.838431+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoPKCS12Test,				#isMetaSide : false			},			#name : #test3,			#protocol : #testing,			#sourceCode : 'test3\r\r\t| key |\r\tkey := (Pkcs12KeyDerivationFunction new\r\t\tderivedKeyWithId: 2 \r\t\tfromPassword: \'queeg\' \r\t\tsalt: #(5 222 201 89 172 255 114 247)\r\t\titerations: 1000\r\t\tsize: 8) hex.\r\tself assert: key = \'11dedad7758d4860\'\r',			#stamp : 'RobertWithers 10/12/2015 22:20',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1010' ],		#self : OmReference [ '1011' ],		#time : DateAndTime [ '2018-08-16T16:44:10.839638+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoPKCS12Test,				#isMetaSide : false			},			#name : #test4,			#protocol : #testing,			#sourceCode : 'test4\r\r\t| key |\r\tkey := (Pkcs12KeyDerivationFunction new\r\t\tderivedKeyWithId: 2 \r\t\tfromPassword: \'queeg\' \r\t\tsalt: #(22 130 192 252 91 63 126 197)\r\t\titerations: 1000\r\t\tsize: 8) hex.\r\tself assert: key = \'9d461d1b00355c50\'\r',			#stamp : 'RobertWithers 10/12/2015 22:20',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1011' ],		#self : OmReference [ '1012' ],		#time : DateAndTime [ '2018-08-16T16:44:10.840787+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoPKCS12Test,				#isMetaSide : false			},			#name : #test5,			#protocol : #testing,			#sourceCode : 'test5\r\r\t| key |\r\tkey := (Pkcs12KeyDerivationFunction new\r\t\tderivedKeyWithId: 3 \r\t\tfromPassword: \'smeg\' \r\t\tsalt: #(61 131 192 228 84 106 193 64)\r\t\titerations: 1\r\t\tsize: 20) hex.\r\tself assert: key = \'8d967d88f6caa9d714800ab3d48051d63f73a312\'\r',			#stamp : 'RobertWithers 10/12/2015 22:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1012' ],		#self : OmReference [ '1013' ],		#time : DateAndTime [ '2018-08-16T16:44:10.841919+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoPKCS12Test,				#isMetaSide : false			},			#name : #test6,			#protocol : #testing,			#sourceCode : 'test6\r\r\t| key |\r\tkey := (Pkcs12KeyDerivationFunction new\r\t\tderivedKeyWithId: 3 \r\t\tfromPassword: \'queeg\' \r\t\tsalt: #(38 50 22 252 194 250 179 28)\r\t\titerations: 1000\r\t\tsize: 20) hex.\r\tself assert: key = \'5ec4c7a80df652294c3925b6489a7ab857c83476\'\r',			#stamp : 'RobertWithers 10/12/2015 22:21',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1013' ],		#self : OmReference [ '1014' ],		#time : DateAndTime [ '2018-08-16T16:44:10.843021+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoPKCS12Test,				#isMetaSide : false			},			#name : #test7,			#protocol : #testing,			#sourceCode : 'test7\r\r\t| key |\r\tkey := (Pkcs12KeyDerivationFunction new\r\t\tderivedKeyWithId: 1\r\t\tfromPassword: \'smeg\' \r\t\tsalt: #(10 88 207 100 83 13 130 63)\r\t\titerations: 1\r\t\tsize: 24) hex.\r\tself assert: key = \'8aaae6297b6cb04642ab5b077851284eb7128f1a2a7fbca3\'\r',			#stamp : 'RobertWithers 10/12/2015 22:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1014' ],		#self : OmReference [ '1015' ],		#time : DateAndTime [ '2018-08-16T16:44:10.84428+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoPKCS12Test,				#isMetaSide : false			},			#name : #test8,			#protocol : #testing,			#sourceCode : 'test8\r\r\t| key |\r\tkey := (Pkcs12KeyDerivationFunction new\r\t\tderivedKeyWithId: 1\r\t\tfromPassword: \'smeg\' \r\t\tsalt: #(100 43 153 171 68 251 75 31)\r\t\titerations: 1\r\t\tsize: 24) hex.\r\tself assert: key = \'f3a95fec48d7711e985cfe67908c5ab79fa3d7c5caa5d966\'\r',			#stamp : 'RobertWithers 10/12/2015 22:22',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1015' ],		#self : OmReference [ '1016' ],		#time : DateAndTime [ '2018-08-16T16:44:10.846241+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoPKCS12Test,				#isMetaSide : false			},			#name : #test9,			#protocol : #testing,			#sourceCode : 'test9\r\r\t| key |\r\tkey := (Pkcs12KeyDerivationFunction new\r\t\tderivedKeyWithId: 1\r\t\tfromPassword: \'queeg\' \r\t\tsalt: #(5 222 201 89 172 255 114 247)\r\t\titerations: 1000\r\t\tsize: 24) hex.\r\tself assert: key = \'ed2034e36328830ff09df1e1a07dd357185dac0d4f9eb3d4\'\r',			#stamp : 'RobertWithers 10/12/2015 22:26',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1016' ],		#self : OmReference [ '1017' ],		#time : DateAndTime [ '2018-08-16T16:44:10.847498+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoRSATest,				#isMetaSide : false			},			#name : #derKeys,			#protocol : #RSA,			#sourceCode : 'derKeys\r\r\t| key64 |\r\tkey64 := self encodedBase64Keys.\r\r\t^(Base64MimeConverter mimeDecodeToBytes:  key64 readStream ) contents.\r',			#stamp : 'dik 9/23/2010 11:26',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1017' ],		#self : OmReference [ '1018' ],		#time : DateAndTime [ '2018-08-16T16:44:10.848545+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoRSATest,				#isMetaSide : false			},			#name : #encodedBase64Keys,			#protocol : #RSA,			#sourceCode : 'encodedBase64Keys\r\r\t^ \'MIICXgIBAAKBgQDkI45GM6mYLlbxrKozE6bXWMoxvtVuIWOIF1KcGLED+4Gipriw\rNt0hkosuil513/CMjn9XBSZtaSsiIOLkXLZtbKYhATtvODR1nD/dl0JpFH7BLcD9\rNGGRKOow0jg8fcPtXhLTy6Dsl7rfmVPJYuc4IlzZImTdErllmhzrTKT3YQIDAQAB\rAoGBALPQjogomii3hZHQ3QmLGLqtYhjZaBH4wSF3+IXONF+GMcRIklNZuuuGPKt/\rJjrUOh4fBqFJDuO3u+aXcx45MRMLVHuQIuUbegJXVS+rnxXI3I6I4SLBkoV7Jqn/\rJ9T9biOXrzq/xN8XVJQm7zq/FXaHR6l+Wo50LaBj7llY+CMBAkEA8bfsbySseTbI\rD7tR/bytEz/DhQ1knKS3nFo83NYwDm7YcdGC+f0rQIUuS30lKApeoygBUiLOSs7K\reuxEi6wC0QJBAPGePI59Fc5alAivyTkYdV4sbIL+SL5oXEERRyezogEgRqCGJtyd\rMbnVviwREF4MiGTYQIIOx4aFrM/U4q9DL5ECQH+/QImMzEpTlXAbA74iFSZzMJYE\r+gN/WjqbxkbAPC2kj2e33ozYLB+xQ0JKJXT/5fw8jFYoZvZKS+CjNabLhcECQQDp\rbgrrToXGu1PRoKMzeiHKPfkIBUuaSZD3fA3WmYGmvNv/MhxRf70O4SW9xS6e7lTH\ruPV5sXWqzXLLx8zJrotBAkEAgAoiR+5uOW9CgfWkblJ/YIgGbLiLQoFNZbwxXDfr\rjcosTQvBjrc//rCnb2Pgm8QRGeN/CXKc9kKoWNqUQSYchQ==\rMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDkI45GM6mYLlbxrKozE6bXWMox\rvtVuIWOIF1KcGLED+4GipriwNt0hkosuil513/CMjn9XBSZtaSsiIOLkXLZtbKYh\rATtvODR1nD/dl0JpFH7BLcD9NGGRKOow0jg8fcPtXhLTy6Dsl7rfmVPJYuc4IlzZ\rImTdErllmhzrTKT3YQIDAQAB\'.',			#stamp : 'dik 9/23/2010 11:25',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1018' ],		#self : OmReference [ '1019' ],		#time : DateAndTime [ '2018-08-16T16:44:10.84975+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoRSATest,				#isMetaSide : false			},			#name : #'genericRSATest:',			#protocol : #tests,			#sourceCode : 'genericRSATest: bits\r\t| generator public private msg c |\r\tgenerator := RSAKeyPairGenerator new bits: bits.\r\tpublic := generator publicKey. "this may take a while"\r\tprivate := generator privateKey.\r\r\tmsg := 1234567890987654321. "the plaintext"\r\t\rc := public crypt: msg. "the ciphertext (print it and take a look)"\r\tself assert: (private crypt: c) = msg',			#stamp : 'rww 10/5/2006 06:48',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1019' ],		#self : OmReference [ '1020' ],		#time : DateAndTime [ '2018-08-16T16:44:10.85091+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoRSATest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\t| reader |\r\tsuper setUp.\r\t\r\treader := RSAPrivateKeyFileReader new.\r\treader decryptedBytes: self derKeys.\r\tprivateKey := reader asPrivateKey.\r\tpublicKey := reader asPublicKey.\r\t',			#stamp : 'dik 9/23/2010 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1020' ],		#self : OmReference [ '1021' ],		#time : DateAndTime [ '2018-08-16T16:44:10.852014+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoRSATest,				#isMetaSide : false			},			#name : #testRSA128,			#protocol : #tests,			#sourceCode : 'testRSA128\r\tself genericRSATest: 128',			#stamp : 'rww 10/5/2006 06:48',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1021' ],		#self : OmReference [ '1022' ],		#time : DateAndTime [ '2018-08-16T16:44:10.853121+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoRSATest,				#isMetaSide : false			},			#name : #testRSA64,			#protocol : #tests,			#sourceCode : 'testRSA64\r\tself genericRSATest: 64',			#stamp : 'rww 10/5/2006 06:48',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1022' ],		#self : OmReference [ '1023' ],		#time : DateAndTime [ '2018-08-16T16:44:10.854968+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoRSATest,				#isMetaSide : false			},			#name : #testRSASHASignVerification,			#protocol : #tests,			#sourceCode : 'testRSASHASignVerification\r\r\t| signBytes |\r\t\r\tsignBytes := privateKey v15SignMessage: \'hello\'.  \r\t\r\tself assert: (publicKey v15Verify: signBytes isSignatureOf: \'hello\')',			#stamp : 'dik 9/23/2010 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1023' ],		#self : OmReference [ '1024' ],		#time : DateAndTime [ '2018-08-16T16:44:10.856141+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoRSATest,				#isMetaSide : false			},			#name : #testRSASHASigning,			#protocol : #tests,			#sourceCode : 'testRSASHASigning\r\r\t| signBytes |\t\r\r\tsignBytes := privateKey v15SignMessage: \'hello\'.  \r\r\tself assert: signBytes = \r#[217 255 224 189 56 76 46 39 224 98 134 191 90 24 145 47 7 195 143 29 131 44 93 172 118 161 3 217 231 74 82 55 37 193 86 114 7 137 22 207 107 27 26 121 40 155 185 172 20 23 27 27 187 162 97 64 151 41 173 230 53 54 174 53 73 76 252 145 252 215 166 53 37 21 174 21 185 171 201 163 197 43 15 202 40 48 150 9 233 126 34 221 219 27 215 142 161 15 225 230 238 150 82 130 2 51 197 124 242 211 222 60 145 93 145 198 48 122 160 232 31 75 161 244 8 194 143 170]',			#stamp : 'dik 9/23/2010 11:31',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1024' ],		#self : OmReference [ '1025' ],		#time : DateAndTime [ '2018-08-16T16:44:10.857283+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoRSATest,				#isMetaSide : false			},			#name : #testSignVerificationByGeneratedKeys,			#protocol : #tests,			#sourceCode : 'testSignVerificationByGeneratedKeys\r\r\t| signBytes gen |\r\tgen := RSAKeyPairGenerator bits: 1024.\t\r\tgen computePrimes.\r\t\r\tsignBytes := gen privateKey v15SignMessage: \'hello\'.  \r\t\r\tself assert: (gen publicKey v15Verify: signBytes isSignatureOf: \'hello\')',			#stamp : 'dik 9/28/2010 13:38',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1025' ],		#self : OmReference [ '1026' ],		#time : DateAndTime [ '2018-08-16T16:44:10.858469+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoX509Test,				#isMetaSide : false			},			#name : #certificate1,			#protocol : #'as yet unclassified',			#sourceCode : 'certificate1\r\r\t^ X509Certificate fromBytes: self certificate1DerBytes.\r',			#stamp : 'rww 3/26/2007 09:24',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1026' ],		#self : OmReference [ '1027' ],		#time : DateAndTime [ '2018-08-16T16:44:10.860046+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoX509Test,				#isMetaSide : false			},			#name : #certificate1DerBytes,			#protocol : #'as yet unclassified',			#sourceCode : 'certificate1DerBytes\r\r\t^ #(48 130 7 61 48 130 5 37 160 3 2 1 2 2 1 0 48 13 6 9 42 134 72 134 247 13 1 1 4 5 0 48 121 49 16 48 14 6 3 85 4 10 19 7 82 111 111 116 32 67 65 49 30 48 28 6 3 85 4 11 19 21 104 116 116 112 58 47 47 119 119 119 46 99 97 99 101 114 116 46 111 114 103 49 34 48 32 6 3 85 4 3 19 25 67 65 32 67 101 114 116 32 83 105 103 110 105 110 103 32 65 117 116 104 111 114 105 116 121 49 33 48 31 6 9 42 134 72 134 247 13 1 9 1 22 18 115 117 112 112 111 114 116 64 99 97 99 101 114 116 46 111 114 103 48 30 23 13 48 51 48 51 51 48 49 50 50 57 52 57 90 23 13 51 51 48 51 50 57 49 50 50 57 52 57 90 48 121 49 16 48 14 6 3 85 4 10 19 7 82 111 111 116 32 67 65 49 30 48 28 6 3 85 4 11 19 21 104 116 116 112 58 47 47 119 119 119 46 99 97 99 101 114 116 46 111 114 103 49 34 48 32 6 3 85 4 3 19 25 67 65 32 67 101 114 116 32 83 105 103 110 105 110 103 32 65 117 116 104 111 114 105 116 121 49 33 48 31 6 9 42 134 72 134 247 13 1 9 1 22 18 115 117 112 112 111 114 116 64 99 97 99 101 114 116 46 111 114 103 48 130 2 34 48 13 6 9 42 134 72 134 247 13 1 1 1 5 0 3 130 2 15 0 48 130 2 10 2 130 2 1 0 206 34 192 226 70 125 236 54 40 7 80 150 242 160 51 64 140 75 241 59 102 63 49 229 107 2 54 219 214 124 246 241 136 143 78 119 54 5 65 149 249 9 240 18 207 70 134 115 96 183 110 126 232 192 88 100 174 205 176 173 69 23 12 99 250 103 10 232 214 210 191 62 231 152 196 240 76 250 224 3 187 53 93 108 33 222 158 32 217 186 205 102 50 55 114 250 247 8 245 199 205 88 201 142 231 14 94 234 62 254 28 161 20 10 21 108 134 132 91 100 102 42 122 169 75 83 121 245 136 162 123 238 47 10 97 43 141 178 126 77 86 165 19 236 234 218 146 158 172 68 65 30 88 96 101 5 102 248 192 68 189 203 148 247 66 126 11 247 101 104 152 81 5 240 243 5 145 4 29 27 23 130 236 200 87 187 195 107 122 136 241 176 114 204 37 91 32 145 236 22 2 18 143 50 233 23 24 72 208 199 5 46 2 48 66 184 37 156 5 107 63 170 58 167 235 83 72 247 232 210 182 7 152 220 27 198 52 127 127 201 28 130 122 5 88 43 8 91 243 56 162 171 23 93 102 201 152 215 158 16 139 162 210 221 116 154 247 113 12 114 96 223 205 111 152 51 157 150 52 118 62 36 122 146 176 14 149 30 111 230 160 69 56 71 170 215 65 237 74 183 18 246 215 27 131 138 15 46 216 9 182 89 215 170 4 255 210 147 125 104 46 221 139 75 171 88 186 47 141 234 149 167 160 195 84 137 165 251 219 139 81 34 157 178 195 190 17 190 44 145 134 139 150 120 173 32 211 138 47 26 63 198 208 81 101 135 33 177 25 1 101 127 69 28 135 245 124 208 65 76 79 41 152 33 253 51 31 117 12 4 81 250 25 119 219 212 20 28 238 129 195 29 245 152 183 105 6 145 34 221 0 80 204 129 49 172 18 7 123 56 218 104 91 230 43 212 126 201 95 173 232 235 114 76 243 1 229 75 32 191 154 166 87 202 145 0 1 139 161 117 33 55 181 99 13 103 62 70 79 112 32 103 206 197 214 89 219 2 224 240 210 203 205 186 98 183 144 65 232 221 32 228 41 188 100 41 66 200 34 220 120 154 255 67 236 152 27 9 81 75 90 90 194 113 241 196 203 115 169 229 161 11 2 3 1 0 1 163 130 1 206 48 130 1 202 48 29 6 3 85 29 14 4 22 4 20 22 181 50 27 212 199 243 224 230 142 243 189 210 176 58 238 178 57 24 209 48 129 163 6 3 85 29 35 4 129 155 48 129 152 128 20 22 181 50 27 212 199 243 224 230 142 243 189 210 176 58 238 178 57 24 209 161 125 164 123 48 121 49 16 48 14 6 3 85 4 10 19 7 82 111 111 116 32 67 65 49 30 48 28 6 3 85 4 11 19 21 104 116 116 112 58 47 47 119 119 119 46 99 97 99 101 114 116 46 111 114 103 49 34 48 32 6 3 85 4 3 19 25 67 65 32 67 101 114 116 32 83 105 103 110 105 110 103 32 65 117 116 104 111 114 105 116 121 49 33 48 31 6 9 42 134 72 134 247 13 1 9 1 22 18 115 117 112 112 111 114 116 64 99 97 99 101 114 116 46 111 114 103 130 1 0 48 15 6 3 85 29 19 1 1 255 4 5 48 3 1 1 255 48 50 6 3 85 29 31 4 43 48 41 48 39 160 37 160 35 134 33 104 116 116 112 115 58 47 47 119 119 119 46 99 97 99 101 114 116 46 111 114 103 47 114 101 118 111 107 101 46 99 114 108 48 48 6 9 96 134 72 1 134 248 66 1 4 4 35 22 33 104 116 116 112 115 58 47 47 119 119 119 46 99 97 99 101 114 116 46 111 114 103 47 114 101 118 111 107 101 46 99 114 108 48 52 6 9 96 134 72 1 134 248 66 1 8 4 39 22 37 104 116 116 112 58 47 47 119 119 119 46 99 97 99 101 114 116 46 111 114 103 47 105 110 100 101 120 46 112 104 112 63 105 100 61 49 48 48 86 6 9 96 134 72 1 134 248 66 1 13 4 73 22 71 84 111 32 103 101 116 32 121 111 117 114 32 111 119 110 32 99 101 114 116 105 102 105 99 97 116 101 32 102 111 114 32 70 82 69 69 32 104 101 97 100 32 111 118 101 114 32 116 111 32 104 116 116 112 58 47 47 119 119 119 46 99 97 99 101 114 116 46 111 114 103 48 13 6 9 42 134 72 134 247 13 1 1 4 5 0 3 130 2 1 0 40 199 238 156 130 2 186 92 128 18 202 53 10 29 129 111 137 106 153 204 242 104 15 127 167 225 141 88 149 62 189 242 6 195 144 90 172 181 96 246 153 67 1 163 136 112 156 157 98 157 164 135 175 103 88 13 48 54 59 230 173 72 211 203 116 2 134 113 62 226 43 3 104 241 52 98 64 70 59 83 234 40 244 172 251 102 149 83 138 77 93 253 59 217 96 215 202 121 105 59 177 101 146 166 198 129 130 92 156 205 235 77 1 138 165 223 17 85 170 21 202 31 55 192 130 152 112 97 219 106 124 150 163 142 46 84 62 79 33 169 144 239 220 130 191 220 232 69 173 77 144 115 8 60 148 101 176 4 153 118 127 226 188 194 106 21 170 151 4 55 36 216 30 148 78 109 14 81 190 214 196 143 202 150 109 247 67 223 232 48 101 39 59 123 187 67 67 99 196 67 247 178 236 104 204 225 25 142 34 251 152 225 123 90 62 1 55 59 139 8 176 162 243 149 78 26 203 155 205 154 177 219 178 112 240 45 74 219 216 176 227 111 69 72 51 18 255 254 60 50 42 84 247 196 247 138 240 136 35 194 71 254 100 122 113 192 209 30 166 99 176 7 126 164 47 211 1 143 220 159 43 182 198 8 169 15 147 72 37 252 18 253 159 66 220 243 196 62 246 87 176 215 221 105 209 6 119 52 10 75 210 202 160 255 28 198 140 201 22 190 196 204 50 55 104 115 95 8 251 81 247 73 83 54 5 10 149 2 76 242 121 26 16 246 216 58 117 156 243 29 241 162 13 112 103 134 27 179 22 245 47 229 164 235 121 134 249 61 11 194 115 11 165 153 172 111 252 103 184 229 47 11 166 24 36 141 123 209 72 53 41 24 64 172 147 96 225 150 134 80 180 122 89 216 143 33 11 159 207 130 145 198 59 191 107 220 7 145 185 151 86 35 170 182 108 148 198 72 6 60 228 206 78 170 228 246 47 9 220 83 111 46 252 116 235 58 99 153 194 166 172 137 188 167 178 68 160 13 138 16 227 108 242 36 203 250 155 159 112 71 46 222 20 139 212 178 32 9 150 162 100 241 36 28 220 161 53 156 21 178 212 188 85 46 125 6 245 156 14 85 244 90 214 147 218 118 173 37 115 76 197 67) asByteArray.\r',			#stamp : 'rww 1/28/2007 17:54',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1027' ],		#self : OmReference [ '1028' ],		#time : DateAndTime [ '2018-08-16T16:44:10.861194+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoX509Test,				#isMetaSide : false			},			#name : #certificate2,			#protocol : #'as yet unclassified',			#sourceCode : 'certificate2\r\r\t^ X509Certificate fromBytes: self certificate2DerBytes.\r',			#stamp : 'rww 3/26/2007 09:25',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1028' ],		#self : OmReference [ '1029' ],		#time : DateAndTime [ '2018-08-16T16:44:10.862402+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoX509Test,				#isMetaSide : false			},			#name : #certificate2DerBytes,			#protocol : #'as yet unclassified',			#sourceCode : 'certificate2DerBytes\r\r\t^ #(48 130 6 8 48 130 3 240 160 3 2 1 2 2 1 1 48 13 6 9 42 134 72 134 247 13 1 1 4 5 0 48 121 49 16 48 14 6 3 85 4 10 19 7 82 111 111 116 32 67 65 49 30 48 28 6 3 85 4 11 19 21 104 116 116 112 58 47 47 119 119 119 46 99 97 99 101 114 116 46 111 114 103 49 34 48 32 6 3 85 4 3 19 25 67 65 32 67 101 114 116 32 83 105 103 110 105 110 103 32 65 117 116 104 111 114 105 116 121 49 33 48 31 6 9 42 134 72 134 247 13 1 9 1 22 18 115 117 112 112 111 114 116 64 99 97 99 101 114 116 46 111 114 103 48 30 23 13 48 53 49 48 49 52 48 55 51 54 53 53 90 23 13 51 51 48 51 50 56 48 55 51 54 53 53 90 48 84 49 20 48 18 6 3 85 4 10 19 11 67 65 99 101 114 116 32 73 110 99 46 49 30 48 28 6 3 85 4 11 19 21 104 116 116 112 58 47 47 119 119 119 46 67 65 99 101 114 116 46 111 114 103 49 28 48 26 6 3 85 4 3 19 19 67 65 99 101 114 116 32 67 108 97 115 115 32 51 32 82 111 111 116 48 130 2 34 48 13 6 9 42 134 72 134 247 13 1 1 1 5 0 3 130 2 15 0 48 130 2 10 2 130 2 1 0 171 73 53 17 72 124 210 38 126 83 148 207 67 169 221 40 215 66 42 139 243 135 120 25 88 124 15 158 218 137 125 225 251 235 114 144 13 116 161 150 100 171 159 160 36 153 115 218 226 85 118 199 23 123 245 4 172 70 184 195 190 127 100 141 16 108 36 243 97 156 192 242 144 250 81 230 245 105 1 99 195 15 86 226 74 66 207 226 68 140 37 40 168 197 121 9 125 70 185 138 243 233 243 52 41 8 69 228 28 159 203 148 4 28 129 168 20 179 152 101 196 67 236 78 130 141 9 209 189 170 91 141 146 208 236 222 144 197 127 10 194 227 235 230 49 90 94 116 62 151 51 89 232 195 3 61 96 51 191 247 209 111 71 196 205 238 98 131 82 110 46 8 154 164 217 21 24 145 166 133 146 71 176 174 72 235 109 183 33 236 133 26 104 114 53 171 255 240 16 93 192 244 148 167 106 213 59 146 126 76 144 5 126 147 193 44 139 164 142 98 116 21 113 110 11 113 3 234 175 21 56 154 212 210 5 114 111 140 249 43 235 90 114 37 249 57 70 227 114 27 62 4 195 100 39 34 16 42 138 79 88 167 3 173 190 180 46 19 237 93 170 72 215 213 125 212 42 123 92 250 70 4 80 228 204 14 66 91 140 237 219 242 207 252 150 147 224 219 17 54 84 98 52 56 143 12 96 155 59 151 86 56 173 243 210 91 139 160 91 234 78 150 184 124 215 213 160 134 112 64 211 145 41 183 162 60 173 245 140 187 207 26 146 138 228 52 123 192 216 108 95 233 10 194 195 167 32 154 90 223 44 93 82 92 186 71 213 155 239 36 40 112 56 32 47 213 127 41 192 178 65 3 104 146 204 224 156 204 151 75 69 239 58 16 10 171 112 58 152 149 112 173 53 177 234 133 43 164 28 128 33 49 169 174 96 122 128 38 72 0 184 1 192 147 99 85 34 145 60 86 231 175 219 58 37 243 143 49 84 234 38 139 129 89 249 161 209 83 17 197 123 157 3 246 116 17 224 109 177 44 63 44 134 145 153 113 154 166 119 139 52 96 209 20 180 44 172 157 175 140 16 211 159 196 106 248 111 19 252 115 89 247 102 66 116 30 138 227 248 220 210 111 152 156 203 71 152 149 64 5 251 233 2 3 1 0 1 163 129 191 48 129 188 48 15 6 3 85 29 19 1 1 255 4 5 48 3 1 1 255 48 93 6 8 43 6 1 5 5 7 1 1 4 81 48 79 48 35 6 8 43 6 1 5 5 7 48 1 134 23 104 116 116 112 58 47 47 111 99 115 112 46 67 65 99 101 114 116 46 111 114 103 47 48 40 6 8 43 6 1 5 5 7 48 2 134 28 104 116 116 112 58 47 47 119 119 119 46 67 65 99 101 114 116 46 111 114 103 47 99 97 46 99 114 116 48 74 6 3 85 29 32 4 67 48 65 48 63 6 8 43 6 1 4 1 129 144 74 48 51 48 49 6 8 43 6 1 5 5 7 2 1 22 37 104 116 116 112 58 47 47 119 119 119 46 67 65 99 101 114 116 46 111 114 103 47 105 110 100 101 120 46 112 104 112 63 105 100 61 49 48 48 13 6 9 42 134 72 134 247 13 1 1 4 5 0 3 130 2 1 0 127 8 136 161 218 26 80 73 218 137 251 161 8 114 243 138 247 30 196 58 180 121 91 32 48 177 69 222 194 93 211 101 105 241 194 93 84 84 60 133 95 185 123 66 145 194 153 253 27 81 155 171 70 165 161 16 83 158 109 136 172 115 110 44 51 166 240 244 158 224 117 193 62 136 69 169 225 102 67 254 86 90 209 122 65 120 247 64 218 74 58 241 11 91 165 187 22 6 230 194 231 147 185 133 77 151 79 177 30 56 67 128 239 155 13 140 239 184 167 96 0 135 87 125 30 68 28 203 35 239 155 60 153 157 175 181 41 28 69 121 22 150 77 39 109 241 28 108 195 194 85 100 179 188 20 226 243 164 31 30 50 252 39 21 5 207 221 46 174 62 130 97 123 240 33 16 24 246 68 234 83 57 249 220 208 154 32 224 198 187 224 187 90 79 196 153 200 7 189 181 189 162 219 46 98 13 66 52 65 188 255 139 138 245 81 34 170 136 48 0 226 176 212 188 190 101 186 213 3 87 121 155 232 220 200 77 248 80 237 145 165 82 40 162 172 251 54 88 62 233 148 43 145 80 135 27 214 94 214 140 204 247 15 16 12 82 78 208 22 97 229 229 10 108 191 23 199 114 70 87 156 152 245 108 96 99 122 111 94 185 78 47 200 185 185 187 106 133 188 152 13 237 249 62 151 132 52 148 174 0 175 161 229 231 146 110 78 189 243 226 217 20 139 92 210 235 1 108 160 23 165 45 16 235 156 122 74 189 189 238 206 253 237 34 64 171 112 56 136 245 10 135 106 194 171 5 96 201 72 5 218 83 193 222 68 119 106 179 243 60 60 237 128 188 166 56 74 41 36 95 254 89 59 155 37 122 86 99 0 100 185 93 164 98 125 87 54 79 173 131 239 31 146 83 160 142 119 87 221 229 97 17 61 35 0 144 76 60 250 163 96 147 4 163 175 53 246 14 106 143 79 74 96 167 133 5 108 70 161 143 244 199 118 227 161 89 87 247 113 178 196 110 20 92 109 109 65 102 223 27 147 177 212 0 195 238 203 207 60 61 33 128 169 95 99 101 252 221 224 95 164 244 43 240 133 113 65 212 103 37 251 26 177 151 174 214 153 130 19 65 210 110 165 27 153 39 128 231 11 169 168 0) asByteArray.\r',			#stamp : 'rww 1/28/2007 17:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1029' ],		#self : OmReference [ '1030' ],		#time : DateAndTime [ '2018-08-16T16:44:10.864362+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoX509Test,				#isMetaSide : false			},			#name : #certificate3,			#protocol : #'as yet unclassified',			#sourceCode : 'certificate3\r\r\t^ X509Certificate fromBytes: self certificate3DerBytes.\r',			#stamp : 'rww 3/26/2007 09:25',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1030' ],		#self : OmReference [ '1031' ],		#time : DateAndTime [ '2018-08-16T16:44:10.865543+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoX509Test,				#isMetaSide : false			},			#name : #certificate3DerBytes,			#protocol : #'as yet unclassified',			#sourceCode : 'certificate3DerBytes\r\r\t^ #(48 130 3 218 48 130 3 67 160 3 2 1 2 2 9 0 140 185 190 232 201 54 220 170 48 13 6 9 42 134 72 134 247 13 1 1 5 5 0 48 129 165 49 11 48 9 6 3 85 4 6 19 2 85 83 49 19 48 17 6 3 85 4 8 19 10 87 97 115 104 105 110 103 116 111 110 49 16 48 14 6 3 85 4 7 19 7 83 101 97 116 116 108 101 49 29 48 27 6 3 85 4 10 19 20 67 97 108 108 105 115 116 111 32 69 110 116 101 114 112 114 105 115 101 115 49 17 48 15 6 3 85 4 11 19 8 82 101 115 101 97 114 99 104 49 25 48 23 6 3 85 4 3 19 16 119 119 119 46 114 119 105 116 104 101 114 115 46 110 101 116 49 34 48 32 6 9 42 134 72 134 247 13 1 9 1 22 19 114 101 101 102 101 100 106 105 98 64 121 97 104 111 111 46 99 111 109 48 30 23 13 48 54 49 48 48 55 48 50 48 56 51 48 90 23 13 48 55 49 48 48 55 48 50 48 56 51 48 90 48 129 165 49 11 48 9 6 3 85 4 6 19 2 85 83 49 19 48 17 6 3 85 4 8 19 10 87 97 115 104 105 110 103 116 111 110 49 16 48 14 6 3 85 4 7 19 7 83 101 97 116 116 108 101 49 29 48 27 6 3 85 4 10 19 20 67 97 108 108 105 115 116 111 32 69 110 116 101 114 112 114 105 115 101 115 49 17 48 15 6 3 85 4 11 19 8 82 101 115 101 97 114 99 104 49 25 48 23 6 3 85 4 3 19 16 119 119 119 46 114 119 105 116 104 101 114 115 46 110 101 116 49 34 48 32 6 9 42 134 72 134 247 13 1 9 1 22 19 114 101 101 102 101 100 106 105 98 64 121 97 104 111 111 46 99 111 109 48 129 159 48 13 6 9 42 134 72 134 247 13 1 1 1 5 0 3 129 141 0 48 129 137 2 129 129 0 173 143 214 185 218 87 229 44 80 166 163 79 54 238 238 119 250 53 201 194 83 47 165 93 236 136 156 46 77 254 204 84 226 23 111 253 38 70 57 58 130 98 203 75 33 203 85 148 159 177 158 236 221 210 151 41 37 7 83 177 232 28 230 226 191 202 195 198 223 81 96 247 16 120 199 245 55 1 145 99 139 182 214 231 29 109 72 55 73 246 85 59 164 254 31 162 150 99 140 150 67 8 16 83 63 207 232 61 89 54 141 207 173 40 23 78 187 244 106 67 120 163 239 85 59 200 124 61 2 3 1 0 1 163 130 1 14 48 130 1 10 48 29 6 3 85 29 14 4 22 4 20 67 174 154 200 134 183 132 64 188 62 117 70 124 98 142 30 69 38 161 230 48 129 218 6 3 85 29 35 4 129 210 48 129 207 128 20 67 174 154 200 134 183 132 64 188 62 117 70 124 98 142 30 69 38 161 230 161 129 171 164 129 168 48 129 165 49 11 48 9 6 3 85 4 6 19 2 85 83 49 19 48 17 6 3 85 4 8 19 10 87 97 115 104 105 110 103 116 111 110 49 16 48 14 6 3 85 4 7 19 7 83 101 97 116 116 108 101 49 29 48 27 6 3 85 4 10 19 20 67 97 108 108 105 115 116 111 32 69 110 116 101 114 112 114 105 115 101 115 49 17 48 15 6 3 85 4 11 19 8 82 101 115 101 97 114 99 104 49 25 48 23 6 3 85 4 3 19 16 119 119 119 46 114 119 105 116 104 101 114 115 46 110 101 116 49 34 48 32 6 9 42 134 72 134 247 13 1 9 1 22 19 114 101 101 102 101 100 106 105 98 64 121 97 104 111 111 46 99 111 109 130 9 0 140 185 190 232 201 54 220 170 48 12 6 3 85 29 19 4 5 48 3 1 1 255 48 13 6 9 42 134 72 134 247 13 1 1 5 5 0 3 129 129 0 79 3 254 24 194 236 174 88 62 93 13 195 62 47 243 181 54 113 91 48 128 148 120 173 2 1 51 18 196 218 199 69 29 231 71 24 218 25 17 243 248 83 91 122 39 123 67 16 98 89 209 5 21 66 13 136 121 140 204 84 230 21 24 192 227 5 43 17 247 76 225 145 99 92 76 8 36 109 101 240 168 154 255 189 83 12 33 102 59 37 143 208 66 84 85 31 168 17 247 136 63 139 191 106 35 64 245 22 196 75 35 38 0 254 250 220 45 51 223 179 185 178 240 208 173 126 147 152) asByteArray.\r',			#stamp : 'rww 1/28/2007 17:55',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1031' ],		#self : OmReference [ '1032' ],		#time : DateAndTime [ '2018-08-16T16:44:10.866605+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoX509Test,				#isMetaSide : false			},			#name : #certificate4,			#protocol : #'as yet unclassified',			#sourceCode : 'certificate4\r\r\t^ X509Certificate fromBytes: self certificate4DerBytes.\r',			#stamp : 'rww 3/26/2007 09:25',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1032' ],		#self : OmReference [ '1033' ],		#time : DateAndTime [ '2018-08-16T16:44:10.867702+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoX509Test,				#isMetaSide : false			},			#name : #certificate4DerBytes,			#protocol : #'as yet unclassified',			#sourceCode : 'certificate4DerBytes\r\r\t^ #(48 130 4 137 48 130 4 73 160 3 2 1 2 2 9 0 154 108 174 196 121 225 111 157 48 9 6 7 42 134 72 206 56 4 3 48 129 160 49 11 48 9 6 3 85 4 6 19 2 85 83 49 19 48 17 6 3 85 4 8 19 10 87 97 115 104 105 110 103 116 111 110 49 16 48 14 6 3 85 4 7 19 7 83 101 97 116 116 108 101 49 29 48 27 6 3 85 4 10 19 20 67 97 108 108 105 115 116 111 32 69 110 116 101 114 112 114 105 115 101 115 49 17 48 15 6 3 85 4 11 19 8 82 101 115 101 97 114 99 104 49 20 48 18 6 3 85 4 3 19 11 117 115 97 114 104 105 111 46 99 111 109 49 34 48 32 6 9 42 134 72 134 247 13 1 9 1 22 19 114 101 101 102 101 100 106 105 98 64 121 97 104 111 111 46 99 111 109 48 30 23 13 48 54 48 57 50 56 48 52 49 53 51 51 90 23 13 48 54 49 48 50 56 48 52 49 53 51 51 90 48 129 160 49 11 48 9 6 3 85 4 6 19 2 85 83 49 19 48 17 6 3 85 4 8 19 10 87 97 115 104 105 110 103 116 111 110 49 16 48 14 6 3 85 4 7 19 7 83 101 97 116 116 108 101 49 29 48 27 6 3 85 4 10 19 20 67 97 108 108 105 115 116 111 32 69 110 116 101 114 112 114 105 115 101 115 49 17 48 15 6 3 85 4 11 19 8 82 101 115 101 97 114 99 104 49 20 48 18 6 3 85 4 3 19 11 117 115 97 114 104 105 111 46 99 111 109 49 34 48 32 6 9 42 134 72 134 247 13 1 9 1 22 19 114 101 101 102 101 100 106 105 98 64 121 97 104 111 111 46 99 111 109 48 130 1 183 48 130 1 44 6 7 42 134 72 206 56 4 1 48 130 1 31 2 129 129 0 250 96 75 234 179 162 106 27 210 120 121 182 48 224 158 231 231 116 83 4 28 182 178 246 152 16 150 177 67 14 236 84 56 64 219 142 235 4 111 152 120 85 6 62 102 184 175 81 233 109 104 178 27 106 172 97 253 21 99 12 140 21 14 216 115 42 143 224 135 188 153 111 36 159 142 12 41 238 55 59 94 180 57 133 189 198 57 4 163 61 51 142 29 231 71 224 122 161 249 134 11 134 43 20 141 119 35 142 141 59 209 199 110 252 23 73 58 69 117 164 138 128 254 190 152 130 42 65 2 21 0 159 107 157 78 74 110 231 182 181 187 55 19 124 95 51 60 134 133 168 103 2 129 129 0 214 76 85 195 53 194 159 183 253 102 252 10 113 203 200 193 57 75 243 100 44 206 117 94 67 207 50 1 64 23 204 213 112 114 34 195 102 129 186 25 125 252 4 201 46 88 162 165 78 87 59 206 12 166 187 218 247 64 250 138 202 204 155 26 15 109 105 56 169 238 90 33 62 138 79 38 71 61 46 141 66 61 61 110 131 118 161 114 217 62 223 157 179 210 149 43 42 107 71 46 117 53 119 94 53 254 235 66 211 152 65 189 249 159 197 241 44 226 46 18 12 93 15 214 27 124 253 79 3 129 132 0 2 129 128 84 161 136 129 16 99 74 218 90 65 16 71 166 38 143 10 165 41 134 237 141 14 5 87 20 71 3 94 182 16 107 16 91 12 143 147 6 170 148 250 182 123 86 130 79 57 254 4 127 138 195 16 101 241 185 100 136 27 253 136 126 59 165 82 146 162 56 39 152 46 131 55 63 82 49 139 225 16 22 149 83 96 162 233 177 202 22 57 248 74 120 243 187 167 234 144 229 181 193 42 251 189 228 84 111 147 98 118 135 146 234 67 51 70 126 83 150 165 232 238 137 129 6 68 227 141 211 183 163 130 1 9 48 130 1 5 48 29 6 3 85 29 14 4 22 4 20 209 186 247 182 110 187 240 40 78 115 97 182 249 254 36 98 42 89 70 8 48 129 213 6 3 85 29 35 4 129 205 48 129 202 128 20 209 186 247 182 110 187 240 40 78 115 97 182 249 254 36 98 42 89 70 8 161 129 166 164 129 163 48 129 160 49 11 48 9 6 3 85 4 6 19 2 85 83 49 19 48 17 6 3 85 4 8 19 10 87 97 115 104 105 110 103 116 111 110 49 16 48 14 6 3 85 4 7 19 7 83 101 97 116 116 108 101 49 29 48 27 6 3 85 4 10 19 20 67 97 108 108 105 115 116 111 32 69 110 116 101 114 112 114 105 115 101 115 49 17 48 15 6 3 85 4 11 19 8 82 101 115 101 97 114 99 104 49 20 48 18 6 3 85 4 3 19 11 117 115 97 114 104 105 111 46 99 111 109 49 34 48 32 6 9 42 134 72 134 247 13 1 9 1 22 19 114 101 101 102 101 100 106 105 98 64 121 97 104 111 111 46 99 111 109 130 9 0 154 108 174 196 121 225 111 157 48 12 6 3 85 29 19 4 5 48 3 1 1 255 48 9 6 7 42 134 72 206 56 4 3 3 47 0 48 44 2 20 25 205 133 210 227 114 134 176 207 219 77 229 215 40 87 0 147 167 239 95 2 20 16 53 89 74 65 85 26 169 123 55 90 120 145 26 152 190 159 192 92 212) asByteArray.\r',			#stamp : 'rww 1/28/2007 17:56',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1033' ],		#self : OmReference [ '1034' ],		#time : DateAndTime [ '2018-08-16T16:44:10.868686+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoX509Test,				#isMetaSide : false			},			#name : #testAsnDerEncoding,			#protocol : #'as yet unclassified',			#sourceCode : 'testAsnDerEncoding\r\r\tself assert: self certificate1 asAsn1Bytes = self certificate1DerBytes.\r\tself assert: self certificate2 asAsn1Bytes = self certificate2DerBytes.\r\tself assert: self certificate3 asAsn1Bytes = self certificate3DerBytes.\r\tself assert: self certificate4 asAsn1Bytes = self certificate4DerBytes.\r',			#stamp : 'rww 3/28/2007 12:06',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1034' ],		#self : OmReference [ '1035' ],		#time : DateAndTime [ '2018-08-16T16:44:10.86964+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CryptoX509Test,				#isMetaSide : false			},			#name : #testSignatureValidation,			#protocol : #'as yet unclassified',			#sourceCode : 'testSignatureValidation\r\r\tself assert: (self certificate1 verifyFromParentCertificate: self certificate1).\r',			#stamp : 'rww 6/30/2010 14:44',			#package : #Cryptography		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:11.03546+02:00' ],		#prior : OmReference [ '1035' ],		#self : OmReference [ '1036' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Grease-Pharo60-Core-JohanBrichau.2'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1036' ],		#self : OmReference [ '1037' ],		#time : DateAndTime [ '2018-08-16T16:44:11.125228+02:00' ],		#trigger : @3	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GRDynamicVariable,				#isMetaSide : false			},			#name : #default,			#protocol : #accessing,			#sourceCode : 'default\r\t^ self class defaultValue',			#stamp : 'JohanBrichau 7/23/2017 17:45',			#package : #Grease-Pharo60-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1037' ],		#self : OmReference [ '1038' ],		#time : DateAndTime [ '2018-08-16T16:44:11.19488+02:00' ],		#trigger : OmReference [ '1036' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'DynamicVariable',				#traitCompositionSource : '{}',				#definitionSource : 'DynamicVariable subclass: #GRDynamicVariable\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Grease-Pharo60-Core\''			},			#name : #GRDynamicVariable,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'GRDynamicVariable class\r\tinstanceVariableNames: \'\''				},				#name : #'GRDynamicVariable class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #GRDynamicVariable,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Grease-Pharo60-Core,			#package : #Grease-Pharo60-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1038' ],		#self : OmReference [ '1039' ],		#time : DateAndTime [ '2018-08-16T16:44:11.253327+02:00' ],		#trigger : OmReference [ '1036' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'GRDynamicVariable class',				#isMetaSide : true			},			#name : #defaultValue,			#protocol : #defaults,			#sourceCode : 'defaultValue\r\t^ nil',			#stamp : 'JohanBrichau 7/23/2017 17:45',			#package : #Grease-Pharo60-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1039' ],		#self : OmReference [ '1040' ],		#time : DateAndTime [ '2018-08-16T16:44:11.255958+02:00' ],		#trigger : OmReference [ '1036' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'GRDynamicVariable class\r\tinstanceVariableNames: \'\''			},			#name : #'GRDynamicVariable class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'DynamicVariable',					#traitCompositionSource : '{}',					#definitionSource : 'DynamicVariable subclass: #GRDynamicVariable\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Grease-Pharo60-Core\''				},				#name : #GRDynamicVariable,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #GRDynamicVariable,						#isMetaSide : false					},					#parent : @13,					#content : ''				},				#classVariables : OrderedCollection [ ],				#category : #Grease-Pharo60-Core,				#package : #Grease-Pharo60-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #defaults	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:11.363989+02:00' ],		#prior : OmReference [ '1040' ],		#self : OmReference [ '1041' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Grease-Tests-Core-MaxLeske.109'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1041' ],		#self : OmReference [ '1042' ],		#time : DateAndTime [ '2018-08-16T16:44:11.473467+02:00' ],		#trigger : @3	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'GRTestDynamicVariable class',				#isMetaSide : true			},			#name : #defaultValue,			#protocol : #defaults,			#sourceCode : 'defaultValue\r\t^ \'default test value\'',			#stamp : 'JohanBrichau 7/23/2017 17:44',			#package : #Grease-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1042' ],		#self : OmReference [ '1043' ],		#time : DateAndTime [ '2018-08-16T16:44:11.539058+02:00' ],		#trigger : OmReference [ '1041' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'GRTestDynamicVariable class\r\tinstanceVariableNames: \'\''			},			#name : #'GRTestDynamicVariable class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'GRDynamicVariable',					#traitCompositionSource : '{}',					#definitionSource : 'GRDynamicVariable subclass: #GRTestDynamicVariable\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Grease-Tests-Core\''				},				#name : #GRTestDynamicVariable,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #GRTestDynamicVariable,						#isMetaSide : false					},					#parent : @13,					#content : ''				},				#classVariables : OrderedCollection [ ],				#category : #Grease-Tests-Core,				#package : #Grease-Tests-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #defaults	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1043' ],		#self : OmReference [ '1044' ],		#time : DateAndTime [ '2018-08-16T16:44:11.591512+02:00' ],		#trigger : OmReference [ '1041' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'GRDynamicVariable',				#traitCompositionSource : '{}',				#definitionSource : 'GRDynamicVariable subclass: #GRTestDynamicVariable\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Grease-Tests-Core\''			},			#name : #GRTestDynamicVariable,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'GRTestDynamicVariable class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteGRTestDynamicVariable class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteGRTestDynamicVariable,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Grease-Tests-Core,			#package : #Grease-Tests-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1044' ],		#self : OmReference [ '1045' ],		#time : DateAndTime [ '2018-08-16T16:44:11.593097+02:00' ],		#trigger : OmReference [ '1041' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GRDynamicVariableTest,				#isMetaSide : false			},			#name : #testDefaultValue,			#protocol : #tests,			#sourceCode : 'testDefaultValue\r\tself assert: GRTestDynamicVariable value = \'default test value\'.\r\t\r\tGRTestDynamicVariable\r\t\tuse: \'my value\'\r\t\tduring: [  ].\r\tself assert: GRTestDynamicVariable value = \'default test value\' description:\'The default value is no longer correct\'.\t\r\t',			#stamp : 'JohanBrichau 9/8/2017 09:53',			#package : #Grease-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:11.702395+02:00' ],		#prior : OmReference [ '1045' ],		#self : OmReference [ '1046' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'PBKDF2-Core-UdoSchneider.1'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1046' ],		#self : OmReference [ '1047' ],		#time : DateAndTime [ '2018-08-16T16:44:11.983295+02:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #PBKDF2-Core,		#affectedPackageName : #PBKDF2-Core	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1047' ],		#self : OmReference [ '1048' ],		#time : DateAndTime [ '2018-08-16T16:44:12.11713+02:00' ],		#trigger : OmReference [ '1046' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #PBKDF2,		#newCategory : #PBKDF2-Core,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PBKDF2\r\tinstanceVariableNames: \'prf hLen p s c dkLen\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'PBKDF2-Core\''			},			#name : #PBKDF2,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PBKDF2,						#isMetaSide : false					},					#name : #prf,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PBKDF2,						#isMetaSide : false					},					#name : #hLen,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PBKDF2,						#isMetaSide : false					},					#name : #p,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PBKDF2,						#isMetaSide : false					},					#name : #s,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PBKDF2,						#isMetaSide : false					},					#name : #c,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PBKDF2,						#isMetaSide : false					},					#name : #dkLen,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PBKDF2 class\r\tinstanceVariableNames: \'\''				},				#name : #'PBKDF2 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PBKDF2,					#isMetaSide : false				},				#parent : @8,				#content : 'PBKDF2 implementation based on RFC 2898 (http://tools.ietf.org/html/rfc2898).\r\rUsage (Detailed Form):\r\rderivedKey := PBKDF2 new\r\t\thashFunction: SHA1;\r\t\tpassword: \'password\';\r\t\tsalt: \'salt\';\r\t\titerations: 4096;\r\t\tlength: 256;\r\t\tderiveKey.\r\t\t\rYou can also use some convenience class methods. E.g.:\r derivedKey := PBKDF2 derivedKeySHA1Password: password salt: salt.\r\rDefaults:\r\tprf: HMAC-SHA-1\r\titerations: 1000\r\tlength: 16 Bytes\r\t\r',				#stamp : 'UdoSchneider 7/9/2014 13:59'			},			#classVariables : OrderedCollection [ ],			#category : #PBKDF2-Core,			#package : #PBKDF2-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:12.341811+02:00' ],		#prior : OmReference [ '1048' ],		#self : OmReference [ '1049' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Mongo-BSON-NorbertHartl.1499359441'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1049' ],		#self : OmReference [ '1050' ],		#time : DateAndTime [ '2018-08-16T16:44:12.472343+02:00' ],		#trigger : @3	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BSON,				#isMetaSide : false			},			#name : #nextDictionary,			#protocol : #reading,			#sourceCode : 'nextDictionary\r\t| result byteSize |\r\tresult := Dictionary new.\r\tbyteSize := stream nextUInt32.\r\t[| type |\r\ttype := stream nextByte.\r\ttype = 0 ifTrue: [^result].\r\tself addObjectType: type to: result]\r\t\trepeat.\r\t^BSONError signal: \'Attempt to read off end of stream\'',			#stamp : 'MartinDias 4/19/2018 10:57',			#package : #Mongo-BSON		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BSON,				#isMetaSide : false			},			#name : #nextDictionary,			#protocol : #reading,			#sourceCode : 'nextDictionary\r\t| result byteSize start end |\r\tresult := Dictionary new.\r\tbyteSize := stream nextUInt32.\r\t[| type |\r\ttype := stream nextByte.\r\ttype = 0 ifTrue: [^result].\r\tself addObjectType: type to: result]\r\t\trepeat.\r\t^BSONError signal: \'Attempt to read off end of stream\'',			#stamp : 'EstebanLorenzano 6/9/2016 13:29:49',			#package : #Mongo-BSON		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1050' ],		#self : OmReference [ '1051' ],		#time : DateAndTime [ '2018-08-16T16:44:12.545361+02:00' ],		#trigger : OmReference [ '1049' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #OrderedIdentityDictionary,				#isMetaSide : false			},			#name : #bsonTypeCode,			#protocol : #'*Mongo-BSON',			#sourceCode : 'bsonTypeCode\r\t^3',			#stamp : 'EstebanLorenzano 6/9/2016 13:29:49',			#package : #Mongo-BSON		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1051' ],		#self : OmReference [ '1052' ],		#time : DateAndTime [ '2018-08-16T16:44:12.549091+02:00' ],		#trigger : OmReference [ '1049' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #OrderedIdentityDictionary,				#isMetaSide : false			},			#name : #'writeBSONOn:',			#protocol : #'*Mongo-BSON',			#sourceCode : 'writeBSONOn: aBSON \r\taBSON nextOrderedDictionaryPut: self',			#stamp : 'EstebanLorenzano 6/9/2016 13:29:49',			#package : #Mongo-BSON		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:12.876386+02:00' ],		#prior : OmReference [ '1052' ],		#self : OmReference [ '1053' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Mongo-Squeak-NorbertHartl.1499359441'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:12.999145+02:00' ],		#prior : OmReference [ '1053' ],		#self : OmReference [ '1054' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Mongo-Core-NorbertHartl.1499359441'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1054' ],		#self : OmReference [ '1055' ],		#time : DateAndTime [ '2018-08-16T16:44:13.100065+02:00' ],		#trigger : @3	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'MongoNativeError',				#traitCompositionSource : '{}',				#definitionSource : 'MongoNativeError subclass: #MongoCommandError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoCommandError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoCommandError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoCommandError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoCommandError,					#isMetaSide : false				},				#parent : @7,				#content : 'I represent  an error ocurred in a Mongo $cmd operation.',				#stamp : 'MartinDias 5/16/2016 23:52'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'MongoNativeError',				#traitCompositionSource : '{}',				#definitionSource : 'MongoNativeError subclass: #MongoCommandError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoCommandError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoCommandError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoCommandError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoCommandError,					#isMetaSide : false				},				#parent : @21,				#content : 'I represent  an error ocurred in a Mongo $cmd operation.',				#stamp : 'MartinDias 5/16/2016 23:52'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1055' ],		#self : OmReference [ '1056' ],		#time : DateAndTime [ '2018-08-16T16:44:13.321408+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'MongoNativeError',				#traitCompositionSource : '{}',				#definitionSource : 'MongoNativeError subclass: #MongoCommandError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoCommandError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoCommandError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoCommandError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoCommandError,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent  an error ocurred in a Mongo $cmd operation.',				#stamp : 'MartinDias 5/16/2016 23:52'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Error',				#traitCompositionSource : '{}',				#definitionSource : 'Error subclass: #MongoCommandError\r\tinstanceVariableNames: \'reply\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoCommandError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoCommandError,						#isMetaSide : false					},					#name : #reply,					#parent : @22				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoCommandError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoCommandError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @22			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoCommandError,					#isMetaSide : false				},				#parent : @22,				#content : 'I represent  an error ocurred in a Mongo $cmd operation.',				#stamp : 'MartinDias 5/16/2016 23:52'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1056' ],		#self : OmReference [ '1057' ],		#time : DateAndTime [ '2018-08-16T16:44:13.525529+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'MongoNativeError',				#traitCompositionSource : '{}',				#definitionSource : 'MongoNativeError subclass: #MongoLastError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoLastError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoLastError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoLastError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoLastError,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the answer of mongodb\'s getLastError command. \r\rSee more: https://docs.mongodb.org/manual/reference/command/getLastError/',				#stamp : 'MartinDias 6/24/2016 19:12'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'MongoNativeError',				#traitCompositionSource : '{}',				#definitionSource : 'MongoNativeError subclass: #MongoLastError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoLastError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoLastError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoLastError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @22			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoLastError,					#isMetaSide : false				},				#parent : @22,				#content : 'I represent the answer of mongodb\'s getLastError command. \r\rSee more: https://docs.mongodb.org/manual/reference/command/getLastError/',				#stamp : 'MartinDias 6/24/2016 19:12'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1057' ],		#self : OmReference [ '1058' ],		#time : DateAndTime [ '2018-08-16T16:44:13.67482+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'MongoNativeError',				#traitCompositionSource : '{}',				#definitionSource : 'MongoNativeError subclass: #MongoLastError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoLastError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoLastError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoLastError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoLastError,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent the answer of mongodb\'s getLastError command. \r\rSee more: https://docs.mongodb.org/manual/reference/command/getLastError/',				#stamp : 'MartinDias 6/24/2016 19:12'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Error',				#traitCompositionSource : '{}',				#definitionSource : 'Error subclass: #MongoLastError\r\tinstanceVariableNames: \'reply\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoLastError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoLastError,						#isMetaSide : false					},					#name : #reply,					#parent : @22				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoLastError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoLastError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @22			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoLastError,					#isMetaSide : false				},				#parent : @22,				#content : 'I represent the answer of mongodb\'s getLastError command. \r\rSee more: https://docs.mongodb.org/manual/reference/command/getLastError/',				#stamp : 'MartinDias 6/24/2016 19:12'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1058' ],		#self : OmReference [ '1059' ],		#time : DateAndTime [ '2018-08-16T16:44:13.83272+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'MongoNativeError',				#traitCompositionSource : '{}',				#definitionSource : 'MongoNativeError subclass: #MongoQueryError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoQueryError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoQueryError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoQueryError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoQueryError,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent an error ocurred on a query. \r\rSee my class references to better understand.',				#stamp : 'MartinDias 8/10/2016 16:05'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'MongoNativeError',				#traitCompositionSource : '{}',				#definitionSource : 'MongoNativeError subclass: #MongoQueryError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoQueryError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoQueryError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoQueryError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @22			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoQueryError,					#isMetaSide : false				},				#parent : @22,				#content : 'I represent an error ocurred on a query. \r\rSee my class references to better understand.',				#stamp : 'MartinDias 8/10/2016 16:05'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1059' ],		#self : OmReference [ '1060' ],		#time : DateAndTime [ '2018-08-16T16:44:13.995071+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'MongoNativeError',				#traitCompositionSource : '{}',				#definitionSource : 'MongoNativeError subclass: #MongoQueryError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoQueryError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoQueryError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoQueryError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoQueryError,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent an error ocurred on a query. \r\rSee my class references to better understand.',				#stamp : 'MartinDias 8/10/2016 16:05'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Error',				#traitCompositionSource : '{}',				#definitionSource : 'Error subclass: #MongoQueryError\r\tinstanceVariableNames: \'reply\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoQueryError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoQueryError,						#isMetaSide : false					},					#name : #reply,					#parent : @22				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoQueryError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoQueryError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @22			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoQueryError,					#isMetaSide : false				},				#parent : @22,				#content : 'I represent an error ocurred on a query. \r\rSee my class references to better understand.',				#stamp : 'MartinDias 8/10/2016 16:05'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1060' ],		#self : OmReference [ '1061' ],		#time : DateAndTime [ '2018-08-16T16:44:14.148706+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Error',				#traitCompositionSource : '{}',				#definitionSource : 'Error subclass: #MongoQueryError\r\tinstanceVariableNames: \'reply\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoQueryError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoQueryError,						#isMetaSide : false					},					#name : #reply,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoQueryError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoQueryError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoQueryError,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : 'I represent an error ocurred on a query. \r\rSee my class references to better understand.',		#newComment : '',		#oldStamp : 'MartinDias 8/10/2016 16:05',		#newStamp : ''	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1061' ],		#self : OmReference [ '1062' ],		#time : DateAndTime [ '2018-08-16T16:44:14.199856+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoWriteConcern,				#isMetaSide : false			},			#name : #'wtimeout:',			#protocol : #accessing,			#sourceCode : 'wtimeout: aTimeOutInMilliseconds\r\t"Set the \'wtimeout\' option of this mongodb write concern. This option specifies a time limit, in milliseconds, for the write concern. wtimeout is only applicable for w values greater than 1.\r\t\r\tSee more: https://docs.mongodb.com/manual/reference/write-concern/#wtimeout\r"\r\t\r\twtimeout := aTimeOutInMilliseconds',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1062' ],		#self : OmReference [ '1063' ],		#time : DateAndTime [ '2018-08-16T16:44:14.205779+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoWriteConcern,				#isMetaSide : false			},			#name : #wtimeout,			#protocol : #accessing,			#sourceCode : 'wtimeout\r\t"Answer the \'wtimeout\' option of this mongodb write concern. See #wtimeout:"\r\t\r\t^ wtimeout = 0\r\t\tifTrue: [ nil ]\r\t\tifFalse: [ wtimeout ]',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1063' ],		#self : OmReference [ '1064' ],		#time : DateAndTime [ '2018-08-16T16:44:14.208786+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoWriteConcern,				#isMetaSide : false			},			#name : #'w:',			#protocol : #accessing,			#sourceCode : 'w: anObject\r\t"Set the \'w\' option of this mongodb write concern. The w option requests acknowledgement that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags.\r\r\tPossible arguments:\r\t- \'majority\': Requests acknowledgment that write operations have propagated to the majority of voting nodes, including the primary, and have been written to the on-disk journal for these nodes.\r\t- <natural number>: Requests acknowledgement that the write operation has propagated to the specified number of mongod instances.\r\t- <collection of tags>: Requests acknowledgement that the write operations have propagated to a replica set member with the specified tag.\r\t\r\tSee more: https://docs.mongodb.com/manual/reference/write-concern/#w-option\r\t"\r\r\tw := anObject',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1064' ],		#self : OmReference [ '1065' ],		#time : DateAndTime [ '2018-08-16T16:44:14.21151+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoWriteConcern,				#isMetaSide : false			},			#name : #w,			#protocol : #accessing,			#sourceCode : 'w\r\t"Answer the \'w\' option of this mongodb write concern. See #w:"\r\t\r\t^ w',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1065' ],		#self : OmReference [ '1066' ],		#time : DateAndTime [ '2018-08-16T16:44:14.215138+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoWriteConcern,				#isMetaSide : false			},			#name : #'j:',			#protocol : #accessing,			#sourceCode : 'j: aBoolean\r\t"Set the \'j\' option of this mongodb write concern. The j option requests acknowledgement from MongoDB that the write operation has been written to the journal.\r\t\r\tSee more: https://docs.mongodb.com/manual/reference/write-concern/#j-option\r\t"\r\t\r\tj := aBoolean',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1066' ],		#self : OmReference [ '1067' ],		#time : DateAndTime [ '2018-08-16T16:44:14.218468+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoWriteConcern,				#isMetaSide : false			},			#name : #j,			#protocol : #accessing,			#sourceCode : 'j\r\t"Answer the \'j\' option of this mongodb write concern. See #j:"\r\r\t^ j',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1067' ],		#self : OmReference [ '1068' ],		#time : DateAndTime [ '2018-08-16T16:44:14.221765+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MongoWriteConcern\r\tinstanceVariableNames: \'w j wtimeout\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Utilities\''			},			#name : #MongoWriteConcern,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoWriteConcern,						#isMetaSide : false					},					#name : #w,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoWriteConcern,						#isMetaSide : false					},					#name : #j,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoWriteConcern,						#isMetaSide : false					},					#name : #wtimeout,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoWriteConcern class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoWriteConcern class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoWriteConcern,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a MongoDb write concern. \r\rWrite concern describes the level of acknowledgement requested from MongoDB for write operations to a standalone mongod or to replica sets or to sharded clusters. In sharded clusters, mongos instances will pass the write concern on to the shards.\r\rSee documentation in my #accessing protocol.\rSee more in the web: https://docs.mongodb.com/manual/reference/write-concern/',				#stamp : 'MartinDias 4/15/2018 12:35'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Utilities,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1068' ],		#self : OmReference [ '1069' ],		#time : DateAndTime [ '2018-08-16T16:44:14.222448+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoWriteConcern,				#isMetaSide : false			},			#name : #concernForCommand,			#protocol : #converting,			#sourceCode : 'concernForCommand\r\t| dict |\r\tdict := Dictionary new.\r\tself asKeysAndValuesInto: dict.\r\t^dict isEmpty\r\t\tifTrue: [ nil ]\r\t\tifFalse: [ dict ]',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1069' ],		#self : OmReference [ '1070' ],		#time : DateAndTime [ '2018-08-16T16:44:14.225347+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoWriteConcern,				#isMetaSide : false			},			#name : #'asKeysAndValuesInto:',			#protocol : #converting,			#sourceCode : 'asKeysAndValuesInto: aDictionary\r\tself j ifNotNil: [:value | aDictionary at: \'j\' put: value ].\r\tself w ifNotNil: [:value | aDictionary at: \'w\' put: value ].\r\tself wtimeout ifNotNil: [:value | aDictionary at: \'wtimeout\' put: value ]',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1070' ],		#self : OmReference [ '1071' ],		#time : DateAndTime [ '2018-08-16T16:44:14.228484+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MongoWriteConcern\r\tinstanceVariableNames: \'w j wtimeout\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Utilities\''			},			#name : #MongoWriteConcern,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoWriteConcern,						#isMetaSide : false					},					#name : #w,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoWriteConcern,						#isMetaSide : false					},					#name : #j,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoWriteConcern,						#isMetaSide : false					},					#name : #wtimeout,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoWriteConcern class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoWriteConcern class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoWriteConcern,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a MongoDb write concern. \r\rWrite concern describes the level of acknowledgement requested from MongoDB for write operations to a standalone mongod or to replica sets or to sharded clusters. In sharded clusters, mongos instances will pass the write concern on to the shards.\r\rSee documentation in my #accessing protocol.\rSee more in the web: https://docs.mongodb.com/manual/reference/write-concern/',				#stamp : 'MartinDias 4/15/2018 12:35'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Utilities,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #converting	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1071' ],		#self : OmReference [ '1072' ],		#time : DateAndTime [ '2018-08-16T16:44:14.229627+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoWriteConcern class',				#isMetaSide : true			},			#name : #majority,			#protocol : #accessing,			#sourceCode : 'majority\r\t^\'majority\'',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1072' ],		#self : OmReference [ '1073' ],		#time : DateAndTime [ '2018-08-16T16:44:14.232922+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MongoWriteConcern class\r\tinstanceVariableNames: \'\''			},			#name : #'MongoWriteConcern class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Object',					#traitCompositionSource : '{}',					#definitionSource : 'Object subclass: #MongoWriteConcern\r\tinstanceVariableNames: \'w j wtimeout\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Utilities\''				},				#name : #MongoWriteConcern,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #MongoWriteConcern,							#isMetaSide : false						},						#name : #w,						#parent : @13					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #MongoWriteConcern,							#isMetaSide : false						},						#name : #j,						#parent : @13					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #MongoWriteConcern,							#isMetaSide : false						},						#name : #wtimeout,						#parent : @13					}				],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #MongoWriteConcern,						#isMetaSide : false					},					#parent : @13,					#content : 'I represent a MongoDb write concern. \r\rWrite concern describes the level of acknowledgement requested from MongoDB for write operations to a standalone mongod or to replica sets or to sharded clusters. In sharded clusters, mongos instances will pass the write concern on to the shards.\r\rSee documentation in my #accessing protocol.\rSee more in the web: https://docs.mongodb.com/manual/reference/write-concern/',					#stamp : 'MartinDias 4/15/2018 12:35'				},				#classVariables : OrderedCollection [ ],				#category : #Mongo-Core-Utilities,				#package : #Mongo-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1073' ],		#self : OmReference [ '1074' ],		#time : DateAndTime [ '2018-08-16T16:44:14.23944+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MongoWriteConcern\r\tinstanceVariableNames: \'w j wtimeout\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Mongo-Core-Utilities\''			},			#name : #MongoWriteConcern,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteMongoWriteConcern,						#isMetaSide : false					},					#name : #w,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteMongoWriteConcern,						#isMetaSide : false					},					#name : #j,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteMongoWriteConcern,						#isMetaSide : false					},					#name : #wtimeout,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoWriteConcern class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteMongoWriteConcern class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteMongoWriteConcern,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Utilities,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1074' ],		#self : OmReference [ '1075' ],		#time : DateAndTime [ '2018-08-16T16:44:14.241279+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoNativeError,				#isMetaSide : false			},			#name : #reply,			#protocol : #accessing,			#sourceCode : 'reply\r\t^reply',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1075' ],		#self : OmReference [ '1076' ],		#time : DateAndTime [ '2018-08-16T16:44:14.244538+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoNativeError,				#isMetaSide : false			},			#name : #messageText,			#protocol : #accessing,			#sourceCode : 'messageText\r\t^ self errorMessage',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1076' ],		#self : OmReference [ '1077' ],		#time : DateAndTime [ '2018-08-16T16:44:14.247713+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoNativeError,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: aReply\r\tself initialize.\r\treply := aReply.',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1077' ],		#self : OmReference [ '1078' ],		#time : DateAndTime [ '2018-08-16T16:44:14.250845+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Error',				#traitCompositionSource : '{}',				#definitionSource : 'Error subclass: #MongoNativeError\r\tinstanceVariableNames: \'reply\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoNativeError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoNativeError,						#isMetaSide : false					},					#name : #reply,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoNativeError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoNativeError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoNativeError,					#isMetaSide : false				},				#parent : @8,				#content : 'My subclasses are Mongo errors, which are originally represented with Dictionary.',				#stamp : 'MartinDias 8/10/2016 16:15'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #initialization	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1078' ],		#self : OmReference [ '1079' ],		#time : DateAndTime [ '2018-08-16T16:44:14.251306+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoNativeError,				#isMetaSide : false			},			#name : #errorMessage,			#protocol : #accessing,			#sourceCode : 'errorMessage\r\t"Answer a String description of the Mongo native error"\r\t\r\t^ self subclassResponsibility',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1079' ],		#self : OmReference [ '1080' ],		#time : DateAndTime [ '2018-08-16T16:44:14.253999+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoNativeError,				#isMetaSide : false			},			#name : #'codeIfPresent:ifAbsent:',			#protocol : #accessing,			#sourceCode : 'codeIfPresent: presentBlock ifAbsent: absentBlock\r\t^ reply \r\t\tat: \'code\' \r\t\tifPresent: [ :code | presentBlock cull: code ]\r\t\tifAbsent: absentBlock',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1080' ],		#self : OmReference [ '1081' ],		#time : DateAndTime [ '2018-08-16T16:44:14.25644+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoNativeError,				#isMetaSide : false			},			#name : #code,			#protocol : #accessing,			#sourceCode : 'code\r\t^ reply at: \'code\'',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1081' ],		#self : OmReference [ '1082' ],		#time : DateAndTime [ '2018-08-16T16:44:14.25848+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Error',				#traitCompositionSource : '{}',				#definitionSource : 'Error subclass: #MongoNativeError\r\tinstanceVariableNames: \'reply\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''			},			#name : #MongoNativeError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoNativeError,						#isMetaSide : false					},					#name : #reply,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoNativeError class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoNativeError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoNativeError,					#isMetaSide : false				},				#parent : @8,				#content : 'My subclasses are Mongo errors, which are originally represented with Dictionary.',				#stamp : 'MartinDias 8/10/2016 16:15'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1082' ],		#self : OmReference [ '1083' ],		#time : DateAndTime [ '2018-08-16T16:44:14.259011+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoNativeError class',				#isMetaSide : true			},			#name : #'signalFor:',			#protocol : #signalling,			#sourceCode : 'signalFor: aReply\r\t^ (self newFor: aReply) signal',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1083' ],		#self : OmReference [ '1084' ],		#time : DateAndTime [ '2018-08-16T16:44:14.261433+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MongoNativeError class\r\tinstanceVariableNames: \'\''			},			#name : #'MongoNativeError class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Error',					#traitCompositionSource : '{}',					#definitionSource : 'Error subclass: #MongoNativeError\r\tinstanceVariableNames: \'reply\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''				},				#name : #MongoNativeError,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #MongoNativeError,							#isMetaSide : false						},						#name : #reply,						#parent : @13					}				],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #MongoNativeError,						#isMetaSide : false					},					#parent : @13,					#content : 'My subclasses are Mongo errors, which are originally represented with Dictionary.',					#stamp : 'MartinDias 8/10/2016 16:15'				},				#classVariables : OrderedCollection [ ],				#category : #Mongo-Core-Errors,				#package : #Mongo-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #signalling	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1084' ],		#self : OmReference [ '1085' ],		#time : DateAndTime [ '2018-08-16T16:44:14.261984+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoNativeError class',				#isMetaSide : true			},			#name : #'newFor:',			#protocol : #'instance creation',			#sourceCode : 'newFor: aReply\r\t^self basicNew\r\t\tinitialize: aReply;\r\t\tyourself',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1085' ],		#self : OmReference [ '1086' ],		#time : DateAndTime [ '2018-08-16T16:44:14.264245+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MongoNativeError class\r\tinstanceVariableNames: \'\''			},			#name : #'MongoNativeError class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Error',					#traitCompositionSource : '{}',					#definitionSource : 'Error subclass: #MongoNativeError\r\tinstanceVariableNames: \'reply\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Errors\''				},				#name : #MongoNativeError,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #MongoNativeError,							#isMetaSide : false						},						#name : #reply,						#parent : @13					}				],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #MongoNativeError,						#isMetaSide : false					},					#parent : @13,					#content : 'My subclasses are Mongo errors, which are originally represented with Dictionary.',					#stamp : 'MartinDias 8/10/2016 16:15'				},				#classVariables : OrderedCollection [ ],				#category : #Mongo-Core-Errors,				#package : #Mongo-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #'instance creation'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1086' ],		#self : OmReference [ '1087' ],		#time : DateAndTime [ '2018-08-16T16:44:14.272425+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Error',				#traitCompositionSource : '{}',				#definitionSource : 'Error subclass: #MongoNativeError\r\tinstanceVariableNames: \'reply\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Mongo-Core-Errors\''			},			#name : #MongoNativeError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteMongoNativeError,						#isMetaSide : false					},					#name : #reply,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoNativeError class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteMongoNativeError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteMongoNativeError,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Errors,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1087' ],		#self : OmReference [ '1088' ],		#time : DateAndTime [ '2018-08-16T16:44:14.273471+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #mongo3CollectionNames,			#protocol : #operations,			#sourceCode : 'mongo3CollectionNames\r\t"Answer the names of the collections in this database (for MongoDB >= 3.0).\r\r\tSee more at https://docs.mongodb.com/manual/reference/command/listCollections/"\r\r\t| reply |\r\treply := self command: {(#listCollections -> 1)} asDictionary.\r\t^ ((reply at: \'cursor\') at: \'firstBatch\') collect: [ :each | each at: \'name\' ]',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1088' ],		#self : OmReference [ '1089' ],		#time : DateAndTime [ '2018-08-16T16:44:14.275619+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #mongo2CollectionNames,			#protocol : #operations,			#sourceCode : 'mongo2CollectionNames\r\t"Answer the names of the collections in this database (for MongoDB < 3.0). \r\tBefore 3.0, it is possible to obtain this information via a query to <database>.system.namespaces.\r\tThis has been deprecated since MongoDB 3.0, then such query returns an empty collection. See more at: https://docs.mongodb.com/manual/reference/system-collections/#%3Cdatabase%3E.system.namespaces"\r\r\t| query reply names real |\r\tquery := MongoQuery new collection: (MongoMetaCollection name: \'system.namespaces\').\r\treply := self query: query.\r\t"Drop options on the floor for now"\r\tnames := reply collect: [ :each | each at: \'name\' ].\r\treal := names select: [ :each | (each occurrencesOf: $.) = 1 ].\r\t^real collect: [:each | each readStream upTo: $.; upToEnd ]',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1089' ],		#self : OmReference [ '1090' ],		#time : DateAndTime [ '2018-08-16T16:44:14.277665+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #'lastError:',			#protocol : #operations,			#sourceCode : 'lastError: aWriteConcernOrNil\r\t"Answer the result of getLastError mongodb command. \r\t\r\tSee more: https://docs.mongodb.com/manual/reference/command/getLastError\r\t"\r\r\t| reply command |\r\tcommand := OrderedIdentityDictionary new \r\t\tat: \'getLastError\' put: 1; \r\t\tyourself.\r\taWriteConcernOrNil ifNotNil: [ aWriteConcernOrNil asKeysAndValuesInto: command ].\r\treply := self command: command.\r\t\r\t^MongoLastError newFor: reply',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1090' ],		#self : OmReference [ '1091' ],		#time : DateAndTime [ '2018-08-16T16:44:14.280155+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #'commandUpdate:with:collection:writeConcern:',			#protocol : #operations,			#sourceCode : 'commandUpdate: origDictionary with: newDictionary collection: collectionName writeConcern: aConcern\r\t"Update using Mongo command. Answer the output of the command.\r\tSee more on https://docs.mongodb.com/manual/reference/command/update/"\r\r\t| dict |\r\tdict := {\r\t\t\'update\'->collectionName.\r\t\t\'updates\'->{{\r\t\t\t\'q\'->origDictionary.\r\t\t\t\'u\'->newDictionary.\r\t\t\t} as: OrderedDictionary}.\r\t\t} as: OrderedDictionary.\r\taConcern ifNotNil: [\r\t\tdict at: \'writeConcern\' put: aConcern concernForCommand].\r\t^self command: dict.',			#stamp : 'MartinDias 4/19/2018 12:07',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1091' ],		#self : OmReference [ '1092' ],		#time : DateAndTime [ '2018-08-16T16:44:14.282507+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #'commandInsert:collection:writeConcern:',			#protocol : #operations,			#sourceCode : 'commandInsert: newDictionary collection: collectionName writeConcern: aConcern\r\t"Insert using Mongo command. Answer the output of the command.\r\tSee more on https://docs.mongodb.com/manual/reference/command/insert/"\r\r\t| dict |\r\tdict := {\r\t\t\'insert\'->collectionName.\r\t\t\'documents\'->{newDictionary}.\r\t\t} as: OrderedDictionary.\r\taConcern ifNotNil: [\r\t\tdict at: \'writeConcern\' put: aConcern concernForCommand].\r\t^self command: dict.',			#stamp : 'MartinDias 4/19/2018 12:07',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1092' ],		#self : OmReference [ '1093' ],		#time : DateAndTime [ '2018-08-16T16:44:14.284636+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #'commandDelete:limit:collection:writeConcern:',			#protocol : #operations,			#sourceCode : 'commandDelete: origDictionary limit: aLimit collection: collectionName writeConcern: aConcern\r\t"Delete using Mongo command. Answer the output of the command.\r\tSee more on https://docs.mongodb.com/manual/reference/command/delete/"\r\r\t| dict |\r\tdict := {\r\t\t\'delete\'->collectionName.\r\t\t\'deletes\'->{{\r\t\t\t\'q\'->origDictionary.\r\t\t\t\'limit\'->aLimit.\r\t\t\t} as: OrderedDictionary}.\r\t\t} as: OrderedDictionary.\r\taConcern ifNotNil: [\r\t\tdict at: \'writeConcern\' put: aConcern concernForCommand].\r\t^self command: dict.',			#stamp : 'MartinDias 4/19/2018 12:07',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1093' ],		#self : OmReference [ '1094' ],		#time : DateAndTime [ '2018-08-16T16:44:14.287314+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoCollection,				#isMetaSide : false			},			#name : #'commandUpdate:with:writeConcern:',			#protocol : #private-operations,			#sourceCode : 'commandUpdate: origDictionary with: newDictionary writeConcern: aConcern\r\t"Update using Mongo command. Answer the output of the command.\r\tSee more on https://docs.mongodb.com/manual/reference/command/update/"\r\r\t^database commandUpdate: origDictionary with: newDictionary collection: name writeConcern: aConcern',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1094' ],		#self : OmReference [ '1095' ],		#time : DateAndTime [ '2018-08-16T16:44:14.289465+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoCollection,				#isMetaSide : false			},			#name : #'commandInsert:writeConcern:',			#protocol : #private-operations,			#sourceCode : 'commandInsert: newDictionary writeConcern: aConcern\r\t"Insert using Mongo command. Answer the output of the command.\r\tSee more on https://docs.mongodb.com/manual/reference/command/insert/"\r\r\t^database commandInsert: newDictionary collection: name writeConcern: aConcern',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1095' ],		#self : OmReference [ '1096' ],		#time : DateAndTime [ '2018-08-16T16:44:14.291708+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoCollection,				#isMetaSide : false			},			#name : #'commandDelete:limit:writeConcern:',			#protocol : #private-operations,			#sourceCode : 'commandDelete: origDictionary limit: aLimit writeConcern: aConcern\r\t"Delete using Mongo command. Answer the output of the command.\r\tSee more on https://docs.mongodb.com/manual/reference/command/delete/"\r\r\t^database commandDelete: origDictionary limit: aLimit collection: name writeConcern: aConcern',			#stamp : 'MartinDias 4/19/2018 11:04:11',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1096' ],		#self : OmReference [ '1097' ],		#time : DateAndTime [ '2018-08-16T16:44:14.293841+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoCommandError,				#isMetaSide : false			},			#name : #errorMessage,			#protocol : #accessing,			#sourceCode : 'errorMessage\r\t^ reply at: \'errmsg\' ifAbsent: \'unknown\'',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1097' ],		#self : OmReference [ '1098' ],		#time : DateAndTime [ '2018-08-16T16:44:14.296295+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #OrderedDictionary,				#isMetaSide : false			},			#name : #asMongoQuery,			#protocol : #'*mongo-core',			#sourceCode : 'asMongoQuery\r\t^ self',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1098' ],		#self : OmReference [ '1099' ],		#time : DateAndTime [ '2018-08-16T16:44:14.298804+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Collection',				#traitCompositionSource : '{}',				#definitionSource : 'Collection subclass: #OrderedDictionary\r\tinstanceVariableNames: \'dictionary orderedKeys\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Collections-Sequenceable\''			},			#name : #OrderedDictionary,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #OrderedDictionary,						#isMetaSide : false					},					#name : #dictionary,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #OrderedDictionary,						#isMetaSide : false					},					#name : #orderedKeys,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'OrderedDictionary class\r\tinstanceVariableNames: \'\''				},				#name : #'OrderedDictionary class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #OrderedDictionary,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a collection that act as a Dictionary except that I use key insertion order when enumerating, printing, or returing collections of keys/values/associations, but not when testing for equality (but it does not matters in this case).\r\rI will assume that you know the Dictionary class in this comment.\r\rDescription\r--------------------\r\rI work mainly as a Dictionary except that I also store the keys in an Array that keeps the order of elements. \r\rI should be used ONLY if you need to keep the keys ordered. Else you should use a Dictionary that is faster and keep less values into memory. (I duplicate the keys).\rInsertion, update, and inclusion testing have O(1) complexity while removing has O(n) worst-case.\r\rPublic API and Key Messages\r--------------------\r\r- #at: aKey put: aValue / #at: aKey ifAbsentPut: aValue \t\tallow to add an element.\r  \r- #at: aKey / #at: aKey ifAbsent: aBlock / #at: aKey ifPresent: aBlock ifAbsent: aBlock \t\tallow to access my values.\r\r- #keysDo: aBlock / #valuesDo: aBlock / #associationsDo: \t\tallow to iterate on me effectively.\r\t\t\r- #keyAtIndex: anIndex / KeyAtIndex: anIndex ifAbsent: aBlock \t\tallow to acess my keys from an index.\r\rExamples\r------------------\r\r\t"For basic examples see Dictionary comment."\r\t\r\tordDic := (Dictionary with: 1 -> $a with: 2 -> $b) asOrderedDictionary.\r\tordDic.   \t\t"returns:  an OrderedDictionary(1->$a 2->$b)"\r\tordDic keyAtIndex: 2.\t\t"returns:  2"\r\t\rInternal Representation and Key Implementation Points.\r-------------------\r\r    Instance Variables\r\tdictionary:\t\t\t<Dictionary>\t\tA dictionary where I store my keys and values.\r\torderedKeys:\t\t<Array>\t\t\tAn ordered collection where I store my keys to maintain the order.\r\rI base my implementation on a Dictionary and when I need to execute an action where the order of the values is important I use the keys in my ordered collection.',				#stamp : 'VincentBlondeau 4/1/2016 18:22'			},			#classVariables : OrderedCollection [ ],			#category : #Collections-Sequenceable,			#package : #Collections-Sequenceable,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*mongo-core'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1099' ],		#self : OmReference [ '1100' ],		#time : DateAndTime [ '2018-08-16T16:44:14.308717+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SCRAMSHA1AuthMechanism class',				#isMetaSide : true			},			#name : #authenticateAgainstAdmin,			#protocol : #accessing,			#sourceCode : 'authenticateAgainstAdmin\r\toverrideDB := true',			#stamp : 'mikefilonov 6/12/2017 12:25',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1100' ],		#self : OmReference [ '1101' ],		#time : DateAndTime [ '2018-08-16T16:44:14.310952+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #OrderedIdentityDictionary,				#isMetaSide : false			},			#name : #asMongoQuery,			#protocol : #'*mongo-core',			#sourceCode : 'asMongoQuery\r\t^ self',			#stamp : 'mikefilonov 6/11/2017 11:15',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1101' ],		#self : OmReference [ '1102' ],		#time : DateAndTime [ '2018-08-16T16:44:14.312475+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #collections,			#protocol : #operations,			#sourceCode : 'collections\r\t"Answer the collections in this database"\r\r\t| collectionNames |\r\tcollectionNames := root majorVersion < 3\r\t\tifTrue: [ self mongo2CollectionNames ]\r\t\tifFalse: [ self mongo3CollectionNames ].\r\t^ collectionNames\r\t\tcollect: [:each | MongoCollection database: self name: each ]',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #collections,			#protocol : #operations,			#sourceCode : 'collections\r\t| query reply names real stripped |\r\tquery := MongoQuery new collection: (MongoMetaCollection name: \'system.namespaces\').\r\treply := self query: query.\r\t"Drop options on the floor for now"\r\tnames := reply collect: [:each | each at: \'name\'].\r\treal := names select: [:each | (each occurrencesOf: $.) = 1].\r\tstripped := real collect: [:each | each readStream upTo: $.; upToEnd].\r\t^stripped collect: [:each | MongoCollection database: self name: each]',			#stamp : 'FrancoisStephany 11/6/2012 15:43',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1102' ],		#self : OmReference [ '1103' ],		#time : DateAndTime [ '2018-08-16T16:44:14.314058+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #'commandUpdate:with:collection:',			#protocol : #operations,			#sourceCode : 'commandUpdate: origDictionary with: newDictionary collection: collectionName \r\t^self commandUpdate: origDictionary with: newDictionary collection: collectionName writeConcern: nil.',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #'commandUpdate:with:collection:',			#protocol : #operations,			#sourceCode : 'commandUpdate: origDictionary with: newDictionary collection: collectionName \r\t"Update using Mongo command. Answer the output of the command.\r\tSee more on https://docs.mongodb.com/manual/reference/command/update/"\r\r\t^ self command: (OrderedIdentityDictionary new\r\t\tat: #update put: collectionName;\r\t\tat: #updates put: {{\r\t\t\t\'q\'->origDictionary.\r\t\t\t\'u\'->newDictionary.\r\t\t\t} asDictionary};\r\t\tyourself)',			#stamp : 'mikefilonov 7/4/2017 13:15',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1103' ],		#self : OmReference [ '1104' ],		#time : DateAndTime [ '2018-08-16T16:44:14.315614+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #lastError,			#protocol : #operations,			#sourceCode : 'lastError\r\t"Answer the result of getLastError mongodb command. \r\t\r\tSee more: https://docs.mongodb.com/manual/reference/command/getLastError\r\t"\r\r\t^ self lastError: nil',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoDatabase,				#isMetaSide : false			},			#name : #lastError,			#protocol : #operations,			#sourceCode : 'lastError\r\t| reply |\r\treply := self command: (OrderedIdentityDictionary new at: #getLastError put: 1; yourself).\r\t\r\t^ MongoLastError newFor: reply',			#stamp : 'mikefilonov 7/4/2017 12:30',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1104' ],		#self : OmReference [ '1105' ],		#time : DateAndTime [ '2018-08-16T16:44:14.31707+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoCommandError class',				#isMetaSide : true			},			#name : #'newFor:',			#protocol : #'instance creation',			#sourceCode : 'newFor: aReply\r\t^self basicNew\r\t\tinitialize: aReply;\r\t\tyourself',			#stamp : 'MartinDias 5/17/2016 00:12',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1105' ],		#self : OmReference [ '1106' ],		#time : DateAndTime [ '2018-08-16T16:44:14.320831+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoCommandError class',				#isMetaSide : true			},			#name : #'signalFor:',			#protocol : #signalling,			#sourceCode : 'signalFor: aReply\r\t^ (self newFor: aReply) signal',			#stamp : 'MartinDias 5/17/2016 00:13',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1106' ],		#self : OmReference [ '1107' ],		#time : DateAndTime [ '2018-08-16T16:44:14.322331+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoCommandError,				#isMetaSide : false			},			#name : #code,			#protocol : #accessing,			#sourceCode : 'code\r\t^ reply at: \'code\'',			#stamp : 'MartinDias 6/4/2016 02:25',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1107' ],		#self : OmReference [ '1108' ],		#time : DateAndTime [ '2018-08-16T16:44:14.323597+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoCommandError,				#isMetaSide : false			},			#name : #'codeIfPresent:ifAbsent:',			#protocol : #accessing,			#sourceCode : 'codeIfPresent: presentBlock ifAbsent: absentBlock\r\t^ reply \r\t\tat: \'code\' \r\t\tifPresent: [ :code | presentBlock cull: code ]\r\t\tifAbsent: absentBlock',			#stamp : 'MartinDias 5/27/2016 19:58',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1108' ],		#self : OmReference [ '1109' ],		#time : DateAndTime [ '2018-08-16T16:44:14.32482+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoCommandError,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: aReply\r\tself initialize.\r\treply := aReply.',			#stamp : 'MartinDias 5/16/2016 23:49',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1109' ],		#self : OmReference [ '1110' ],		#time : DateAndTime [ '2018-08-16T16:44:14.325963+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoCommandError,				#isMetaSide : false			},			#name : #messageText,			#protocol : #accessing,			#sourceCode : 'messageText\r\t^ reply at: \'errmsg\' ifAbsent: \'unknown\'',			#stamp : 'MartinDias 5/17/2016 00:18',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1110' ],		#self : OmReference [ '1111' ],		#time : DateAndTime [ '2018-08-16T16:44:14.327155+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoCommandError,				#isMetaSide : false			},			#name : #reply,			#protocol : #accessing,			#sourceCode : 'reply\r\t^reply',			#stamp : 'MartinDias 5/16/2016 23:55',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1111' ],		#self : OmReference [ '1112' ],		#time : DateAndTime [ '2018-08-16T16:44:14.328281+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoLastError class',				#isMetaSide : true			},			#name : #'newFor:',			#protocol : #'instance creation',			#sourceCode : 'newFor: aGetLastErrorReply\r\t^ self basicNew\r\t\tinitialize: aGetLastErrorReply;\r\t\tyourself',			#stamp : 'MartinDias 6/24/2016 19:37',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1112' ],		#self : OmReference [ '1113' ],		#time : DateAndTime [ '2018-08-16T16:44:14.330011+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoLastError,				#isMetaSide : false			},			#name : #code,			#protocol : #accessing,			#sourceCode : 'code\r\t"Error code. See: https://docs.mongodb.com/manual/reference/command/getLastError/#getLastError.code"\r\t\r\t^ reply at: \'code\'',			#stamp : 'MartinDias 6/24/2016 19:29',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1113' ],		#self : OmReference [ '1114' ],		#time : DateAndTime [ '2018-08-16T16:44:14.331205+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoLastError,				#isMetaSide : false			},			#name : #'codeIfPresent:ifAbsent:',			#protocol : #accessing,			#sourceCode : 'codeIfPresent: presentBlock ifAbsent: absentBlock\r\t"Error code. See: https://docs.mongodb.com/manual/reference/command/getLastError/#getLastError.code"\r\r\t^ reply \r\t\tat: \'code\' \r\t\tifPresent: [ :code | presentBlock cull: code ]\r\t\tifAbsent: absentBlock\r',			#stamp : 'MartinDias 6/24/2016 19:47',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1114' ],		#self : OmReference [ '1115' ],		#time : DateAndTime [ '2018-08-16T16:44:14.332409+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoLastError,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: aGetLastErrorReply\r\tself initialize.\r\t\r\treply := aGetLastErrorReply.',			#stamp : 'MartinDias 6/24/2016 19:38',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1115' ],		#self : OmReference [ '1116' ],		#time : DateAndTime [ '2018-08-16T16:44:14.334691+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoQueryError class',				#isMetaSide : true			},			#name : #'newFor:',			#protocol : #'instance creation',			#sourceCode : 'newFor: aReply\r\t^self basicNew\r\t\tinitialize: aReply;\r\t\tyourself',			#stamp : 'MartinDias 6/24/2016 21:00',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1116' ],		#self : OmReference [ '1117' ],		#time : DateAndTime [ '2018-08-16T16:44:14.336347+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoQueryError class',				#isMetaSide : true			},			#name : #'signalFor:',			#protocol : #signalling,			#sourceCode : 'signalFor: aReply\r\t^ (self newFor: aReply) signal',			#stamp : 'MartinDias 6/24/2016 21:00',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1117' ],		#self : OmReference [ '1118' ],		#time : DateAndTime [ '2018-08-16T16:44:14.337625+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoQueryError,				#isMetaSide : false			},			#name : #code,			#protocol : #accessing,			#sourceCode : 'code\r\t^ reply at: \'code\'',			#stamp : 'MartinDias 6/24/2016 21:00',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1118' ],		#self : OmReference [ '1119' ],		#time : DateAndTime [ '2018-08-16T16:44:14.338926+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoQueryError,				#isMetaSide : false			},			#name : #'codeIfPresent:ifAbsent:',			#protocol : #accessing,			#sourceCode : 'codeIfPresent: presentBlock ifAbsent: absentBlock\r\t^ reply \r\t\tat: \'code\' \r\t\tifPresent: [ :code | presentBlock cull: code ]\r\t\tifAbsent: absentBlock',			#stamp : 'MartinDias 6/24/2016 21:00',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1119' ],		#self : OmReference [ '1120' ],		#time : DateAndTime [ '2018-08-16T16:44:14.340846+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoQueryError,				#isMetaSide : false			},			#name : #errorMessage,			#protocol : #accessing,			#sourceCode : 'errorMessage\r\t"A more descriptive alias for #err."\r\t\r\t^ self err',			#stamp : ' 4/19/2018 10:56:06',			#package : #Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoQueryError,				#isMetaSide : false			},			#name : #errorMessage,			#protocol : #accessing,			#sourceCode : 'errorMessage\r\t^ self err',			#stamp : 'MartinDias 6/24/2016 21:01',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1120' ],		#self : OmReference [ '1121' ],		#time : DateAndTime [ '2018-08-16T16:44:14.342125+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoQueryError,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: aReply\r\tself initialize.\r\treply := aReply.',			#stamp : 'MartinDias 6/24/2016 21:00',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1121' ],		#self : OmReference [ '1122' ],		#time : DateAndTime [ '2018-08-16T16:44:14.343329+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoQueryError,				#isMetaSide : false			},			#name : #messageText,			#protocol : #accessing,			#sourceCode : 'messageText\r\t^ self errorMessage',			#stamp : 'MartinDias 6/24/2016 21:02',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1122' ],		#self : OmReference [ '1123' ],		#time : DateAndTime [ '2018-08-16T16:44:14.344486+02:00' ],		#trigger : OmReference [ '1054' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoQueryError,				#isMetaSide : false			},			#name : #reply,			#protocol : #accessing,			#sourceCode : 'reply\r\t^reply',			#stamp : 'MartinDias 6/24/2016 21:00',			#package : #Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:14.464953+02:00' ],		#prior : OmReference [ '1123' ],		#self : OmReference [ '1124' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Mongo-Queries-NorbertHartl.1499359441'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1124' ],		#self : OmReference [ '1125' ],		#time : DateAndTime [ '2018-08-16T16:44:14.606858+02:00' ],		#trigger : @3	},	#content : EpCategoryRemoval {		#classCategoryName : #Mongo-Queries,		#affectedPackageName : #Mongo-Queries	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:14.685189+02:00' ],		#prior : OmReference [ '1125' ],		#self : OmReference [ '1126' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Mongo-Tests-BSON-NorbertHartl.1499359441'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:14.832574+02:00' ],		#prior : OmReference [ '1126' ],		#self : OmReference [ '1127' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Mongo-Tests-Core-NorbertHartl.1499359441'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1127' ],		#self : OmReference [ '1128' ],		#time : DateAndTime [ '2018-08-16T16:44:14.942388+02:00' ],		#trigger : @3	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoTest,				#isMetaSide : false			},			#name : #testUpdateWithWriteConcern,			#protocol : #tests,			#sourceCode : 'testUpdateWithWriteConcern\r\t| result old new |\r\told := { \'key\' -> \'value\' } asDictionary.\r\tnew := { \'key\' -> \'new value\' } asDictionary.\r\r\tcollection add: old.\r\tcollection commandUpdate: old with: new.\r\tresult := collection query: [:query | ].\r\tself assert: result size equals: 1.\r\tself assert: (result first at: \'key\') equals: \'new value\'.\r\r',			#stamp : 'MartinDias 4/19/2018 12:12',			#package : #Mongo-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1128' ],		#self : OmReference [ '1129' ],		#time : DateAndTime [ '2018-08-16T16:44:15.094384+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoTest,				#isMetaSide : false			},			#name : #testRemoveWithWriteConcern,			#protocol : #tests,			#sourceCode : 'testRemoveWithWriteConcern\r\t| data |\r\tdata := Dictionary new at: \'key\' put: \'value\'; yourself.\r\tcollection add: data.\r\tself assert: collection size = 1.\r\tcollection commandDelete: data limit: 1 writeConcern: self aWriteConcern.\r\tself assert: collection isEmpty',			#stamp : ' 4/19/2018 11:46:05',			#package : #Mongo-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1129' ],		#self : OmReference [ '1130' ],		#time : DateAndTime [ '2018-08-16T16:44:15.09781+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoTest,				#isMetaSide : false			},			#name : #testLastErrorWithWriteConcern,			#protocol : #tests,			#sourceCode : 'testLastErrorWithWriteConcern\r\t| data |\r\tdata := Dictionary new at: \'key\' put: \'value\'; yourself.\r\tcollection add: data.\r\t\r\tself assert: (database lastError: self aWriteConcern) ok',			#stamp : ' 4/19/2018 11:46:05',			#package : #Mongo-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1130' ],		#self : OmReference [ '1131' ],		#time : DateAndTime [ '2018-08-16T16:44:15.102628+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoTest,				#isMetaSide : false			},			#name : #testInsertWithWriteConcernAndQuery,			#protocol : #tests,			#sourceCode : 'testInsertWithWriteConcernAndQuery\r\t| results |\r\tcollection \r\t\tcommandInsert: (Dictionary new at: \'key\' put: \'value\'; yourself) \r\t\twriteConcern: self aWriteConcern.\r\tresults := collection query: [ :query | ].\r\tself assert: results size equals: 1.\r\tself assert: (results first at: \'key\') = \'value\'',			#stamp : ' 4/19/2018 11:46:05',			#package : #Mongo-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1131' ],		#self : OmReference [ '1132' ],		#time : DateAndTime [ '2018-08-16T16:44:15.106127+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoTest,				#isMetaSide : false			},			#name : #aWriteConcern,			#protocol : #running,			#sourceCode : 'aWriteConcern\r\r\t^MongoWriteConcern new\r\t\tw: 1;\r\t\tj: false;\r\t\twtimeout: 500;\r\t\tyourself',			#stamp : ' 4/19/2018 11:46:05',			#package : #Mongo-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1132' ],		#self : OmReference [ '1133' ],		#time : DateAndTime [ '2018-08-16T16:44:15.108691+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoReplicationTestResources class',				#isMetaSide : true			},			#name : #'cleanUpRepository:',			#protocol : #accessing,			#sourceCode : 'cleanUpRepository: aRepository\r\r\taRepository dropDatabase',			#stamp : ' 4/19/2018 11:46:05',			#package : #Mongo-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1133' ],		#self : OmReference [ '1134' ],		#time : DateAndTime [ '2018-08-16T16:44:15.110878+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoAuthTest,				#isMetaSide : false			},			#name : #testSCRAMSHA1AuthMechanism,			#protocol : #tests,			#sourceCode : 'testSCRAMSHA1AuthMechanism\r\t"ToDo: this test requires manual configuration. \r\t=> Run in command-line:\r\tmongo test --eval \'db.createUser({ ""user"": ""pharounittest"", ""pwd"": ""test"", roles: [] });\'\r\t"\r\troot majorVersion < 3 ifTrue: [ self skip ]. "Implemented in 3.0"\r\r\troot authMechanism: (SCRAMSHA1AuthMechanism root: root).\r\r\tself assert: (root authenticateUsername: \'pharounittest\' password: \'test\' database: database).\r\tself assert: (root authenticateUsername: \'pharounittest\' password: \'invalid\' database: database) not',			#stamp : 'MartinDias 4/21/2018 21:57',			#package : #Mongo-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1134' ],		#self : OmReference [ '1135' ],		#time : DateAndTime [ '2018-08-16T16:44:15.113247+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #MongoAuthTest\r\tinstanceVariableNames: \'root database\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Tests-Core-Tests\''			},			#name : #MongoAuthTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoAuthTest,						#isMetaSide : false					},					#name : #root,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoAuthTest,						#isMetaSide : false					},					#name : #database,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoAuthTest class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoAuthTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoAuthTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Tests-Core-Tests,			#package : #Mongo-Tests-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1135' ],		#self : OmReference [ '1136' ],		#time : DateAndTime [ '2018-08-16T16:44:15.113827+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoWriteConcernTest,				#isMetaSide : false			},			#name : #testConcernForCommand,			#protocol : #'tests-as yet unclassified',			#sourceCode : 'testConcernForCommand\r\t| writeConcern formatted |\r\r\twriteConcern := MongoWriteConcern new.\r\tformatted := writeConcern concernForCommand.\r\tself assert: formatted isNil.\r\r\twriteConcern w: MongoWriteConcern majority.\r\tformatted := writeConcern concernForCommand.\r\tself assert: formatted keys equals: #(\'w\').\r\tself assert: (formatted at: \'w\') equals: \'majority\'.\r\r\twriteConcern w: 3.\r\twriteConcern j: true.\r\twriteConcern wtimeout: 0.\r\tformatted := writeConcern concernForCommand.\r\tself assert: formatted keys sorted equals: #(\'j\' \'w\').\r\tself assert: (formatted at: \'w\') equals: 3.\r\tself assert: (formatted at: \'j\') equals: true.\r\r\r\twriteConcern wtimeout: 10.\r\tformatted := writeConcern concernForCommand.\r\tself assert: formatted keys sorted equals: #(\'j\' \'w\' \'wtimeout\').\r\tself assert: (formatted at: \'w\') equals: 3.\r\tself assert: (formatted at: \'j\') equals: true.\r\tself assert: (formatted at: \'wtimeout\') equals: 10.',			#stamp : ' 4/19/2018 11:46:05',			#package : #Mongo-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1136' ],		#self : OmReference [ '1137' ],		#time : DateAndTime [ '2018-08-16T16:44:15.115782+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #MongoWriteConcernTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Tests-Core-Tests\''			},			#name : #MongoWriteConcernTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoWriteConcernTest class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoWriteConcernTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoWriteConcernTest,					#isMetaSide : false				},				#parent : @8,				#content : 'I have some very basic WriteConcern format tests',				#stamp : 'HolgerHansPeterFreyther 4/26/2017 13:48'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Tests-Core-Tests,			#package : #Mongo-Tests-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'tests-as yet unclassified'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1137' ],		#self : OmReference [ '1138' ],		#time : DateAndTime [ '2018-08-16T16:44:15.120312+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #MongoWriteConcernTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Mongo-Tests-Core-Tests\''			},			#name : #MongoWriteConcernTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoWriteConcernTest class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteMongoWriteConcernTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteMongoWriteConcernTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Tests-Core-Tests,			#package : #Mongo-Tests-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1138' ],		#self : OmReference [ '1139' ],		#time : DateAndTime [ '2018-08-16T16:44:15.12736+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoReplicationTestResources class',				#isMetaSide : true			},			#name : #'cleanUp:',			#protocol : #accessing,			#sourceCode : 'cleanUp: aRepository\r\r\taRepository dropDatabase',			#stamp : 'MartinDias 6/16/2016 22:31',			#package : #Mongo-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1139' ],		#self : OmReference [ '1140' ],		#time : DateAndTime [ '2018-08-16T16:44:15.130547+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoAuthTest,				#isMetaSide : false			},			#name : #testAuth,			#protocol : #tests,			#sourceCode : 'testAuth\r\troot authMechanism: (SCRAMSHA1AuthMechanism root: root).\r\r\tself assert: (root authenticateUsername: \'pharounittest\' password: \'test\' database: database).\r\tself assert: (root authenticateUsername: \'pharounittest\' password: \'invalid\' database: database) not',			#stamp : 'mikefilonov 6/11/2017 22:42',			#package : #Mongo-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1140' ],		#self : OmReference [ '1141' ],		#time : DateAndTime [ '2018-08-16T16:44:15.132533+02:00' ],		#trigger : OmReference [ '1127' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoTest,				#isMetaSide : false			},			#name : #testDelete,			#protocol : #tests,			#sourceCode : 'testDelete\r\t| results data |\r\tdata := (Dictionary new)\r\t\t\t\tat: \'key\' put: \'value\';\r\t\t\t\tyourself.\r\tcollection add: data.\r\tcollection delete: data.\r\tresults := collection query: [ :query | ].\r\tself assert: results isEmpty',			#stamp : 'MartinDias 4/19/2018 11:48',			#package : #Mongo-Tests-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoTest,				#isMetaSide : false			},			#name : #testDelete,			#protocol : #tests,			#sourceCode : 'testDelete\r\t| results data |\r\tdata := (Dictionary new)\r\t\t\t\tat: \'key\' put: \'value\';\r\t\t\t\tyourself.\r\tcollection add: data.\r\tcollection delete: data.\r\tresults := collection query: [ :query | ].\r\tself assert: results size = 0',			#stamp : 'NicolasPetton 11/16/2012 11:06',			#package : #Mongo-Tests-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:15.245719+02:00' ],		#prior : OmReference [ '1141' ],		#self : OmReference [ '1142' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Mongo-Tests-Queries-NorbertHartl.1499359441'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:15.365882+02:00' ],		#prior : OmReference [ '1142' ],		#self : OmReference [ '1143' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Mongo-Pharo-Tools-NorbertHartl.1499359441'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:15.481974+02:00' ],		#prior : OmReference [ '1143' ],		#self : OmReference [ '1144' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Voyage-Model-Core-EstebanLorenzano.1471364195'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1144' ],		#self : OmReference [ '1145' ],		#time : DateAndTime [ '2018-08-16T16:44:15.578652+02:00' ],		#trigger : @3	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VORepository\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'RepositoryContainer\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Base\''			},			#name : #VORepository,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VORepository class\r\tinstanceVariableNames: \'\''				},				#name : #'VORepository class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VORepository,					#isMetaSide : false				},				#parent : @7,				#content : 'I\'m an abstract Voyage repository. I define common behavior for all kind of repositories, and add some cool functionality. \r\rTo install a repository as image mode, you need to execute: \r\raRepository enableSingleton.\r\rVORepository setRepository: aRepository.\r\rYou can change container strategies (if you want something different than just a singleton), you can execute: \r\rVORepository setRepositoryContainer: aRepositoryContainer',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #VORepository,						#isMetaSide : false					},					#name : #RepositoryContainer,					#parent : @7				}			],			#category : #Voyage-Model-Core-Base,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VORepository\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'RepositoryContainer\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Base\''			},			#name : #VORepository,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VORepository class\r\tinstanceVariableNames: \'\''				},				#name : #'VORepository class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VORepository,					#isMetaSide : false				},				#parent : @23,				#content : 'I\'m an abstract Voyage repository. I define common behavior for all kind of repositories, and add some cool functionality. \r\rTo install a repository as image mode, you need to execute: \r\raRepository enableSingleton.\r\rVORepository setRepository: aRepository.\r\rYou can change container strategies (if you want something different than just a singleton), you can execute: \r\rVORepository setRepositoryContainer: aRepositoryContainer',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #VORepository,						#isMetaSide : false					},					#name : #RepositoryContainer,					#parent : @23				}			],			#category : #Voyage-Model-Core-Base,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1145' ],		#self : OmReference [ '1146' ],		#time : DateAndTime [ '2018-08-16T16:44:15.860302+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOVersionGenerator',				#traitCompositionSource : '{}',				#definitionSource : 'VOVersionGenerator subclass: #VOSeedVersionGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''			},			#name : #VOSeedVersionGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOSeedVersionGenerator class\r\tinstanceVariableNames: \'\''				},				#name : #'VOSeedVersionGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOSeedVersionGenerator,					#isMetaSide : false				},				#parent : @8,				#content : 'I generate a unique version number for an object.',				#stamp : 'HolgerHansPeterFreyther 8/30/2015 16:24'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Generator,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOVersionGenerator',				#traitCompositionSource : '{}',				#definitionSource : 'VOVersionGenerator subclass: #VOSeedVersionGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''			},			#name : #VOSeedVersionGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOSeedVersionGenerator class\r\tinstanceVariableNames: \'\''				},				#name : #'VOSeedVersionGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @22			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOSeedVersionGenerator,					#isMetaSide : false				},				#parent : @22,				#content : 'I generate a unique version number for an object.',				#stamp : 'HolgerHansPeterFreyther 8/30/2015 16:24'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Generator,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1146' ],		#self : OmReference [ '1147' ],		#time : DateAndTime [ '2018-08-16T16:44:16.004401+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOVersionGenerator',				#traitCompositionSource : '{}',				#definitionSource : 'VOVersionGenerator subclass: #VOSeedVersionGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''			},			#name : #VOSeedVersionGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOSeedVersionGenerator class\r\tinstanceVariableNames: \'\''				},				#name : #'VOSeedVersionGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOSeedVersionGenerator,					#isMetaSide : false				},				#parent : @8,				#content : 'I generate a unique version number for an object.',				#stamp : 'HolgerHansPeterFreyther 8/30/2015 16:24'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Generator,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOSeedVersionGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''			},			#name : #VOSeedVersionGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOSeedVersionGenerator class\r\tinstanceVariableNames: \'\''				},				#name : #'VOSeedVersionGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @22			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOSeedVersionGenerator,					#isMetaSide : false				},				#parent : @22,				#content : 'I generate a unique version number for an object.',				#stamp : 'HolgerHansPeterFreyther 8/30/2015 16:24'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Generator,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1147' ],		#self : OmReference [ '1148' ],		#time : DateAndTime [ '2018-08-16T16:44:16.163398+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepository,				#isMetaSide : false			},			#name : #reset,			#protocol : #accessing,			#sourceCode : 'reset\r\tself subclassResponsibility',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1148' ],		#self : OmReference [ '1149' ],		#time : DateAndTime [ '2018-08-16T16:44:16.166097+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOVersionGenerator,				#isMetaSide : false			},			#name : #newVersion,			#protocol : #versioning,			#sourceCode : 'newVersion\r\t^ self subclassResponsibility',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1149' ],		#self : OmReference [ '1150' ],		#time : DateAndTime [ '2018-08-16T16:44:16.168399+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOVersionGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''			},			#name : #VOVersionGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOVersionGenerator class\r\tinstanceVariableNames: \'\''				},				#name : #'VOVersionGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOVersionGenerator,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m a base VersionGenerator (voyage can generate versions with different strategies)',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Generator,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #versioning	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1150' ],		#self : OmReference [ '1151' ],		#time : DateAndTime [ '2018-08-16T16:44:16.169531+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOVersionGenerator class',				#isMetaSide : true			},			#name : #newDefault,			#protocol : #'instance creation',			#sourceCode : 'newDefault\r\t^ self defaultGeneratorClass new',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1151' ],		#self : OmReference [ '1152' ],		#time : DateAndTime [ '2018-08-16T16:44:16.17341+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'VOVersionGenerator class\r\tinstanceVariableNames: \'\''			},			#name : #'VOVersionGenerator class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Object',					#traitCompositionSource : '{}',					#definitionSource : 'Object subclass: #VOVersionGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''				},				#name : #VOVersionGenerator,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #VOVersionGenerator,						#isMetaSide : false					},					#parent : @13,					#content : 'I\'m a base VersionGenerator (voyage can generate versions with different strategies)',					#stamp : '<historical>'				},				#classVariables : OrderedCollection [ ],				#category : #Voyage-Model-Core-Generator,				#package : #Voyage-Model-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #'instance creation'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1152' ],		#self : OmReference [ '1153' ],		#time : DateAndTime [ '2018-08-16T16:44:16.176825+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOVersionGenerator class',				#isMetaSide : true			},			#name : #isDefault,			#protocol : #testing,			#sourceCode : 'isDefault\r\t^ false',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1153' ],		#self : OmReference [ '1154' ],		#time : DateAndTime [ '2018-08-16T16:44:16.179017+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'VOVersionGenerator class\r\tinstanceVariableNames: \'\''			},			#name : #'VOVersionGenerator class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Object',					#traitCompositionSource : '{}',					#definitionSource : 'Object subclass: #VOVersionGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''				},				#name : #VOVersionGenerator,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #VOVersionGenerator,						#isMetaSide : false					},					#parent : @13,					#content : 'I\'m a base VersionGenerator (voyage can generate versions with different strategies)',					#stamp : '<historical>'				},				#classVariables : OrderedCollection [ ],				#category : #Voyage-Model-Core-Generator,				#package : #Voyage-Model-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #testing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1154' ],		#self : OmReference [ '1155' ],		#time : DateAndTime [ '2018-08-16T16:44:16.179695+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOVersionGenerator class',				#isMetaSide : true			},			#name : #defaultGeneratorClass,			#protocol : #accessing,			#sourceCode : 'defaultGeneratorClass\r\t^ self allSubclasses \r\t\tdetect: #isDefault\r\t\tifNone: [ self allSubclasses first ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1155' ],		#self : OmReference [ '1156' ],		#time : DateAndTime [ '2018-08-16T16:44:16.181948+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'VOVersionGenerator class\r\tinstanceVariableNames: \'\''			},			#name : #'VOVersionGenerator class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Object',					#traitCompositionSource : '{}',					#definitionSource : 'Object subclass: #VOVersionGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''				},				#name : #VOVersionGenerator,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #VOVersionGenerator,						#isMetaSide : false					},					#parent : @13,					#content : 'I\'m a base VersionGenerator (voyage can generate versions with different strategies)',					#stamp : '<historical>'				},				#classVariables : OrderedCollection [ ],				#category : #Voyage-Model-Core-Generator,				#package : #Voyage-Model-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1156' ],		#self : OmReference [ '1157' ],		#time : DateAndTime [ '2018-08-16T16:44:16.182602+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOTimestampVersionGenerator,				#isMetaSide : false			},			#name : #'toByteArray:size:',			#protocol : #private,			#sourceCode : 'toByteArray: aNumber size: sizeNumber\r\t| result |\r\t\r\tresult := aNumber asByteArray.\r\tresult size < sizeNumber \r\t\tifTrue: [ result := (ByteArray new: sizeNumber - result size), result ].\r\t^ result',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1157' ],		#self : OmReference [ '1158' ],		#time : DateAndTime [ '2018-08-16T16:44:16.185039+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOTimestampVersionGenerator,				#isMetaSide : false			},			#name : #nextCount,			#protocol : #private,			#sourceCode : 'nextCount\r\t"start"\r\tcount \tifNil: [ count := 1 ].\r\tcount := count + 1.\r\t"restart on overflow"\r\tcount >= 16rFFFF\r\t\tifTrue: [ count := 1 ].\r\t^ count',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1158' ],		#self : OmReference [ '1159' ],		#time : DateAndTime [ '2018-08-16T16:44:16.187192+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOTimestampVersionGenerator,				#isMetaSide : false			},			#name : #newVersion,			#protocol : #versioning,			#sourceCode : 'newVersion\r\t"\r\ta 2-byte machine identifier,\r\ta 4-byte value representing the milliseconds,\t\r\ta 2-byte counter.\r\t"\r\tself mutex critical: [ \r\t  ^ self enforceSignedValue: (self machineId,\r\t\t\t(self toByteArray: DateAndTime now asDuration asMilliSeconds size: 4),\r\t  \t\t(self toByteArray: self nextCount size: 2))\r\t\t\tasInteger ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1159' ],		#self : OmReference [ '1160' ],		#time : DateAndTime [ '2018-08-16T16:44:16.189731+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOVersionGenerator',				#traitCompositionSource : '{}',				#definitionSource : 'VOVersionGenerator subclass: #VOTimestampVersionGenerator\r\tinstanceVariableNames: \'machineId count mutex\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''			},			#name : #VOTimestampVersionGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOTimestampVersionGenerator,						#isMetaSide : false					},					#name : #machineId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOTimestampVersionGenerator,						#isMetaSide : false					},					#name : #count,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOTimestampVersionGenerator,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOTimestampVersionGenerator class\r\tinstanceVariableNames: \'\''				},				#name : #'VOTimestampVersionGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOTimestampVersionGenerator,					#isMetaSide : false				},				#parent : @8,				#content : 'I generate versions with timestamp and counter (in case more than one version is generated in same millisecond)\rI calculate versions as this: \r\r\ta 2-byte machine identifier (random generated),\r\ta 4-byte value representing the milliseconds,\t\r\ta 2-byte counter.\r',				#stamp : 'EstebanLorenzano 2/21/2017 10:46'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Generator,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #versioning	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1160' ],		#self : OmReference [ '1161' ],		#time : DateAndTime [ '2018-08-16T16:44:16.190196+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOTimestampVersionGenerator,				#isMetaSide : false			},			#name : #mutex,			#protocol : #private,			#sourceCode : 'mutex \r\t^ mutex ifNil: [ mutex := Mutex new ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1161' ],		#self : OmReference [ '1162' ],		#time : DateAndTime [ '2018-08-16T16:44:16.192306+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOTimestampVersionGenerator,				#isMetaSide : false			},			#name : #machineId,			#protocol : #private,			#sourceCode : 'machineId\r\t^ machineId ifNil: [ machineId := self toByteArray: self generateMachineId size: 2 ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1162' ],		#self : OmReference [ '1163' ],		#time : DateAndTime [ '2018-08-16T16:44:16.194327+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOTimestampVersionGenerator,				#isMetaSide : false			},			#name : #generateMachineId,			#protocol : #private,			#sourceCode : 'generateMachineId\r\t^ 16rFFFF atRandom',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1163' ],		#self : OmReference [ '1164' ],		#time : DateAndTime [ '2018-08-16T16:44:16.198587+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOTimestampVersionGenerator,				#isMetaSide : false			},			#name : #'enforceSignedValue:',			#protocol : #private,			#sourceCode : 'enforceSignedValue: unsignedValue\r\t"16r7FFFFFFFFFFFFFFF = (2 raisedTo: 63) - 1\r\t 16r10000000000000000 = 2 raisedTo: 64"\r\t^ unsignedValue > 16r7FFFFFFFFFFFFFFF\r\t\tifTrue: [ unsignedValue - 16r10000000000000000 ]\r\t\tifFalse: [ unsignedValue ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1164' ],		#self : OmReference [ '1165' ],		#time : DateAndTime [ '2018-08-16T16:44:16.201025+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOVersionGenerator',				#traitCompositionSource : '{}',				#definitionSource : 'VOVersionGenerator subclass: #VOTimestampVersionGenerator\r\tinstanceVariableNames: \'machineId count mutex\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''			},			#name : #VOTimestampVersionGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOTimestampVersionGenerator,						#isMetaSide : false					},					#name : #machineId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOTimestampVersionGenerator,						#isMetaSide : false					},					#name : #count,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOTimestampVersionGenerator,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOTimestampVersionGenerator class\r\tinstanceVariableNames: \'\''				},				#name : #'VOTimestampVersionGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOTimestampVersionGenerator,					#isMetaSide : false				},				#parent : @8,				#content : 'I generate versions with timestamp and counter (in case more than one version is generated in same millisecond)\rI calculate versions as this: \r\r\ta 2-byte machine identifier (random generated),\r\ta 4-byte value representing the milliseconds,\t\r\ta 2-byte counter.\r',				#stamp : 'EstebanLorenzano 2/21/2017 10:46'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Generator,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #private	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1165' ],		#self : OmReference [ '1166' ],		#time : DateAndTime [ '2018-08-16T16:44:16.201715+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOTimestampVersionGenerator class',				#isMetaSide : true			},			#name : #isDefault,			#protocol : #testing,			#sourceCode : 'isDefault\r\t^ true',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1166' ],		#self : OmReference [ '1167' ],		#time : DateAndTime [ '2018-08-16T16:44:16.204151+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'VOTimestampVersionGenerator class\r\tinstanceVariableNames: \'\''			},			#name : #'VOTimestampVersionGenerator class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'VOVersionGenerator',					#traitCompositionSource : '{}',					#definitionSource : 'VOVersionGenerator subclass: #VOTimestampVersionGenerator\r\tinstanceVariableNames: \'machineId count mutex\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''				},				#name : #VOTimestampVersionGenerator,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #VOTimestampVersionGenerator,							#isMetaSide : false						},						#name : #machineId,						#parent : @13					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #VOTimestampVersionGenerator,							#isMetaSide : false						},						#name : #count,						#parent : @13					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #VOTimestampVersionGenerator,							#isMetaSide : false						},						#name : #mutex,						#parent : @13					}				],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #VOTimestampVersionGenerator,						#isMetaSide : false					},					#parent : @13,					#content : 'I generate versions with timestamp and counter (in case more than one version is generated in same millisecond)\rI calculate versions as this: \r\r\ta 2-byte machine identifier (random generated),\r\ta 4-byte value representing the milliseconds,\t\r\ta 2-byte counter.\r',					#stamp : 'EstebanLorenzano 2/21/2017 10:46'				},				#classVariables : OrderedCollection [ ],				#category : #Voyage-Model-Core-Generator,				#package : #Voyage-Model-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #testing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1167' ],		#self : OmReference [ '1168' ],		#time : DateAndTime [ '2018-08-16T16:44:16.208455+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOVersionGenerator',				#traitCompositionSource : '{}',				#definitionSource : 'VOVersionGenerator subclass: #VOTimestampVersionGenerator\r\tinstanceVariableNames: \'machineId count mutex\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Model-Core-Generator\''			},			#name : #VOTimestampVersionGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOTimestampVersionGenerator,						#isMetaSide : false					},					#name : #machineId,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOTimestampVersionGenerator,						#isMetaSide : false					},					#name : #count,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOTimestampVersionGenerator,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOTimestampVersionGenerator class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOTimestampVersionGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOTimestampVersionGenerator,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Generator,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1168' ],		#self : OmReference [ '1169' ],		#time : DateAndTime [ '2018-08-16T16:44:16.213247+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOVersionGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Model-Core-Generator\''			},			#name : #VOVersionGenerator,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOVersionGenerator class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOVersionGenerator class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOVersionGenerator,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Generator,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1169' ],		#self : OmReference [ '1170' ],		#time : DateAndTime [ '2018-08-16T16:44:16.21423+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VODynamicContainer,				#isMetaSide : false			},			#name : #'repository:',			#protocol : #accessing,			#sourceCode : 'repository: aRepository\r\tself error: \'You are using dinamic container mode. \rYou need to use VOCurrentRepository instead setting repository directly.\'',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1170' ],		#self : OmReference [ '1171' ],		#time : DateAndTime [ '2018-08-16T16:44:16.216144+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VODynamicContainer,				#isMetaSide : false			},			#name : #repository,			#protocol : #accessing,			#sourceCode : 'repository \r\t^ VOCurrentRepository value',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1171' ],		#self : OmReference [ '1172' ],		#time : DateAndTime [ '2018-08-16T16:44:16.217912+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VORepositoryContainer',				#traitCompositionSource : '{}',				#definitionSource : 'VORepositoryContainer subclass: #VODynamicContainer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Base\''			},			#name : #VODynamicContainer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VODynamicContainer class\r\tinstanceVariableNames: \'\''				},				#name : #'VODynamicContainer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VODynamicContainer,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a dynamic container. \rI answer repositories that can be accessed when using a the dynamic variable VOCurrentRepository. \rWARNING: For me to work, you need to configure me as the repositoryContainer for VORepository:\r\rVORepository repositoryContainer: VODynamicContainer new.\r\rExample: \r------------\rusing a seaside filter, you can do: \r\rhandleFiltered: aRequestContext\r    VOCurrentRepository \r        value: self obtainSessionRepository\r        during: [  self next handleFiltered:  aRequestContext].',				#stamp : 'EstebanLorenzano 2/15/2017 12:18'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Base,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1172' ],		#self : OmReference [ '1173' ],		#time : DateAndTime [ '2018-08-16T16:44:16.221475+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VORepositoryContainer',				#traitCompositionSource : '{}',				#definitionSource : 'VORepositoryContainer subclass: #VODynamicContainer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Model-Core-Base\''			},			#name : #VODynamicContainer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VODynamicContainer class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVODynamicContainer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVODynamicContainer,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Base,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1173' ],		#self : OmReference [ '1174' ],		#time : DateAndTime [ '2018-08-16T16:44:16.222543+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOSeedVersionGenerator class',				#isMetaSide : true			},			#name : #isDefault,			#protocol : #testing,			#sourceCode : 'isDefault\r\t"In versions >= 5, we prefer VOMongoishVersionGenerator"\r\t^ SystemVersion current major < 5',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1174' ],		#self : OmReference [ '1175' ],		#time : DateAndTime [ '2018-08-16T16:44:16.224649+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'VOSeedVersionGenerator class\r\tinstanceVariableNames: \'\''			},			#name : #'VOSeedVersionGenerator class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Object',					#traitCompositionSource : '{}',					#definitionSource : 'Object subclass: #VOSeedVersionGenerator\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Core-Generator\''				},				#name : #VOSeedVersionGenerator,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #VOSeedVersionGenerator,						#isMetaSide : false					},					#parent : @13,					#content : 'I generate a unique version number for an object.',					#stamp : 'HolgerHansPeterFreyther 8/30/2015 16:24'				},				#classVariables : OrderedCollection [ ],				#category : #Voyage-Model-Core-Generator,				#package : #Voyage-Model-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #testing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1175' ],		#self : OmReference [ '1176' ],		#time : DateAndTime [ '2018-08-16T16:44:16.231566+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'DynamicVariable',				#traitCompositionSource : '{}',				#definitionSource : 'DynamicVariable subclass: #VOCurrentRepository\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Model-Core-Base\''			},			#name : #VOCurrentRepository,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOCurrentRepository class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOCurrentRepository class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOCurrentRepository,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Core-Base,			#package : #Voyage-Model-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1176' ],		#self : OmReference [ '1177' ],		#time : DateAndTime [ '2018-08-16T16:44:16.23923+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #persistentClass,			#protocol : #'*voyage-model-core-extensions',			#sourceCode : 'persistentClass\r\tself == Object ifTrue: [ ^ nil ]. \r\t(self class selectors includes: #isVoyageRoot)\r\t\tifTrue: [ ^self ] \r\t\tifFalse: [ ^self superclass persistentClass ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #persistentClass,			#protocol : #'*voyage-model-core-extensions',			#sourceCode : 'persistentClass\r\tself == Object ifTrue: [ ^false ]. \r\t(self class selectors includes: #isVoyageRoot)\r\t\tifTrue: [ ^self ] \r\t\tifFalse: [ ^self superclass persistentClass ]',			#stamp : 'EstebanLorenzano 5/29/2012 15:41',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1177' ],		#self : OmReference [ '1178' ],		#time : DateAndTime [ '2018-08-16T16:44:16.240871+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #voyageCollectionName,			#protocol : #'*voyage-model-core-extensions',			#sourceCode : 'voyageCollectionName\r\t"This method can be overridden with a more meaningful collection name"\r\tself isVoyageRoot ifFalse: [ ^ self name asString ].\r\t^ ((self persistentClass name first: 3) allSatisfy: #isUppercase)\r\t\tifTrue: [ (self persistentClass name allButFirst: 2) ] \r\t\tifFalse: [ self persistentClass name ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #voyageCollectionName,			#protocol : #'*voyage-model-core-extensions',			#sourceCode : 'voyageCollectionName\r\t"This method can be overridden with a more meaningful collection name" \r\t^ ((self persistentClass name first: 3) allSatisfy: #isUppercase)\r\t\tifTrue: [ (self persistentClass name allButFirst: 2) ] \r\t\tifFalse: [ self persistentClass name ]',			#stamp : 'EstebanLorenzano 8/20/2014 17:27',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1178' ],		#self : OmReference [ '1179' ],		#time : DateAndTime [ '2018-08-16T16:44:16.24188+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VORepository class',				#isMetaSide : true			},			#name : #defaultAccessStrategyClass,			#protocol : #defaults,			#sourceCode : 'defaultAccessStrategyClass\r\t^ VOSingletonContainer',			#stamp : 'EL 7/7/2008 18:44',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1179' ],		#self : OmReference [ '1180' ],		#time : DateAndTime [ '2018-08-16T16:44:16.243176+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VORepository class',				#isMetaSide : true			},			#name : #repositoryContainer,			#protocol : #accessing,			#sourceCode : 'repositoryContainer\r\t^RepositoryContainer\r\t\tifNil: [ RepositoryContainer := self defaultRepositoryContainerClass new ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VORepository class',				#isMetaSide : true			},			#name : #repositoryContainer,			#protocol : #accessing,			#sourceCode : 'repositoryContainer\r\t^RepositoryContainer\r\t\tifNil: [ RepositoryContainer := self repositoryContainerClass new ]',			#stamp : 'EL 7/7/2008 18:41',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1180' ],		#self : OmReference [ '1181' ],		#time : DateAndTime [ '2018-08-16T16:44:16.244533+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VORepository class',				#isMetaSide : true			},			#name : #repositoryContainerClass,			#protocol : #accessing,			#sourceCode : 'repositoryContainerClass\r\t^RepositoryContainerClass \r\t\tifNil: [ RepositoryContainerClass := self defaultRepositoryContainerClass ]',			#stamp : 'EL 7/7/2008 18:39',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1181' ],		#self : OmReference [ '1182' ],		#time : DateAndTime [ '2018-08-16T16:44:16.246167+02:00' ],		#trigger : OmReference [ '1144' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VORepository class',				#isMetaSide : true			},			#name : #'using:do:',			#protocol : #accessing,			#sourceCode : 'using: aRepository do: aBlock\r\t| oldRepository |\r\t\r\toldRepository := self current.\r\tself setRepository: aRepository.\r\taBlock ensure: [ self setRepository: oldRepository ]',			#stamp : 'EstebanLorenzano 6/13/2012 18:14',			#package : #Voyage-Model-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:16.362489+02:00' ],		#prior : OmReference [ '1182' ],		#self : OmReference [ '1183' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Voyage-Model-Tests-EstebanLorenzano.1471364195'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1183' ],		#self : OmReference [ '1184' ],		#time : DateAndTime [ '2018-08-16T16:44:16.473443+02:00' ],		#trigger : @3	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOTimestampVersionGeneratorTest,				#isMetaSide : false			},			#name : #testVersionIsUnique,			#protocol : #tests,			#sourceCode : 'testVersionIsUnique\r\t| set |\r\t\r\tset := Set new.\r\t1 to: 50000 do: [ :i | set add: versionGenerator newVersion ].\r\tself assert: set size equals: 50000',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1184' ],		#self : OmReference [ '1185' ],		#time : DateAndTime [ '2018-08-16T16:44:16.576474+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOTimestampVersionGeneratorTest,				#isMetaSide : false			},			#name : #testVersionIsInteger,			#protocol : #tests,			#sourceCode : 'testVersionIsInteger\r\tself assert: versionGenerator newVersion isInteger',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1185' ],		#self : OmReference [ '1186' ],		#time : DateAndTime [ '2018-08-16T16:44:16.579382+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #VOTimestampVersionGeneratorTest\r\tinstanceVariableNames: \'versionGenerator\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Tests-Base\''			},			#name : #VOTimestampVersionGeneratorTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOTimestampVersionGeneratorTest,						#isMetaSide : false					},					#name : #versionGenerator,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOTimestampVersionGeneratorTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOTimestampVersionGeneratorTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOTimestampVersionGeneratorTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Tests-Base,			#package : #Voyage-Model-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1186' ],		#self : OmReference [ '1187' ],		#time : DateAndTime [ '2018-08-16T16:44:16.580295+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOTimestampVersionGeneratorTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tversionGenerator := VOTimestampVersionGenerator new.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1187' ],		#self : OmReference [ '1188' ],		#time : DateAndTime [ '2018-08-16T16:44:16.583951+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #VOTimestampVersionGeneratorTest\r\tinstanceVariableNames: \'versionGenerator\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Tests-Base\''			},			#name : #VOTimestampVersionGeneratorTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOTimestampVersionGeneratorTest,						#isMetaSide : false					},					#name : #versionGenerator,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOTimestampVersionGeneratorTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOTimestampVersionGeneratorTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOTimestampVersionGeneratorTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Tests-Base,			#package : #Voyage-Model-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #running	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1188' ],		#self : OmReference [ '1189' ],		#time : DateAndTime [ '2018-08-16T16:44:16.588233+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #VOTimestampVersionGeneratorTest\r\tinstanceVariableNames: \'versionGenerator\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Model-Tests-Base\''			},			#name : #VOTimestampVersionGeneratorTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOTimestampVersionGeneratorTest,						#isMetaSide : false					},					#name : #versionGenerator,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOTimestampVersionGeneratorTest class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOTimestampVersionGeneratorTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOTimestampVersionGeneratorTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Tests-Base,			#package : #Voyage-Model-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1189' ],		#self : OmReference [ '1190' ],		#time : DateAndTime [ '2018-08-16T16:44:16.591516+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #waitForWriteOperation,			#protocol : #running,			#sourceCode : 'waitForWriteOperation\r\t"Write operations can require some time to be applied by backend, and this template method can be overriden by subclasses to do something."\r\r\t"Do nothing by default"',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1190' ],		#self : OmReference [ '1191' ],		#time : DateAndTime [ '2018-08-16T16:44:16.593822+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #VORepositoryTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Model-Tests-Base\''			},			#name : #VORepositoryTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VORepositoryTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VORepositoryTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VORepositoryTest,					#isMetaSide : false				},				#parent : @8,				#content : 'This is an abstract  test for repositories.\rIn theory, all backends should implement this tests as a "minimum" .\r\rThe tests provide a high level view of Voyage and how to use it.',				#stamp : 'EstebanLorenzano 8/3/2016 17:43'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Model-Tests-Base,			#package : #Voyage-Model-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #running	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1191' ],		#self : OmReference [ '1192' ],		#time : DateAndTime [ '2018-08-16T16:44:16.599368+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #expectedFailures,			#protocol : #testing,			#sourceCode : 'expectedFailures\r\tself flag: #todo.\r\r\t^ super expectedFailures \r\t\tcopyWith: #testSelectAllJustAfterRemove "Postpone fix"',			#stamp : 'MartinDias 3/4/2016 00:17',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1192' ],		#self : OmReference [ '1193' ],		#time : DateAndTime [ '2018-08-16T16:44:16.601213+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testCount,			#protocol : #tests,			#sourceCode : 'testCount\r\t| pilot |\r\tpilot := VOTestPilot new name: \'Esteban\'.\r\tself assert: (self repository count: VOTestPilot) equals: 0.\r\r\tself repository save: pilot.\r\tself waitForWriteOperation.\r\r\tself assert: (self repository count: VOTestPilot) equals: 1\r\t',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testCount,			#protocol : #tests,			#sourceCode : 'testCount\r\t| pilot |\r\tpilot := VOTestPilot new name: \'Esteban\'.\r\tself assert: (self repository count: VOTestPilot) equals: 0.\r\tself repository save: pilot.\r\tself assert: (self repository count: VOTestPilot) equals: 1\r\t',			#stamp : 'FrancoisStephany 9/6/2012 15:30',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1193' ],		#self : OmReference [ '1194' ],		#time : DateAndTime [ '2018-08-16T16:44:16.602735+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testIsLazy,			#protocol : #tests,			#sourceCode : 'testIsLazy\r\t| pilot retrievedPilot |\r\tpilot := VOTestPilot new\r\t\tname: \'Esteban\';\r\t\tpet: (VOTestDog new name: \'Doggie\');\r\t\tlazyPet: (VOTestDog new name: \'LazyDoggie\').\r\tself repository save: pilot.\r\tself repository flushCache.\r\tself waitForWriteOperation.\r\r\tretrievedPilot := self repository selectOne: VOTestPilot where: [ :each | (each at: \'name\') = \'Esteban\' ].\r\tself assert: retrievedPilot lazyPet name equals: \'LazyDoggie\'.\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testIsLazy,			#protocol : #tests,			#sourceCode : 'testIsLazy\r\t| pilot retrievedPilot |\r\tpilot := VOTestPilot new\r\t\tname: \'Esteban\';\r\t\tpet: (VOTestDog new name: \'Doggie\');\r\t\tlazyPet: (VOTestDog new name: \'LazyDoggie\').\r\tself repository save: pilot.\r\tself repository flushCache.\r\t\r\tretrievedPilot := self repository selectOne: VOTestPilot where: [ :each | (each at: \'name\') = \'Esteban\' ].\r\t"self assert: (retrievedPilot instVarNamed: \'lazyPet\') class equals: VOLazyProxy."\r\tself assert: retrievedPilot lazyPet name equals: \'LazyDoggie\'.',			#stamp : 'EstebanLorenzano 6/14/2016 13:05',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1194' ],		#self : OmReference [ '1195' ],		#time : DateAndTime [ '2018-08-16T16:44:16.604404+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testIsLazyOnToManyRelations,			#protocol : #tests,			#sourceCode : 'testIsLazyOnToManyRelations\r\t| pilot retrievedPilot |\r\tpilot := VOTestPilot new\r\t\tname: \'Esteban\';\r\t\tpastPets: (Array with: (VOTestDog new name: \'Doggie\') with: (VOTestDog new name: \'Kittie\')).\r\tself repository save: pilot.\r\tself repository flushCache.\r\t\r\tretrievedPilot := self repository \r\t\tselectOne: VOTestPilot \r\t\twhere: [ :each | (each at: \'name\') = \'Esteban\' ].\r\tself assert: retrievedPilot pastPets size equals: 2.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testIsLazyOnToManyRelations,			#protocol : #tests,			#sourceCode : 'testIsLazyOnToManyRelations\r\t| pilot pilots retrievedPilot |\r\tpilot := VOTestPilot new\r\t\tname: \'Esteban\';\r\t\tpastPets: (Array with: (VOTestDog new name: \'Doggie\') with: (VOTestDog new name: \'Kittie\')).\r\tself repository save: pilot.\r\tself repository flushCache.\r\t\r\tretrievedPilot := self repository \r\t\tselectOne: VOTestPilot \r\t\twhere: [ :each | (each at: \'name\') = \'Esteban\' ].\r\tself assert: retrievedPilot pastPets size equals: 2.',			#stamp : 'EstebanLorenzano 6/14/2016 15:02',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1195' ],		#self : OmReference [ '1196' ],		#time : DateAndTime [ '2018-08-16T16:44:16.606059+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testIsNew,			#protocol : #tests,			#sourceCode : 'testIsNew\r\t| pilot |\r\tpilot := VOTestPilot new\r\t\tname: \'Esteban\';\r\t\tpet: (VOTestDog new name: \'Doggie\').\r \tself assert: (self repository isNew: pilot).\r\tself assert: (self repository isNew: pilot pet).\r\t\r\tself repository save: pilot.\r\tself waitForWriteOperation.\r\r\tself deny: (self repository isNew: pilot).\r\tself deny: (self repository isNew: pilot pet).',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testIsNew,			#protocol : #tests,			#sourceCode : 'testIsNew\r\t| pilot |\r\tpilot := VOTestPilot new\r\t\tname: \'Esteban\';\r\t\tpet: (VOTestDog new name: \'Doggie\').\r \tself assert: (self repository isNew: pilot).\r\tself assert: (self repository isNew: pilot pet).\r\t\r\tself repository save: pilot.\r\t\r\tself deny: (self repository isNew: pilot).\r\tself deny: (self repository isNew: pilot pet).',			#stamp : 'FrancoisStephany 11/14/2012 20:26',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1196' ],		#self : OmReference [ '1197' ],		#time : DateAndTime [ '2018-08-16T16:44:16.608987+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSave,			#protocol : #tests,			#sourceCode : 'testSave\r\t| pilot pilots |\r\r\tpilot := VOTestPilot new\r\t\tname: \'Esteban\';\r\t\tpet: (VOTestDog new name: \'Doggie\').\r\tself repository save: pilot.\r\tself waitForWriteOperation.\r\r\tpilots := self repository selectAll: VOTestPilot.\r\tself assert: pilots size equals: 1.\r\tself assert: pilots anyOne name equals: \'Esteban\'.\r\t',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSave,			#protocol : #tests,			#sourceCode : 'testSave\r\t| pilot pilots |\r\r\tpilot := VOTestPilot new\r\t\tname: \'Esteban\';\r\t\tpet: (VOTestDog new name: \'Doggie\').\r\tself repository save: pilot.\r\t\r\tpilots := self repository selectAll: VOTestPilot.\r\tself assert: pilots size equals: 1.\r\tself assert: pilots first name equals: \'Esteban\'.\r\t',			#stamp : 'EstebanLorenzano 6/13/2016 18:27',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1197' ],		#self : OmReference [ '1198' ],		#time : DateAndTime [ '2018-08-16T16:44:16.61032+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSaveCircular,			#protocol : #tests,			#sourceCode : 'testSaveCircular\r\t| owner |\r\t\r\towner := VOTestOwner new\r\t\tname: \'test owner\';\r\t\taddPet: (VOTestDog new \r\t\t\tname: \'Rocky\';\r\t\t\tyourself);\r\t\taddPet: (VOTestCat new \r\t\t\tname: \'Miau\';\r\t\t\tyourself);\r\t\tyourself.\r\r\tself \r\t\tassert: (self repository count: VOTestOwner)\r\t\tequals: 0.\r\r\tself repository save: owner.\r\tself waitForWriteOperation.\r\t\r\tself \r\t\tassert: (self repository count: VOTestOwner)\r\t\tequals: 1.\r\tself \r\t\tassert: (self repository selectOne: VOTestOwner where: [ :each | (each at: \'name\') = \'test owner\' ])\r\t\tequals: owner.\r\r\tself \r\t\tassert: (self repository count: VOTestPet)\r\t\tequals: 2.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSaveCircular,			#protocol : #tests,			#sourceCode : 'testSaveCircular\r\t| owner |\r\t\r\towner := VOTestOwner new\r\t\tname: \'test owner\';\r\t\taddPet: (VOTestDog new \r\t\t\tname: \'Rocky\';\r\t\t\tyourself);\r\t\taddPet: (VOTestCat new \r\t\t\tname: \'Miau\';\r\t\t\tyourself);\r\t\tyourself.\r\t\t\r\tself repository save: owner.\r\t\r\tself \r\t\tassert: (self repository selectOne: VOTestOwner where: [ :each | (each at: \'name\') = \'test owner\' ])\r\t\tequals: owner.\r\tself \r\t\tassert: (self repository selectAll: VOTestPet) size\r\t\tequals: 2.\r\t\t\r\t\t',			#stamp : 'EstebanLorenzano 6/14/2016 13:41',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1198' ],		#self : OmReference [ '1199' ],		#time : DateAndTime [ '2018-08-16T16:44:16.611546+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSaveWithClasses,			#protocol : #tests,			#sourceCode : 'testSaveWithClasses\r\tself repository save: (VOTestPilot new currency: VOTestEuro).\r\tself waitForWriteOperation.\r\t\r\tself \r\t\tassert: (self repository selectAll: VOTestPilot) anyOne currency \r\t\tequals: VOTestEuro.\r\t',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSaveWithClasses,			#protocol : #tests,			#sourceCode : 'testSaveWithClasses\r\tself repository save: (VOTestPilot new currency: VOTestEuro).\r\tself assert: (self repository selectAll: VOTestPilot) first currency equals: VOTestEuro.\r\t',			#stamp : 'FrancoisStephany 8/8/2012 15:09',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1199' ],		#self : OmReference [ '1200' ],		#time : DateAndTime [ '2018-08-16T16:44:16.612713+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSaveWithSubclasses,			#protocol : #tests,			#sourceCode : 'testSaveWithSubclasses\r\t" look at VOTestPet class >> descriptionContainer."\r\tself repository save: (VOTestDog new name: \'Rantanplan\').\r\tself repository save: (VOTestDog new name: \'Medor\').\r\tself repository save: (VOTestCat new name: \'Pizza\').\r\tself waitForWriteOperation.\r\t\r \tself assert: (self repository selectAll: VOTestPet) size equals: 3.\r\tself assert: (self repository selectAll: VOTestDog) size equals: 2.\r\tself assert: (self repository selectAll: VOTestCat) size equals: 1',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSaveWithSubclasses,			#protocol : #tests,			#sourceCode : 'testSaveWithSubclasses\r\t" look at VOTestPet class >> descriptionContainer."\r\tself repository save: (VOTestDog new name: \'Rantanplan\').\r\tself repository save: (VOTestDog new name: \'Medor\').\r\tself repository save: (VOTestCat new name: \'Pizza\').\r\t\r \tself assert: (self repository selectAll: VOTestPet) size equals: 3.\r\tself assert: (self repository selectAll: VOTestDog) size equals: 2.\r\tself assert: (self repository selectAll: VOTestCat) size equals: 1',			#stamp : 'FrancoisStephany 8/8/2012 15:08',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1200' ],		#self : OmReference [ '1201' ],		#time : DateAndTime [ '2018-08-16T16:44:16.613953+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSaveWithSubclassesAndRelations,			#protocol : #tests,			#sourceCode : 'testSaveWithSubclassesAndRelations\r\t| mozart |\r\tmozart := VOTestPilot new\r\t\tname: \'Mozart\';\r\t\tpet: (VOTestDog new name: \'Medor\').\r\tself repository save: mozart.\r\tself waitForWriteOperation.\r\r\t"Make sure we got a dog back"\r\tself assert: (self repository selectAll: VOTestPilot) anyOne pet bark equals: \'Wouf!\'.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSaveWithSubclassesAndRelations,			#protocol : #tests,			#sourceCode : 'testSaveWithSubclassesAndRelations\r\t| mozart |\r\tmozart := VOTestPilot new\r\t\tname: \'Mozart\';\r\t\tpet: (VOTestDog new name: \'Medor\').\r\t\r\tself repository save: mozart.\r\r\t"Make sure we got a dog back"\r\tself assert: (self repository selectAll: VOTestPilot) first pet bark equals: \'Wouf!\'.',			#stamp : 'FrancoisStephany 8/8/2012 15:09',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1201' ],		#self : OmReference [ '1202' ],		#time : DateAndTime [ '2018-08-16T16:44:16.615107+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSelectAllJustAfterRemove,			#protocol : #tests,			#sourceCode : 'testSelectAllJustAfterRemove\r\t"This test reproduces a bug"\r\r\t1 to: 30 do: [ :index |\r\t\t| pilot pilots |\r\t\r\t\tpilot := VOTestPilot new\r\t\t\tname: \'Esteban\', index asString;\r\t\t\tyourself.\r\r\t\tself repository save: pilot.\r\r\t\tpilots := self repository selectAll: VOTestPilot.\r\t\tself deny: pilots isEmpty.\r\r\t\tself repository remove: pilot.\r\t\r\t\tpilots := self repository selectAll: VOTestPilot.\r\t\tself assert: pilots isEmpty.\r\t]',			#stamp : 'MartinDias 3/3/2016 00:22',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1202' ],		#self : OmReference [ '1203' ],		#time : DateAndTime [ '2018-08-16T16:44:16.616256+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSelectManyWithAllKeyword,			#protocol : #tests,			#sourceCode : 'testSelectManyWithAllKeyword\r\t| pilot pilot2 pilot3 mongoQuery retrievedPilots |\r\tpilot := VOTestPilot new.\r\tpilot keywords add: \'Smalltalk\'.\r\tpilot keywords add: \'Argentina\'.\r\t\r\tpilot2 := VOTestPilot new.\r\tpilot2 keywords add: \'Smalltalk\'.\r\t\r\tpilot3 := VOTestPilot new.\r\r\tself repository save: pilot.\r\tself repository save: pilot2.\r\tself repository save: pilot3.\r\tself repository flushCache.\r\tself waitForWriteOperation.\r\t\r\tmongoQuery :=  Dictionary new\r\t\tat: \'keywords\' put: (Dictionary new \r\t\t\tat: \'$all\' put: #(\'Smalltalk\' \'Argentina\');\r\t\t\tyourself );\r\t\tyourself.\r\t\r\t"Because the Pets are kept in their own collection and not embedded."\r\tretrievedPilots := self repository selectMany: VOTestPilot where: mongoQuery.\r\tself assert: retrievedPilots size equals: 1.\r\t\r\t"We have to retrieve the pastPets of the Pilot first and then "',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSelectManyWithAllKeyword,			#protocol : #tests,			#sourceCode : 'testSelectManyWithAllKeyword\r\t| pilot pilot2 pilot3 mongoQuery retrievedPilots |\r\tpilot := VOTestPilot new.\r\tpilot keywords add: \'Smalltalk\'.\r\tpilot keywords add: \'Argentina\'.\r\t\r\tpilot2 := VOTestPilot new.\r\tpilot2 keywords add: \'Smalltalk\'.\r\t\r\tpilot3 := VOTestPilot new.\r\r\tself repository save: pilot.\r\tself repository save: pilot2.\r\tself repository save: pilot3.\r\tself repository flushCache.\r\t\r\tmongoQuery :=  Dictionary new\r\t\tat: \'keywords\' put: (Dictionary new \r\t\t\tat: \'$all\' put: #(\'Smalltalk\' \'Argentina\');\r\t\t\tyourself );\r\t\tyourself.\r\t\r\t"Because the Pets are kept in their own collection and not embedded."\r\tretrievedPilots := self repository selectMany: VOTestPilot where: mongoQuery.\r\tself assert: retrievedPilots size equals: 1.\r\t\r\t"We have to retrieve the pastPets of the Pilot first and then "',			#stamp : 'EstebanLorenzano 6/14/2016 15:08',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1203' ],		#self : OmReference [ '1204' ],		#time : DateAndTime [ '2018-08-16T16:44:16.617521+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSelectManyWithLimitAndOffset,			#protocol : #tests,			#sourceCode : 'testSelectManyWithLimitAndOffset\r\t| firstBatch secondBatch thirdBatch |\r\tself repository\r\t\tsave: (VOTestPilot new name: \'Esteban\');\r\t\tsave: (VOTestPilot new name: \'Mariano\');\r\t\tsave: (VOTestPilot new name: \'Stef\');\r\t\tsave: (VOTestPilot new name: \'Camillo\');\r\t\tsave: (VOTestPilot new name: \'Igor\');\r\t\tsave: (VOTestPilot new name: \'Markus\');\r\t\tyourself.\r\tself repository flushCache.\r\tself waitForWriteOperation.\r\t\r\tfirstBatch := self repository selectMany: VOTestPilot where: Dictionary new limit: 2. \r\tsecondBatch := self repository selectMany: VOTestPilot where: Dictionary new limit: 2 offset: 2.\r\tthirdBatch := self repository selectMany: VOTestPilot where: Dictionary new limit: 2 offset: 1.\r\tself assert: firstBatch size equals: 2.\r\tself assert: secondBatch size equals: 2.\r\tself assert: (firstBatch intersection: secondBatch) isEmpty.\r\tself assert: (firstBatch intersection: thirdBatch) size equals: 1.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSelectManyWithLimitAndOffset,			#protocol : #tests,			#sourceCode : 'testSelectManyWithLimitAndOffset\r\t| firstBatch secondBatch thirdBatch |\r\tself repository\r\t\tsave: (VOTestPilot new name: \'Esteban\');\r\t\tsave: (VOTestPilot new name: \'Mariano\');\r\t\tsave: (VOTestPilot new name: \'Stef\');\r\t\tsave: (VOTestPilot new name: \'Camillo\');\r\t\tsave: (VOTestPilot new name: \'Igor\');\r\t\tsave: (VOTestPilot new name: \'Markus\');\r\t\tyourself.\r\tself repository flushCache.\r\t\r\tfirstBatch := self repository selectMany: VOTestPilot where: Dictionary new limit: 2. \r\tsecondBatch := self repository selectMany: VOTestPilot where: Dictionary new limit: 2 offset: 2.\r\tthirdBatch := self repository selectMany: VOTestPilot where: Dictionary new limit: 2 offset: 1.\r\tself assert: firstBatch size equals: 2.\r\tself assert: secondBatch size equals: 2.\r\tself assert: (firstBatch intersection: secondBatch) isEmpty.\r\tself assert: (firstBatch intersection: thirdBatch) size equals: 1.',			#stamp : 'EstebanLorenzano 6/14/2016 17:01',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1204' ],		#self : OmReference [ '1205' ],		#time : DateAndTime [ '2018-08-16T16:44:16.620626+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSelectOneWithSubclass,			#protocol : #tests,			#sourceCode : 'testSelectOneWithSubclass\r\t| retrieved |\r\tself repository save: (VOTestCat new name: \'Pizza\').\r\tself waitForWriteOperation.\r\r\tretrieved := self repository selectOne: VOTestPet where: [ :each | (each at: \'name\') = \'Pizza\' ].\r\tself deny: retrieved isNil.\r\tself assert: retrieved class equals: VOTestCat. "object is still in cache with the good class."\r\t\r\t"object should not be a Pet but a Cat. Even if we retrieved if from the Pet class"\r\tself repository flushCache.\r\tretrieved := self repository selectOne: VOTestPet where: [ :each | (each at: \'name\') = \'Pizza\' ].\r\tself assert: retrieved class equals: VOTestCat. ',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testSelectOneWithSubclass,			#protocol : #tests,			#sourceCode : 'testSelectOneWithSubclass\r\t| retrieved |\r\tself repository save: (VOTestCat new name: \'Pizza\').\r\tretrieved := self repository selectOne: VOTestPet where: [ :each | (each at: \'name\') = \'Pizza\' ].\r\tself deny: retrieved isNil.\r\tself assert: retrieved class equals: VOTestCat. "object is still in cache with the good class."\r\t\r\t"object should not be a Pet but a Cat. Even if we retrieved if from the Pet class"\r\tself repository flushCache.\r\tretrieved := self repository selectOne: VOTestPet where: [ :each | (each at: \'name\') = \'Pizza\' ].\r\tself assert: retrieved class equals: VOTestCat. ',			#stamp : 'EstebanLorenzano 6/14/2016 14:43',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1205' ],		#self : OmReference [ '1206' ],		#time : DateAndTime [ '2018-08-16T16:44:16.62184+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testUpdate,			#protocol : #tests,			#sourceCode : 'testUpdate\r\t| pilot pilots id |\r\t\r\tpilot := VOTestPilot new\r\t\tname: \'Esteban\';\r\t\tpet: (VOTestDog new name: \'Doggie\').\r\tself repository save: pilot.\r\tself waitForWriteOperation.\r\t\r\tid := self repository idOf: pilot.\r\t\r\tpilot name: \'Another Pilot\'.\r\tself repository save: pilot.\r\tself waitForWriteOperation.\r\t\r\tpilots := self repository selectAll: VOTestPilot.\r\tself assert: pilots size equals: 1.\r\tself assert: pilots anyOne equals: pilot.\r\tself assert: (self repository idOf: pilot) equals: id.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VORepositoryTest,				#isMetaSide : false			},			#name : #testUpdate,			#protocol : #tests,			#sourceCode : 'testUpdate\r\t| pilot pilots id |\r\t\r\tpilot := VOTestPilot new\r\t\tname: \'Esteban\';\r\t\tpet: (VOTestDog new name: \'Doggie\').\r\tself repository save: pilot.\r\t\r\tid := self repository idOf: pilot.\r\t\r\tpilot name: \'Another Pilot\'.\r\tself repository save: pilot.\r\t\r\tpilots := self repository selectAll: VOTestPilot.\r\tself assert: pilots size equals: 1.\r\tself assert: pilots first equals: pilot.\r\tself assert: (self repository idOf: pilot) equals: id.',			#stamp : 'EstebanLorenzano 2/11/2016 19:01',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1206' ],		#self : OmReference [ '1207' ],		#time : DateAndTime [ '2018-08-16T16:44:16.623066+02:00' ],		#trigger : OmReference [ '1183' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOSeedVersionGeneratorTest,				#isMetaSide : false			},			#name : #testVersionIsInteger,			#protocol : #tests,			#sourceCode : 'testVersionIsInteger\r\tSystemVersion current major > 5 \r\t\tifTrue: [ ^ self skip ].\r\tself assert: versionGenerator newVersion isInteger',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Model-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOSeedVersionGeneratorTest,				#isMetaSide : false			},			#name : #testVersionIsInteger,			#protocol : #tests,			#sourceCode : 'testVersionIsInteger\r\tself assert: versionGenerator newVersion isInteger.',			#stamp : 'HolgerHansPeterFreyther 8/30/2015 16:36',			#package : #Voyage-Model-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:16.732965+02:00' ],		#prior : OmReference [ '1207' ],		#self : OmReference [ '1208' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Voyage-Memory-Core-EstebanLorenzano.1471364195'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1208' ],		#self : OmReference [ '1209' ],		#time : DateAndTime [ '2018-08-16T16:44:16.826472+02:00' ],		#trigger : @3	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMemoryRepository,				#isMetaSide : false			},			#name : #reset,			#protocol : #accessing,			#sourceCode : 'reset\r\t"Do nothing"',			#stamp : 'EstebanLorenzano 9/8/2016 15:57',			#package : #Voyage-Memory-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1209' ],		#self : OmReference [ '1210' ],		#time : DateAndTime [ '2018-08-16T16:44:16.92462+02:00' ],		#trigger : OmReference [ '1208' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMemoryRepository,				#isMetaSide : false			},			#name : #'removeCollection:',			#protocol : #resetting,			#sourceCode : 'removeCollection: aClass \r\tobjectMap \r\t\tremoveKey: (self collectionNameOf: aClass)\r\t\tifAbsent: [ "Do nothing" ]\t',			#stamp : 'EstebanLorenzano 7/31/2015 16:49',			#package : #Voyage-Memory-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMemoryRepository,				#isMetaSide : false			},			#name : #'removeCollection:',			#protocol : #resetting,			#sourceCode : 'removeCollection: aClass \r\tobjectMap \r\t\tremoveKey: (self collectionNameOf: aClass)\r\t\tifAbsent: [ "Do nothing" ]\t',			#stamp : 'EstebanLorenzano 7/31/2015 16:49',			#package : #Voyage-Memory-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1210' ],		#self : OmReference [ '1211' ],		#time : DateAndTime [ '2018-08-16T16:44:16.926669+02:00' ],		#trigger : OmReference [ '1208' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMemoryRepository,				#isMetaSide : false			},			#name : #'removeCollection:',			#protocol : #persistence,			#sourceCode : 'removeCollection: aClass \r\tobjectMap \r\t\tremoveKey: (self collectionNameOf: aClass)\r\t\tifAbsent: [ "Do nothing" ]\t',			#stamp : 'EstebanLorenzano 7/31/2015 16:49',			#package : #Voyage-Memory-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMemoryRepository,				#isMetaSide : false			},			#name : #'removeCollection:',			#protocol : #resetting,			#sourceCode : 'removeCollection: aClass \r\tobjectMap \r\t\tremoveKey: (self collectionNameOf: aClass)\r\t\tifAbsent: [ "Do nothing" ]\t',			#stamp : 'EstebanLorenzano 7/31/2015 16:49',			#package : #Voyage-Memory-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:17.036114+02:00' ],		#prior : OmReference [ '1211' ],		#self : OmReference [ '1212' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Voyage-JSON-EstebanLorenzano.1471364195'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1212' ],		#self : OmReference [ '1213' ],		#time : DateAndTime [ '2018-08-16T16:44:17.148309+02:00' ],		#trigger : @3	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOJSONMaterializer,				#isMetaSide : false			},			#name : #'obtainReferenceOf:id:',			#protocol : #private,			#sourceCode : 'obtainReferenceOf: objectClass id: anId\r\tself flag: #todo. "This is \'mongo exclusive\' and has to be moved there"\r\t^ self repository \r\t\tselectOne: objectClass \r\t\twhere: (Dictionary with: self class fieldRootId -> anId)\r\t\t\t',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-JSON		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1213' ],		#self : OmReference [ '1214' ],		#time : DateAndTime [ '2018-08-16T16:44:17.239656+02:00' ],		#trigger : OmReference [ '1212' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOJSONMaterializer,				#isMetaSide : false			},			#name : #'readReference:description:',			#protocol : #private,			#sourceCode : 'readReference: jsonDictionary description: aDescription\r\t| objectClass |\r\tobjectClass := self classFromJSON: jsonDictionary orDescription: aDescription.\r\t^ aDescription isLazy\r\t\t ifTrue: [\r\t\t\tself lazyProxyClass\r\t\t\t\trepository: self repository\r\t\t\t\tobjectClass: objectClass \r\t\t\t\tid: (jsonDictionary at: self class fieldId) ]\r\t\tifFalse: [ \r\t\t\t(self obtainReferenceOf: objectClass id: (jsonDictionary at: self class fieldId))\r\t\t\t\tifNil: [ self missingContentFor: objectClass id: (jsonDictionary at: self class fieldId) ] ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-JSON		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOJSONMaterializer,				#isMetaSide : false			},			#name : #'readReference:description:',			#protocol : #private,			#sourceCode : 'readReference: jsonDictionary description: aDescription\r\t| objectClass |\r\tobjectClass := self classFromJSON: jsonDictionary orDescription: aDescription.\r\t^ aDescription isLazy\r\t\t ifTrue: [\r\t\t\tself lazyProxyClass\r\t\t\t\trepository: self repository\r\t\t\t\tobjectClass: objectClass \r\t\t\t\tid: (jsonDictionary at: self class fieldId) ]\r\t\tifFalse: [ \r\t\t\t(self repository \r\t\t\t\tselectOne: objectClass \r\t\t\t\twhere: (Dictionary with: self class fieldRootId -> (jsonDictionary at: self class fieldId)))\r\t\t\t\tifNil: [ self missingContentFor: objectClass id: (jsonDictionary at: self class fieldId) ] ]',			#stamp : 'EstebanLorenzano 6/14/2016 08:28',			#package : #Voyage-JSON		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1214' ],		#self : OmReference [ '1215' ],		#time : DateAndTime [ '2018-08-16T16:44:17.242249+02:00' ],		#trigger : OmReference [ '1212' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VODescriptionBuilder,				#isMetaSide : false			},			#name : #'removeDuplicated:',			#protocol : #private,			#sourceCode : 'removeDuplicated: aCollection\r\t"It remove duplicated description (if same method name in hierarchy).\r\t Yeah, could be better implemented, but I\'m tired :("\r\r\t^ (aCollection reversed\r\t\tinject: Dictionary new\r\t\tinto: [ :all :each | \r\t\t\tall\r\t\t\t\tat: each selector put: each;\r\t\t\t\tyourself ]) \r\t\t\tvalues \r\t\t\tasSet \r\t\t\tasArray',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-JSON		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VODescriptionBuilder,				#isMetaSide : false			},			#name : #'removeDuplicated:',			#protocol : #private,			#sourceCode : 'removeDuplicated: aCollection\r\t"It remove duplicated description (if same method name in hierarchy).\r\t Yeah, could be better implemented, but I\'m tired :("\r\t^(aCollection reversed\r\t\tinject: Dictionary new\r\t\tinto: [ :all :each | \r\t\t\tall at: each selector put: each;\r\t\t\tyourself ])\r\t\tvalues\r\t\tasSet \r\t\tasArray',			#stamp : 'EstebanLorenzano 5/9/2012 16:17',			#package : #Voyage-JSON		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1215' ],		#self : OmReference [ '1216' ],		#time : DateAndTime [ '2018-08-16T16:44:17.24398+02:00' ],		#trigger : OmReference [ '1212' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOJSONSerializer,				#isMetaSide : false			},			#name : #'rawSerialize:description:',			#protocol : #'private raw',			#sourceCode : 'rawSerialize: rawValue description: aDescription\r\t"we need to check dictionary first in case a rawValue is a dictionary\r\tand has values that are not primitive"\r\trawValue isDictionary \r\t\tifTrue: [ ^self rawDictionary: rawValue description: aDescription ].\r\t\t\r\trawValue isTypePrimitive ifTrue: [ ^rawValue ].\r\t"rawValue isTypeFuture \r\t\tifTrue: [ ^self rawFuture: rawValue description: aDescription ]."\r\trawValue isTypePersistent \r\t\tifTrue: [ ^self rawReference: rawValue description: aDescription ].\r\trawValue isCollection \r\t\tifTrue: [ ^self rawCollection: rawValue description: aDescription ].\r\t^self rawEmbeded: rawValue description: aDescription',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-JSON		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOJSONSerializer,				#isMetaSide : false			},			#name : #'rawSerialize:description:',			#protocol : #'private raw',			#sourceCode : 'rawSerialize: rawValue description: aDescription\r\trawValue isTypePrimitive ifTrue: [ ^rawValue ].\r\t"rawValue isTypeFuture \r\t\tifTrue: [ ^self rawFuture: rawValue description: aDescription ]."\r\trawValue isTypePersistent \r\t\tifTrue: [ ^self rawReference: rawValue description: aDescription ].\r\trawValue isDictionary \r\t\tifTrue: [ ^self rawDictionary: rawValue description: aDescription ].\r\trawValue isCollection \r\t\tifTrue: [ ^self rawCollection: rawValue description: aDescription ].\r\t^self rawEmbeded: rawValue description: aDescription',			#stamp : 'EstebanLorenzano 2/9/2016 15:46',			#package : #Voyage-JSON		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:17.349923+02:00' ],		#prior : OmReference [ '1216' ],		#self : OmReference [ '1217' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Voyage-JSON-Tests-EstebanLorenzano.1471364195'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:17.456224+02:00' ],		#prior : OmReference [ '1217' ],		#self : OmReference [ '1218' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Voyage-Mongo-Core-EstebanLorenzano.1471364195'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1218' ],		#self : OmReference [ '1219' ],		#time : DateAndTime [ '2018-08-16T16:44:17.614308+02:00' ],		#trigger : @3	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOMongoRepositoryResolver\r\tinstanceVariableNames: \'debug pool collections mongoUrlResolver repository\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoRepositoryResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #debug,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #pool,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #collections,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #mongoUrlResolver,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #repository,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoRepositoryResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoRepositoryResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoRepositoryResolver,					#isMetaSide : false				},				#parent : @7,				#content : 'I am a resolver for a Mongo repository that uses a pool of Mongo sessions to perform the persistence operations.',				#stamp : 'TorstenBergmann 3/4/2015 20:34'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOMongoRepositoryResolver\r\tinstanceVariableNames: \'debug repository pool collections\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoRepositoryResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #debug,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #repository,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #pool,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #collections,					#parent : @31				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoRepositoryResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoRepositoryResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @31			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoRepositoryResolver,					#isMetaSide : false				},				#parent : @31,				#content : 'I am a resolver for a Mongo repository that uses a pool of Mongo sessions to perform the persistence operations.',				#stamp : 'TorstenBergmann 3/4/2015 20:34'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1219' ],		#self : OmReference [ '1220' ],		#time : DateAndTime [ '2018-08-16T16:44:17.867665+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOMongoRepositoryResolver\r\tinstanceVariableNames: \'debug repository pool collections\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoRepositoryResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #debug,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #repository,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #pool,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #collections,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoRepositoryResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoRepositoryResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoRepositoryResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'A repository resolver\r\rInstance Variables\r\tcollections:\t\t<Object>\r\tpool:\t\t<Object>\r\trepository:\t\t<Object>\r\rcollections\r\t- xxxxx\r\rpool\r\t- xxxxx\r\rrepository\r\t- xxxxx\r',				#stamp : 'TorstenBergmann 3/4/2015 20:34'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#oldComment : 'I am a resolver for a Mongo repository that uses a pool of Mongo sessions to perform the persistence operations.',		#newComment : 'A repository resolver\r\rInstance Variables\r\tcollections:\t\t<Object>\r\tpool:\t\t<Object>\r\trepository:\t\t<Object>\r\rcollections\r\t- xxxxx\r\rpool\r\t- xxxxx\r\rrepository\r\t- xxxxx\r',		#oldStamp : 'TorstenBergmann 3/4/2015 20:34',		#newStamp : 'TorstenBergmann 3/4/2015 20:34'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1220' ],		#self : OmReference [ '1221' ],		#time : DateAndTime [ '2018-08-16T16:44:17.961966+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VORepository',				#traitCompositionSource : '{}',				#definitionSource : 'VORepository subclass: #VOMongoRepository\r\tinstanceVariableNames: \'resolver host databaseName mongoUrls mongoUrlResolverClass password versionGenerator descriptionBuilder port replicaSetLookupTimeout username cache forceEager wireProtocolEnabled ensuringCurrentOnSave ensuringCurrentReferencesOnQueries lazySynchronize\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoRepository,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #resolver,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #host,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #databaseName,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #mongoUrls,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #mongoUrlResolverClass,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #password,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #versionGenerator,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #descriptionBuilder,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #port,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #replicaSetLookupTimeout,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #username,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #cache,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #forceEager,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #wireProtocolEnabled,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #ensuringCurrentOnSave,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #ensuringCurrentReferencesOnQueries,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #lazySynchronize,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoRepository class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoRepository class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoRepository,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m a Voyage repository who can persist on Mongo databases.\rEasiest way to use me is by executing: \r\rVOMongoRepository \r\thost: \'yourhost\' \r\tdatabase: \'yourdatabase\'\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VORepository',				#traitCompositionSource : '{}',				#definitionSource : 'VORepository subclass: #VOMongoRepository\r\tinstanceVariableNames: \'port databaseName host username password cache descriptionBuilder resolver forceEager versionGenerator\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoRepository,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #port,					#parent : @56				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #databaseName,					#parent : @56				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #host,					#parent : @56				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #username,					#parent : @56				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #password,					#parent : @56				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #cache,					#parent : @56				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #descriptionBuilder,					#parent : @56				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #resolver,					#parent : @56				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #forceEager,					#parent : @56				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepository,						#isMetaSide : false					},					#name : #versionGenerator,					#parent : @56				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoRepository class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoRepository class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @56			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoRepository,					#isMetaSide : false				},				#parent : @56,				#content : 'I\'m a Voyage repository who can persist on Mongo databases.\rEasiest way to use me is by executing: \r\rVOMongoRepository \r\thost: \'yourhost\' \r\tdatabase: \'yourdatabase\'\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1221' ],		#self : OmReference [ '1222' ],		#time : DateAndTime [ '2018-08-16T16:44:18.157715+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoLastError,				#isMetaSide : false			},			#name : #updatedExisting,			#protocol : #'*Voyage-Mongo-Core',			#sourceCode : 'updatedExisting\r\r\t^ reply \r\t\tat: \'updatedExisting\'',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1222' ],		#self : OmReference [ '1223' ],		#time : DateAndTime [ '2018-08-16T16:44:18.161034+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ZnUrl,				#isMetaSide : false			},			#name : #asMongoUrl,			#protocol : #'*Voyage-Mongo-Core-Extensions',			#sourceCode : 'asMongoUrl\r\tself assert: (self scheme = #mongodb).\r\t^self',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1223' ],		#self : OmReference [ '1224' ],		#time : DateAndTime [ '2018-08-16T16:44:18.164145+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ZnUrl\r\tinstanceVariableNames: \'scheme host port segments query fragment username password\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Zinc-Resource-Meta-Core\''			},			#name : #ZnUrl,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnUrl,						#isMetaSide : false					},					#name : #scheme,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnUrl,						#isMetaSide : false					},					#name : #host,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnUrl,						#isMetaSide : false					},					#name : #port,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnUrl,						#isMetaSide : false					},					#name : #segments,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnUrl,						#isMetaSide : false					},					#name : #query,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnUrl,						#isMetaSide : false					},					#name : #fragment,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnUrl,						#isMetaSide : false					},					#name : #username,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ZnUrl,						#isMetaSide : false					},					#name : #password,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ZnUrl class\r\tinstanceVariableNames: \'\''				},				#name : #'ZnUrl class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ZnUrl,					#isMetaSide : false				},				#parent : @8,				#content : 'I am ZnUrl, an implementation of an interpreted URL/URI.\rURLs are an element used in describing resources, more specifically to identify them.\r\rI consist of the following parts:\r  - scheme - like #http, #https, #ws, #wws, #file or nil\r  - host - hostname string or nil\r  - port - port integer or nil\r  - segments - collection of path segments, ends with #/ for directories\r  - query - query dictionary or nil\r  - fragment - fragment string or nil\r  - username - username string or nil\r  - password - password string or nil\r\rThe syntax of my external representation informally looks like this\r\r  scheme://username:password@host:port/segments?query#fragment\r\rI am most often created by parsing my external representation using either my #fromString: class method or by sending the #asZnUrl convenience method to a String. Using #asZnUrl helps in accepting both Strings and ZnUrls arguments.\r\r  ZnUrl fromString: \'http://www.google.com/search?q=Smalltalk\'.\r\rI can also be constucted programmatically.\r\r  ZnUrl new \r    scheme: #https; \r    host: \'encrypted.google.com\'; \r    addPathSegment: \'search\'; \r    queryAt: \'q\' put: \'Smalltalk\'; \r    yourself.\r  \rMy components can be manipulated destructively. Here is an example:\r\r  \'http://www.google.com/?one=1&two=2\' asZnUrl\r    queryAt: \'three\' put: \'3\';\r    queryRemoveKey: \'one\';\r    yourself.\r\rSome characters of parts of a URL are illegal because they would interfere with the syntax and further processing and thus have to be encoded. The methods in accessing protocols do not do any encoding, those in parsing and printing do. Here is an example:\r\r  \'http://www.google.com\' asZnUrl\r    addPathSegment: \'some encoding here\';\r    queryAt: \'and some encoding\' put: \'here, too\';\r    yourself\r\rMy parser is somewhat forgiving and accepts some unencoded URLs as well, like most browsers would.\r\r  \'http://www.example.com:8888/a path?q=a, b, c\' asZnUrl.\r\rI can parse in the context of a default scheme, like a browser would do.\r\r  ZnUrl fromString: \'www.example.com\' defaultScheme: #http\r\rGiven a scheme, I know its default port, try #portOrDefault.\r\rA path defaults to what is commonly referred to as slash, test with #isSlash. Paths are most often (but don\'t have to be) interpreted as filesystem paths. To support this, I have #isFilePath and #isDirectoryPath tests and #file and #directory accessors.\r\rI have some support to handle one URL in the context of another one, this is also known as a relative URL in the context of an absolute URL. Refer to #isAbsolute, #isRelative and #inContextOf:\r\r  \'/folder/file.txt\' asZnUrl inContextOf: \'http://fileserver.example.net:4400\' asZnUrl.\r\rIncomplete relative references can be parsed and resolved in the context of a base URL using #withRelativeReference:\r\r  \'http://www.site.com/static/html/home.html\' asZnUrl withRelativeReference: \'../js/menu.js\'.\r\rSometimes, the combination of my host and port are referred to as authority, see #authority.\r\rURL/URI/URN (Uniform/Universal Resource Locator/Identifier/Name) are closely related and can be and are used as synonyms is many contexts. Refer to http://en.wikipedia.org/wiki/Url for more information.\r\rThere is a convenience method #retrieveContents to download the resource a ZnUrl points to,\r\r  \'http://zn.stfx.eu/zn/numbers.txt\' asZnUrl retrieveContents.\r\rThis is implemented using a ZnUrlOperation.\r \rPart of Zinc HTTP Components.',				#stamp : 'SvenVanCaekenberghe 2/5/2015 00:00'			},			#classVariables : OrderedCollection [ ],			#category : #Zinc-Resource-Meta-Core,			#package : #Zinc-Resource-Meta-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*Voyage-Mongo-Core-Extensions'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1224' ],		#self : OmReference [ '1225' ],		#time : DateAndTime [ '2018-08-16T16:44:18.16532+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #'visitToOneDescription:',			#protocol : #visiting,			#sourceCode : 'visitToOneDescription: aDescription\r\t| reference |\r\treference := self readAt: aDescription ifAbsent: [ ^self ].\r\t\r\tself value: reference\r\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1225' ],		#self : OmReference [ '1226' ],		#time : DateAndTime [ '2018-08-16T16:44:18.167592+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #'visitToManyDescription:',			#protocol : #visiting,			#sourceCode : 'visitToManyDescription: aDescription\r\t| references |\r\treferences := self readAt: aDescription ifAbsent: [ ^self ].\r\r\treferences do: [ :each | self value: each ].\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1226' ],		#self : OmReference [ '1227' ],		#time : DateAndTime [ '2018-08-16T16:44:18.170087+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #'visitShadowDescription:',			#protocol : #visiting,			#sourceCode : 'visitShadowDescription: aDescription\r\t"Do not continue when it\'s shadow."',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1227' ],		#self : OmReference [ '1228' ],		#time : DateAndTime [ '2018-08-16T16:44:18.172269+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #'visitIDMirrorDescription:',			#protocol : #visiting,			#sourceCode : 'visitIDMirrorDescription: aDescription\r\t"Do nothing in this kind of description"',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1228' ],		#self : OmReference [ '1229' ],		#time : DateAndTime [ '2018-08-16T16:44:18.174236+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #'value:description:',			#protocol : #accessing,			#sourceCode : 'value: anObject description: aDescription\r\t| oldObject |\r\tself addToResultsIfSatisfy: anObject ifPresentDo: [ ^ self results ].\r\r\toldObject := self object.\r\t[ \r\t  self object: anObject.\r\t  self visit: aDescription ]\r\tensure: [ \r\t\tself object: oldObject ].\r\r\t^ self results',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1229' ],		#self : OmReference [ '1230' ],		#time : DateAndTime [ '2018-08-16T16:44:18.176982+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #'value:',			#protocol : #accessing,			#sourceCode : 'value: anObject\r\t^self \r\t\tvalue: anObject \r\t\tdescription: (self descriptionFor: anObject)',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1230' ],		#self : OmReference [ '1231' ],		#time : DateAndTime [ '2018-08-16T16:44:18.17886+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #results,			#protocol : #accessing,			#sourceCode : 'results\r\t^results',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1231' ],		#self : OmReference [ '1232' ],		#time : DateAndTime [ '2018-08-16T16:44:18.181086+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #'readAt:ifAbsent:',			#protocol : #visiting,			#sourceCode : 'readAt: aDescription ifAbsent: aBlock\r\t^ (aDescription accessor read: self object) ifNil: aBlock',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1232' ],		#self : OmReference [ '1233' ],		#time : DateAndTime [ '2018-08-16T16:44:18.183897+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOJSONVisitor',				#traitCompositionSource : '{}',				#definitionSource : 'VOJSONVisitor subclass: #VOCollector\r\tinstanceVariableNames: \'results block\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Utilities\''			},			#name : #VOCollector,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOCollector,						#isMetaSide : false					},					#name : #results,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOCollector,						#isMetaSide : false					},					#name : #block,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOCollector class\r\tinstanceVariableNames: \'\''				},				#name : #'VOCollector class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOCollector,					#isMetaSide : false				},				#parent : @8,				#content : 'I know how to traverse an object and its referenced objects (VODescription  references), and selectively collect them.',				#stamp : 'MartinDias 10/14/2016 19:31'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Utilities,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #visiting	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1233' ],		#self : OmReference [ '1234' ],		#time : DateAndTime [ '2018-08-16T16:44:18.184726+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\t\r\tresults := Set new.\r\tblock := [ true ].',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1234' ],		#self : OmReference [ '1235' ],		#time : DateAndTime [ '2018-08-16T16:44:18.187182+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOJSONVisitor',				#traitCompositionSource : '{}',				#definitionSource : 'VOJSONVisitor subclass: #VOCollector\r\tinstanceVariableNames: \'results block\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Utilities\''			},			#name : #VOCollector,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOCollector,						#isMetaSide : false					},					#name : #results,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOCollector,						#isMetaSide : false					},					#name : #block,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOCollector class\r\tinstanceVariableNames: \'\''				},				#name : #'VOCollector class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOCollector,					#isMetaSide : false				},				#parent : @8,				#content : 'I know how to traverse an object and its referenced objects (VODescription  references), and selectively collect them.',				#stamp : 'MartinDias 10/14/2016 19:31'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Utilities,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #initialization	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1235' ],		#self : OmReference [ '1236' ],		#time : DateAndTime [ '2018-08-16T16:44:18.187743+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #'descriptionFor:',			#protocol : #private,			#sourceCode : 'descriptionFor: anObject\r\t^ self repository descriptionBuilder for: anObject class',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1236' ],		#self : OmReference [ '1237' ],		#time : DateAndTime [ '2018-08-16T16:44:18.189751+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #'block:',			#protocol : #accessing,			#sourceCode : 'block: anObject\r\tblock := anObject',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1237' ],		#self : OmReference [ '1238' ],		#time : DateAndTime [ '2018-08-16T16:44:18.191671+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #block,			#protocol : #accessing,			#sourceCode : 'block\r\t^ block',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1238' ],		#self : OmReference [ '1239' ],		#time : DateAndTime [ '2018-08-16T16:44:18.194063+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOJSONVisitor',				#traitCompositionSource : '{}',				#definitionSource : 'VOJSONVisitor subclass: #VOCollector\r\tinstanceVariableNames: \'results block\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Utilities\''			},			#name : #VOCollector,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOCollector,						#isMetaSide : false					},					#name : #results,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOCollector,						#isMetaSide : false					},					#name : #block,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOCollector class\r\tinstanceVariableNames: \'\''				},				#name : #'VOCollector class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOCollector,					#isMetaSide : false				},				#parent : @8,				#content : 'I know how to traverse an object and its referenced objects (VODescription  references), and selectively collect them.',				#stamp : 'MartinDias 10/14/2016 19:31'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Utilities,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1239' ],		#self : OmReference [ '1240' ],		#time : DateAndTime [ '2018-08-16T16:44:18.194591+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollector,				#isMetaSide : false			},			#name : #'addToResultsIfSatisfy:ifPresentDo:',			#protocol : #private,			#sourceCode : 'addToResultsIfSatisfy: anObject ifPresentDo: presentBlock\r\t(block cull: anObject)\r\t\tifTrue: [ results addIfNotPresent: anObject ifPresentDo: presentBlock ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1240' ],		#self : OmReference [ '1241' ],		#time : DateAndTime [ '2018-08-16T16:44:18.196728+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOJSONVisitor',				#traitCompositionSource : '{}',				#definitionSource : 'VOJSONVisitor subclass: #VOCollector\r\tinstanceVariableNames: \'results block\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Utilities\''			},			#name : #VOCollector,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOCollector,						#isMetaSide : false					},					#name : #results,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOCollector,						#isMetaSide : false					},					#name : #block,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOCollector class\r\tinstanceVariableNames: \'\''				},				#name : #'VOCollector class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOCollector,					#isMetaSide : false				},				#parent : @8,				#content : 'I know how to traverse an object and its referenced objects (VODescription  references), and selectively collect them.',				#stamp : 'MartinDias 10/14/2016 19:31'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Utilities,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #private	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1241' ],		#self : OmReference [ '1242' ],		#time : DateAndTime [ '2018-08-16T16:44:18.197566+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOCollector class',				#isMetaSide : true			},			#name : #'allRootsFrom:in:',			#protocol : #convenience,			#sourceCode : 'allRootsFrom: anObject in: aRepository\r\t| instance |\r\tinstance := (self repository: aRepository)\r\t\tblock: [:each | each isTypePersistent ];\r\t\tyourself.\r\t\t\r\t^instance value: anObject.\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1242' ],		#self : OmReference [ '1243' ],		#time : DateAndTime [ '2018-08-16T16:44:18.199649+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOCollector class',				#isMetaSide : true			},			#name : #'allOtherRootsFrom:in:',			#protocol : #convenience,			#sourceCode : 'allOtherRootsFrom: anObject in: aRepository\r\t| instance |\r\tinstance := (self repository: aRepository)\r\t\tblock: [:each | each isTypePersistent and: [each ~~ anObject] ];\r\t\tyourself.\r\t\t\r\t^instance value: anObject.\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1243' ],		#self : OmReference [ '1244' ],		#time : DateAndTime [ '2018-08-16T16:44:18.202349+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'VOCollector class\r\tinstanceVariableNames: \'\''			},			#name : #'VOCollector class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'VOJSONVisitor',					#traitCompositionSource : '{}',					#definitionSource : 'VOJSONVisitor subclass: #VOCollector\r\tinstanceVariableNames: \'results block\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Utilities\''				},				#name : #VOCollector,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #VOCollector,							#isMetaSide : false						},						#name : #results,						#parent : @13					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #VOCollector,							#isMetaSide : false						},						#name : #block,						#parent : @13					}				],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #VOCollector,						#isMetaSide : false					},					#parent : @13,					#content : 'I know how to traverse an object and its referenced objects (VODescription  references), and selectively collect them.',					#stamp : 'MartinDias 10/14/2016 19:31'				},				#classVariables : OrderedCollection [ ],				#category : #Voyage-Mongo-Core-Utilities,				#package : #Voyage-Mongo-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #convenience	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1244' ],		#self : OmReference [ '1245' ],		#time : DateAndTime [ '2018-08-16T16:44:18.207224+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOJSONVisitor',				#traitCompositionSource : '{}',				#definitionSource : 'VOJSONVisitor subclass: #VOCollector\r\tinstanceVariableNames: \'results block\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Core-Utilities\''			},			#name : #VOCollector,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOCollector,						#isMetaSide : false					},					#name : #results,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOCollector,						#isMetaSide : false					},					#name : #block,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOCollector class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOCollector class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOCollector,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Utilities,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1245' ],		#self : OmReference [ '1246' ],		#time : DateAndTime [ '2018-08-16T16:44:18.209469+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Class,				#isMetaSide : false			},			#name : #isEnsuringCurrentReferencesOnQueries,			#protocol : #'*voyage-mongo-core-extensions',			#sourceCode : 'isEnsuringCurrentReferencesOnQueries\r\t"When the answer is true, the VOMongoRepository must take special care to ensure that my instances are up-to-date after queries."\r\r\t^ false',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1246' ],		#self : OmReference [ '1247' ],		#time : DateAndTime [ '2018-08-16T16:44:18.211339+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ClassDescription',				#traitCompositionSource : 'TClass',				#definitionSource : 'ClassDescription subclass: #Class\r\tuses: TClass\r\tinstanceVariableNames: \'subclasses name classPool sharedPools environment category traitComposition localSelectors\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Kernel-Classes\''			},			#name : #Class,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Class,						#isMetaSide : false					},					#name : #subclasses,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Class,						#isMetaSide : false					},					#name : #name,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Class,						#isMetaSide : false					},					#name : #classPool,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Class,						#isMetaSide : false					},					#name : #sharedPools,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Class,						#isMetaSide : false					},					#name : #environment,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Class,						#isMetaSide : false					},					#name : #category,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Class,						#isMetaSide : false					},					#name : #traitComposition,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Class,						#isMetaSide : false					},					#name : #localSelectors,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : 'TClass classTrait',					#definitionSource : 'Class class\r\tuses: TClass classTrait\r\tinstanceVariableNames: \'\''				},				#name : #'Class class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Class,					#isMetaSide : false				},				#parent : @8,				#content : 'I add a number of facilities to those in ClassDescription:\r\tA set of all my subclasses (defined in ClassDescription, but only used here and below)\r\tA name by which I can be found in a SystemDictionary\r\tA classPool for class variables shared between this class and its metaclass\r\tA list of sharedPools which probably should be supplanted by some better mechanism.\r\rMy instances describe the representation and behavior of objects. I add more comprehensive programming support facilities to the basic attributes of Behavior and the descriptive facilities of ClassDescription.\r\rThe slot \'subclasses\' is a redundant structure.  It is never used during execution, but is used by the development system to simplify or speed certain operations.  ',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Kernel-Classes,			#package : #Kernel,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*voyage-mongo-core-extensions'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1247' ],		#self : OmReference [ '1248' ],		#time : DateAndTime [ '2018-08-16T16:44:18.21372+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoSessionPool,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\tsuper printOn: aStream.\r\r\taStream\r\t\tnextPut: $(;\r\t\tnextPutAll: host asString;\r\t\tnextPut: $:;\r\t\tnextPutAll: port asString;\r\t\tnextPut: $/;\r\t\tnextPutAll: database asString;\r\t\tnextPut: $)',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1248' ],		#self : OmReference [ '1249' ],		#time : DateAndTime [ '2018-08-16T16:44:18.21594+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOSessionPool',				#traitCompositionSource : '{}',				#definitionSource : 'VOSessionPool subclass: #VOMongoSessionPool\r\tinstanceVariableNames: \'host port database username password\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Pooling\''			},			#name : #VOMongoSessionPool,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoSessionPool,						#isMetaSide : false					},					#name : #host,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoSessionPool,						#isMetaSide : false					},					#name : #port,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoSessionPool,						#isMetaSide : false					},					#name : #database,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoSessionPool,						#isMetaSide : false					},					#name : #username,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoSessionPool,						#isMetaSide : false					},					#name : #password,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoSessionPool class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoSessionPool class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoSessionPool,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m a session pool for mongo sessions. \rI receive a host, a port and a databaseName. \rI can be used doing:\r\rwithSession: [ :session | ... ]\r\r...but I prefer to be accessed using  \r\rwithDatabase: [ :db | ... ] \ronError: [ :session :db | ... ]',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Pooling,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #printing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1249' ],		#self : OmReference [ '1250' ],		#time : DateAndTime [ '2018-08-16T16:44:18.216484+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #writingPool,			#protocol : #'private replication',			#sourceCode : 'writingPool\r\t"Answer a VOMongoSessionPool for writing operations."\r\r\t^ pool',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1250' ],		#self : OmReference [ '1251' ],		#time : DateAndTime [ '2018-08-16T16:44:18.226848+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'synchronizeInstanceOf:json:updating:',			#protocol : #'private retrieving',			#sourceCode : 'synchronizeInstanceOf: aClass json: jsonDictionary updating: cachedObject\r\r\t| roots syncRoots |\r\troots := VOCollector allOtherRootsFrom: cachedObject in: repository.\r\troots := roots asArray.\r\tsyncRoots := roots collect: [ :root | repository synchronize: root ].\r\tsyncRoots ifNotEmpty: [\r\t\trepository flushCache.\r\t\troots elementsForwardIdentityTo: syncRoots copyHash: false ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1251' ],		#self : OmReference [ '1252' ],		#time : DateAndTime [ '2018-08-16T16:44:18.22923+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'save:id:ensuringCurrent:',			#protocol : #persistence,			#sourceCode : 'save: anObject id: anId ensuringCurrent: aBoolean\r\tself execute: [ self basicSave: anObject id: anId ensuringCurrent: aBoolean ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1252' ],		#self : OmReference [ '1253' ],		#time : DateAndTime [ '2018-08-16T16:44:18.231355+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'retrieveQueriedInstanceOf:json:',			#protocol : #'private retrieving',			#sourceCode : 'retrieveQueriedInstanceOf: aClass json: aDictionary\r\t^self retrieveInstanceOf: aClass json: aDictionary lazy: false',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1253' ],		#self : OmReference [ '1254' ],		#time : DateAndTime [ '2018-08-16T16:44:18.233939+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'retrieveInstanceOf:json:lazy:',			#protocol : #'private retrieving',			#sourceCode : 'retrieveInstanceOf: aClass json: jsonDictionary lazy: isLazy\r\r\t| id cachedVersion jsonVersion cachedObject result | \r\tid := jsonDictionary at: VOMongoJSONSerializer fieldRootId.\r\tcachedObject := self cacheAt: id.\r\tcachedVersion := self cacheVersionAt: id.\r\tjsonVersion := jsonDictionary at: VOMongoJSONSerializer fieldVersion ifAbsent: [ 0 ].\r\tresult := cachedObject.\r\t\r\t(cachedObject isNil or: [ cachedVersion ~= jsonVersion ])\r\t\tifTrue: [\r\t\t\tresult := isLazy \r\t\t\t\tifFalse: [ \r\t\t\t\t\tself materializeInstanceOf: aClass json: jsonDictionary updating: cachedObject id: id version: jsonVersion ]\r\t\t\t\tifTrue: [ \r\t\t\t\t\tself proxyfyInstanceOf: aClass json: jsonDictionary id: id ] ]\r\t\tifFalse: [\r\t\t\t"Cached object is up-to-date, but referenced roots may need to sync"\r\t\t\t(repository mustEnsureCurrentReferecesOnQueriesOf: aClass) ifTrue: [ \r\t\t\t\tself synchronizeInstanceOf: aClass json: jsonDictionary updating: cachedObject ] ].\r\t\t\r\t^result',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1254' ],		#self : OmReference [ '1255' ],		#time : DateAndTime [ '2018-08-16T16:44:18.236059+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #resetMongoUrlResolver,			#protocol : #accessing,			#sourceCode : 'resetMongoUrlResolver\r\tmongoUrlResolver := nil.\r\tself mongoUrlResolver reset.\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1255' ],		#self : OmReference [ '1256' ],		#time : DateAndTime [ '2018-08-16T16:44:18.23854+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #repository,			#protocol : #'private accessing',			#sourceCode : 'repository \r\t^repository',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1256' ],		#self : OmReference [ '1257' ],		#time : DateAndTime [ '2018-08-16T16:44:18.240649+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #readingPool,			#protocol : #'private replication',			#sourceCode : 'readingPool\r\t"Answer a VOMongoSessionPool for reading operations. ToDo: Should be implemented to allow secondary mongo\'s reads."\r\t\r\t^ self writingPool',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1257' ],		#self : OmReference [ '1258' ],		#time : DateAndTime [ '2018-08-16T16:44:18.242513+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'proxyfyInstanceOf:json:id:',			#protocol : #'private retrieving',			#sourceCode : 'proxyfyInstanceOf: aClass json: jsonDictionary id: id\r\t"Note any referenced root will be up-to-date when de-proxyfied"\r\r\t^ VOMongoJSONLazyProxy\r\t\trepository: repository\r\t\tobjectClass: aClass\r\t\tid: id\r\t\tjson: jsonDictionary',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1258' ],		#self : OmReference [ '1259' ],		#time : DateAndTime [ '2018-08-16T16:44:18.244523+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\tsuper printOn: aStream.\r\r\taStream\r\t\tnextPut: $(;\r\t\tprint: self primaryMongoUrl;\r\t\tnextPut: $/;\r\t\tnextPutAll: self databaseName asString;\r\t\tnextPut: $).\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1259' ],		#self : OmReference [ '1260' ],		#time : DateAndTime [ '2018-08-16T16:44:18.246593+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOMongoRepositoryResolver\r\tinstanceVariableNames: \'debug repository pool collections\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoRepositoryResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #debug,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #repository,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #pool,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #collections,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoRepositoryResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoRepositoryResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoRepositoryResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'A repository resolver\r\rInstance Variables\r\tcollections:\t\t<Object>\r\tpool:\t\t<Object>\r\trepository:\t\t<Object>\r\rcollections\r\t- xxxxx\r\rpool\r\t- xxxxx\r\rrepository\r\t- xxxxx\r',				#stamp : 'TorstenBergmann 3/4/2015 20:34'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #printing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1260' ],		#self : OmReference [ '1261' ],		#time : DateAndTime [ '2018-08-16T16:44:18.247178+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #primaryMongoUrl,			#protocol : #'private replication',			#sourceCode : 'primaryMongoUrl\r\t^ self mongoUrlResolver primaryMongoUrl',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1261' ],		#self : OmReference [ '1262' ],		#time : DateAndTime [ '2018-08-16T16:44:18.249499+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #mongoUrlResolver,			#protocol : #accessing,			#sourceCode : 'mongoUrlResolver\r\t^ mongoUrlResolver ifNil: [\r\t\tmongoUrlResolver := repository mongoUrlResolverClass repository: repository resolver: self ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1262' ],		#self : OmReference [ '1263' ],		#time : DateAndTime [ '2018-08-16T16:44:18.251556+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'materializeInstanceOf:json:updating:id:version:',			#protocol : #'private retrieving',			#sourceCode : 'materializeInstanceOf: aClass json: jsonDictionary updating: cachedObject id: id version: jsonVersion \r\t"Note any referenced root will be up-to-date because of the materializer"\r\r\t| result |\r\tcachedObject \r\t\tifNotNil: [ result := cachedObject ]\r\t\tifNil: [ \r\t\t\tresult := (self retrieveClassOf: aClass json: jsonDictionary) basicNew.\r\t\t\tself cacheAt: id put: result ].\r\r\tself cacheAt: id putVersion: jsonVersion.\r\tself materialize: result fromJSON: jsonDictionary.\r\t\r\t^ result',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1263' ],		#self : OmReference [ '1264' ],		#time : DateAndTime [ '2018-08-16T16:44:18.253489+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #knownMongoUrls,			#protocol : #'private replication',			#sourceCode : 'knownMongoUrls\r\t^ self mongoUrlResolver knownMongoUrls',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1264' ],		#self : OmReference [ '1265' ],		#time : DateAndTime [ '2018-08-16T16:44:18.255441+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOMongoRepositoryResolver\r\tinstanceVariableNames: \'debug repository pool collections\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoRepositoryResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #debug,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #repository,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #pool,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoRepositoryResolver,						#isMetaSide : false					},					#name : #collections,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoRepositoryResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoRepositoryResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoRepositoryResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'A repository resolver\r\rInstance Variables\r\tcollections:\t\t<Object>\r\tpool:\t\t<Object>\r\trepository:\t\t<Object>\r\rcollections\r\t- xxxxx\r\rpool\r\t- xxxxx\r\rrepository\r\t- xxxxx\r',				#stamp : 'TorstenBergmann 3/4/2015 20:34'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'private replication'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1265' ],		#self : OmReference [ '1266' ],		#time : DateAndTime [ '2018-08-16T16:44:18.255862+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #isReplicaSet,			#protocol : #testing,			#sourceCode : 'isReplicaSet\r\t^ self shouldBeImplemented',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1266' ],		#self : OmReference [ '1267' ],		#time : DateAndTime [ '2018-08-16T16:44:18.257748+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'futureUpdate:ensuringCurrent:',			#protocol : #'private persistence',			#sourceCode : 'futureUpdate: aFuture ensuringCurrent: aBoolean\r\tself \r\t\tfutureWithNewVersion: aFuture \r\t\tdo: [ :aOID :anObject :updateDictionary |\r\t\t\t"Ensure oid"\r\t\t\tupdateDictionary at: \'_id\' put: aOID.\r\r\t\t\taBoolean\r\t\t\t\tifTrue: [ self basicFireAndCheckUpdate: anObject serialized: updateDictionary withId: aOID ]\r\t\t\t\tifFalse: [ self basicFireAndForgetUpdate: anObject serialized: updateDictionary withId: aOID ] ]\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1267' ],		#self : OmReference [ '1268' ],		#time : DateAndTime [ '2018-08-16T16:44:18.259635+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'futureInsertOrUpdate:id:ensuringCurrent:',			#protocol : #'private persistence',			#sourceCode : 'futureInsertOrUpdate: aFuture id: idObject ensuringCurrent: aBoolean\r\tidObject == aFuture futureId\r\t\tifTrue: [ self futureUpdate: aFuture ensuringCurrent: aBoolean ]\r\t\tifFalse: [ self futureInsert: aFuture ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1268' ],		#self : OmReference [ '1269' ],		#time : DateAndTime [ '2018-08-16T16:44:18.261433+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicSave:id:ensuringCurrent:',			#protocol : #'private persistence',			#sourceCode : 'basicSave: anObject id: idObject ensuringCurrent: aBoolean\r\t| futures |\r\tfutures := self serialize: anObject id: idObject.\r\t"first object is always root"\r\tself futureInsertOrUpdate: futures first id: idObject ensuringCurrent: aBoolean.\r\t"... and I know that all extra objects will be inserted"\r\tfutures allButFirstDo: [ :each | self futureInsert: each ].',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1269' ],		#self : OmReference [ '1270' ],		#time : DateAndTime [ '2018-08-16T16:44:18.263353+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRawWireProtocolUpdate:with:in:',			#protocol : #'private persistence',			#sourceCode : 'basicRawWireProtocolUpdate: searchDictionary with: updateDictionary in: collection\r\t^ collection replace: searchDictionary with: updateDictionary',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1270' ],		#self : OmReference [ '1271' ],		#time : DateAndTime [ '2018-08-16T16:44:18.265985+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRawFireAndForgetUpdate:to:in:',			#protocol : #'private persistence',			#sourceCode : 'basicRawFireAndForgetUpdate: searchDictionary to: updateDictionary in: collection\r\t"Perform update (do not check whether it was success)"\r\r\trepository isWireProtocolEnabled\r\t\tifTrue: [ self basicRawWireProtocolUpdate: searchDictionary with: updateDictionary in: collection ]\r\t\tifFalse: [ self basicRawCommandUpdate: searchDictionary with: updateDictionary in: collection ]\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1271' ],		#self : OmReference [ '1272' ],		#time : DateAndTime [ '2018-08-16T16:44:18.268065+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRawFireAndCheckUpdate:to:in:',			#protocol : #'private persistence',			#sourceCode : 'basicRawFireAndCheckUpdate: searchDictionary to: updateDictionary in: collection\r\t"Perform update and answer whether it was success"\r\r\trepository isWireProtocolEnabled\r\t\tifTrue: [ \r\t\t\tself basicRawWireProtocolUpdate: searchDictionary with: updateDictionary in: collection.\r\t\t\t^ collection database lastError updatedExisting ]\r\t\tifFalse: [ | writeResult |\r\t\t\twriteResult := self basicRawCommandUpdate: searchDictionary with: updateDictionary in: collection.\r\t\t\t^ (writeResult at: \'n\') > 0 ]\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1272' ],		#self : OmReference [ '1273' ],		#time : DateAndTime [ '2018-08-16T16:44:18.269947+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRawCommandUpdate:with:in:',			#protocol : #'private persistence',			#sourceCode : 'basicRawCommandUpdate: searchDictionary with: updateDictionary in: collection\r\t^ collection commandUpdate: searchDictionary with: updateDictionary',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1273' ],		#self : OmReference [ '1274' ],		#time : DateAndTime [ '2018-08-16T16:44:18.271717+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicFireAndForgetUpdate:serialized:withId:',			#protocol : #'private persistence',			#sourceCode : 'basicFireAndForgetUpdate: anObject serialized: updateDictionary withId: aOID \r\tself writingPool withDatabase: [ :db |\r\t\t(self \r\t\t\tbasicRawFireAndForgetUpdate: {\'_id\'->aOID} asDictionary \r\t\t\tto: updateDictionary\r\t\t\tin: (self collectionAt: anObject class inDatabase: db)) ].\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1274' ],		#self : OmReference [ '1275' ],		#time : DateAndTime [ '2018-08-16T16:44:18.27341+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicFireAndCheckUpdate:serialized:withId:',			#protocol : #'private persistence',			#sourceCode : 'basicFireAndCheckUpdate: anObject serialized: updateDictionary withId: aOID \r\tself writingPool withDatabase: [ :db | \r\t\t| currentVersion hasUpdated |\r\t\tcurrentVersion := self cacheVersionAt: aOID.\r\r\t\thasUpdated := self \r\t\t\tbasicRawFireAndCheckUpdate: {\'_id\'->aOID. \'#version\'->currentVersion} asDictionary \r\t\t\tto: updateDictionary\r\t\t\tin: (self collectionAt: anObject class inDatabase: db).\r\r\t\thasUpdated ifFalse: [ VOMongoNotCurrentError signal ] ].\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1275' ],		#self : OmReference [ '1276' ],		#time : DateAndTime [ '2018-08-16T16:44:18.275409+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoJSONLazyProxy,				#isMetaSide : false			},			#name : #obtainRealObject,			#protocol : #private,			#sourceCode : 'obtainRealObject\r\t^ repository materializeInstanceOf: objectClass json: json',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1276' ],		#self : OmReference [ '1277' ],		#time : DateAndTime [ '2018-08-16T16:44:18.277366+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOLazyProxy',				#traitCompositionSource : '{}',				#definitionSource : 'VOLazyProxy subclass: #VOMongoJSONLazyProxy\r\tinstanceVariableNames: \'json\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Utilities\''			},			#name : #VOMongoJSONLazyProxy,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoJSONLazyProxy,						#isMetaSide : false					},					#name : #json,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoJSONLazyProxy class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoJSONLazyProxy class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoJSONLazyProxy,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a proxy of an object whose json dictionary  was already queried.',				#stamp : 'MartinDias 10/26/2016 16:58'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Utilities,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #private	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1277' ],		#self : OmReference [ '1278' ],		#time : DateAndTime [ '2018-08-16T16:44:18.27775+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoJSONLazyProxy,				#isMetaSide : false			},			#name : #'initializeRepository:class:id:json:',			#protocol : #initialization,			#sourceCode : 'initializeRepository: aRepository class: aClass id: idObject json: jsonDictionary\r\tself initializeRepository: aRepository class: aClass id: idObject.\r\tjson := jsonDictionary.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1278' ],		#self : OmReference [ '1279' ],		#time : DateAndTime [ '2018-08-16T16:44:18.27951+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOLazyProxy',				#traitCompositionSource : '{}',				#definitionSource : 'VOLazyProxy subclass: #VOMongoJSONLazyProxy\r\tinstanceVariableNames: \'json\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Utilities\''			},			#name : #VOMongoJSONLazyProxy,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoJSONLazyProxy,						#isMetaSide : false					},					#name : #json,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoJSONLazyProxy class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoJSONLazyProxy class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoJSONLazyProxy,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a proxy of an object whose json dictionary  was already queried.',				#stamp : 'MartinDias 10/26/2016 16:58'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Utilities,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #initialization	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1279' ],		#self : OmReference [ '1280' ],		#time : DateAndTime [ '2018-08-16T16:44:18.279924+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoJSONLazyProxy class',				#isMetaSide : true			},			#name : #'repository:objectClass:id:json:',			#protocol : #'instance creation',			#sourceCode : 'repository: aRepository objectClass: aClass id: idObject json: jsonDictionary\r\t^self basicNew \r\t\tinitializeRepository: aRepository \r\t\t\tclass: aClass \r\t\t\tid: idObject\r\t\t\tjson: jsonDictionary ',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1280' ],		#self : OmReference [ '1281' ],		#time : DateAndTime [ '2018-08-16T16:44:18.282287+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoJSONLazyProxy class',				#isMetaSide : true			},			#name : #'repository:objectClass:id:',			#protocol : #'instance creation',			#sourceCode : 'repository: aRepository objectClass: aClass id: idObject\r\tself shouldNotImplement',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1281' ],		#self : OmReference [ '1282' ],		#time : DateAndTime [ '2018-08-16T16:44:18.284074+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoJSONLazyProxy class\r\tinstanceVariableNames: \'\''			},			#name : #'VOMongoJSONLazyProxy class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'VOLazyProxy',					#traitCompositionSource : '{}',					#definitionSource : 'VOLazyProxy subclass: #VOMongoJSONLazyProxy\r\tinstanceVariableNames: \'json\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Utilities\''				},				#name : #VOMongoJSONLazyProxy,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #VOMongoJSONLazyProxy,							#isMetaSide : false						},						#name : #json,						#parent : @13					}				],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoJSONLazyProxy,						#isMetaSide : false					},					#parent : @13,					#content : 'I am a proxy of an object whose json dictionary  was already queried.',					#stamp : 'MartinDias 10/26/2016 16:58'				},				#classVariables : OrderedCollection [ ],				#category : #Voyage-Mongo-Core-Utilities,				#package : #Voyage-Mongo-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #'instance creation'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1282' ],		#self : OmReference [ '1283' ],		#time : DateAndTime [ '2018-08-16T16:44:18.287564+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOLazyProxy',				#traitCompositionSource : '{}',				#definitionSource : 'VOLazyProxy subclass: #VOMongoJSONLazyProxy\r\tinstanceVariableNames: \'json\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Core-Utilities\''			},			#name : #VOMongoJSONLazyProxy,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOMongoJSONLazyProxy,						#isMetaSide : false					},					#name : #json,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoJSONLazyProxy class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoJSONLazyProxy class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoJSONLazyProxy,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Utilities,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1283' ],		#self : OmReference [ '1284' ],		#time : DateAndTime [ '2018-08-16T16:44:18.291052+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #String,				#isMetaSide : false			},			#name : #asMongoUrl,			#protocol : #'*Voyage-Mongo-Core-Extensions',			#sourceCode : 'asMongoUrl\r\t^ ZnUrl fromString: self defaultScheme: #mongodb',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1284' ],		#self : OmReference [ '1285' ],		#time : DateAndTime [ '2018-08-16T16:44:18.292791+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ArrayedCollection',				#traitCompositionSource : '{}',				#definitionSource : 'ArrayedCollection subclass: #String\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'AsciiOrder CSLineEnders CSNonSeparators CSSeparators CaseInsensitiveOrder CaseSensitiveOrder CrLfExchangeTable LowercasingTable Tokenish TypeTable UppercasingTable\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Collections-Strings\''			},			#name : #String,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'String class\r\tinstanceVariableNames: \'\''				},				#name : #'String class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #String,					#isMetaSide : false				},				#parent : @8,				#content : 'A String is an indexed collection of Characters. Class String provides the abstract super class for ByteString (that represents an array of 8-bit Characters) and WideString (that represents an array of  32-bit characters).  In the similar manner of LargeInteger and SmallInteger, those subclasses are chosen accordingly for a string; namely as long as the system can figure out so, the String is used to represent the given string.\r\rStrings support a vast array of useful methods, which can best be learned by browsing and trying out examples as you find them in the code.\r\rHere are a few useful methods to look at...\r\tString match:\r\tString contractTo:\r\rString also inherits many useful methods from its hierarchy, such as\r\tSequenceableCollection ,\r\tSequenceableCollection copyReplaceAll:with:\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #String,						#isMetaSide : false					},					#name : #AsciiOrder,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #String,						#isMetaSide : false					},					#name : #CSLineEnders,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #String,						#isMetaSide : false					},					#name : #CSNonSeparators,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #String,						#isMetaSide : false					},					#name : #CSSeparators,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #String,						#isMetaSide : false					},					#name : #CaseInsensitiveOrder,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #String,						#isMetaSide : false					},					#name : #CaseSensitiveOrder,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #String,						#isMetaSide : false					},					#name : #CrLfExchangeTable,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #String,						#isMetaSide : false					},					#name : #LowercasingTable,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #String,						#isMetaSide : false					},					#name : #Tokenish,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #String,						#isMetaSide : false					},					#name : #TypeTable,					#parent : @8				},				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #String,						#isMetaSide : false					},					#name : #UppercasingTable,					#parent : @8				}			],			#category : #Collections-Strings,			#package : #Collections-Strings,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*Voyage-Mongo-Core-Extensions'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1285' ],		#self : OmReference [ '1286' ],		#time : DateAndTime [ '2018-08-16T16:44:18.297303+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'wireProtocolEnabled:',			#protocol : #accessing,			#sourceCode : 'wireProtocolEnabled: aBoolean\r\twireProtocolEnabled := aBoolean',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1286' ],		#self : OmReference [ '1287' ],		#time : DateAndTime [ '2018-08-16T16:44:18.299165+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'synchronize:',			#protocol : #persistence,			#sourceCode : 'synchronize: anObject\r\r\t| objectClass id json |\r\tanObject isTypePersistent ifFalse: [ ^anObject ].\r\r\tobjectClass := anObject class.\r\tid := self keyOf: anObject.\r\tjson := resolver\r\t\tbasicRawSelectOne: objectClass \r\t\twhere: (Dictionary with: VOMongoJSONSerializer fieldRootId -> id).\r\r\t^resolver retrieveInstanceOf: objectClass json: json lazy: self isLazySynchronize',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1287' ],		#self : OmReference [ '1288' ],		#time : DateAndTime [ '2018-08-16T16:44:18.300929+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'saveEnsuringCurrent:',			#protocol : #persistence,			#sourceCode : 'saveEnsuringCurrent: anObject\r\tself \r\t\tsave: anObject \r\t\tid: (self keyOf: anObject)\r\t\tensuringCurrent: true',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1288' ],		#self : OmReference [ '1289' ],		#time : DateAndTime [ '2018-08-16T16:44:18.303565+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'save:id:ensuringCurrent:',			#protocol : #persistence,			#sourceCode : 'save: anObject id: idObject ensuringCurrent: aBoolean\r\tresolver \r\t\tsave: anObject \r\t\tid: idObject \r\t\tensuringCurrent: aBoolean',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1289' ],		#self : OmReference [ '1290' ],		#time : DateAndTime [ '2018-08-16T16:44:18.30612+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #replicaSetLookupTimeout,			#protocol : #accessing,			#sourceCode : 'replicaSetLookupTimeout\r\t^ replicaSetLookupTimeout ifNil: [ replicaSetLookupTimeout := self class defaultReplicaSetLookupTimeout ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1290' ],		#self : OmReference [ '1291' ],		#time : DateAndTime [ '2018-08-16T16:44:18.308141+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #primaryMongoUrl,			#protocol : #accessing,			#sourceCode : 'primaryMongoUrl\r\t^ resolver primaryMongoUrl',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1291' ],		#self : OmReference [ '1292' ],		#time : DateAndTime [ '2018-08-16T16:44:18.310178+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'mustEnsureCurrentReferecesOnQueriesOf:',			#protocol : #testing,			#sourceCode : 'mustEnsureCurrentReferecesOnQueriesOf: aClass\r\t^ self isEnsuringCurrentReferencesOnQueries or: [ aClass isEnsuringCurrentReferencesOnQueries ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1292' ],		#self : OmReference [ '1293' ],		#time : DateAndTime [ '2018-08-16T16:44:18.312152+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #mongoUrls,			#protocol : #accessing,			#sourceCode : 'mongoUrls\r\t^mongoUrls',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1293' ],		#self : OmReference [ '1294' ],		#time : DateAndTime [ '2018-08-16T16:44:18.313962+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'mongoUrlResolverClass:',			#protocol : #accessing,			#sourceCode : 'mongoUrlResolverClass: aVOMongoUrlResolver\r\tmongoUrlResolverClass := aVOMongoUrlResolver.\r\tresolver resetMongoUrlResolver.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1294' ],		#self : OmReference [ '1295' ],		#time : DateAndTime [ '2018-08-16T16:44:18.315931+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #mongoUrlResolverClass,			#protocol : #accessing,			#sourceCode : 'mongoUrlResolverClass\r\t^ mongoUrlResolverClass ifNil: [ mongoUrlResolverClass := VOMongoNoReplicationUrlResolver ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1295' ],		#self : OmReference [ '1296' ],		#time : DateAndTime [ '2018-08-16T16:44:18.317802+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'materializeInstanceOf:json:',			#protocol : #persistence,			#sourceCode : 'materializeInstanceOf: objectClass json: json\r\t^resolver retrieveQueriedInstanceOf: objectClass json: json',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1296' ],		#self : OmReference [ '1297' ],		#time : DateAndTime [ '2018-08-16T16:44:18.320218+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'lazySynchronize:',			#protocol : #accessing,			#sourceCode : 'lazySynchronize: aBoolean\r\tlazySynchronize := aBoolean',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1297' ],		#self : OmReference [ '1298' ],		#time : DateAndTime [ '2018-08-16T16:44:18.321967+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #knownMongoUrls,			#protocol : #accessing,			#sourceCode : 'knownMongoUrls\r\t^resolver knownMongoUrls',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1298' ],		#self : OmReference [ '1299' ],		#time : DateAndTime [ '2018-08-16T16:44:18.323654+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #isWireProtocolEnabled,			#protocol : #testing,			#sourceCode : 'isWireProtocolEnabled\r\t^ wireProtocolEnabled',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1299' ],		#self : OmReference [ '1300' ],		#time : DateAndTime [ '2018-08-16T16:44:18.325364+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #isReplicaSet,			#protocol : #testing,			#sourceCode : 'isReplicaSet\r\t^ resolver isReplicaSet',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1300' ],		#self : OmReference [ '1301' ],		#time : DateAndTime [ '2018-08-16T16:44:18.327245+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #isLazySynchronize,			#protocol : #testing,			#sourceCode : 'isLazySynchronize\r\t^ lazySynchronize',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1301' ],		#self : OmReference [ '1302' ],		#time : DateAndTime [ '2018-08-16T16:44:18.32915+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #isEnsuringCurrentReferencesOnQueries,			#protocol : #testing,			#sourceCode : 'isEnsuringCurrentReferencesOnQueries\r\t^ensuringCurrentReferencesOnQueries',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1302' ],		#self : OmReference [ '1303' ],		#time : DateAndTime [ '2018-08-16T16:44:18.33099+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #isEnsuringCurrentOnSave,			#protocol : #testing,			#sourceCode : 'isEnsuringCurrentOnSave\r\t^ ensuringCurrentOnSave',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1303' ],		#self : OmReference [ '1304' ],		#time : DateAndTime [ '2018-08-16T16:44:18.332924+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'initializeMongoUrls:database:username:password:',			#protocol : #initialization,			#sourceCode : 'initializeMongoUrls: aCollection database: databaseString username: aUserName password: aPassword\r\tmongoUrls := aCollection.\r\tdatabaseName := databaseString.\r\tusername := aUserName.\r\tpassword := aPassword.\r\tself initialize',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1304' ],		#self : OmReference [ '1305' ],		#time : DateAndTime [ '2018-08-16T16:44:18.335411+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'ensuringCurrentReferencesOnQueries:',			#protocol : #accessing,			#sourceCode : 'ensuringCurrentReferencesOnQueries: aBoolean\r\tensuringCurrentReferencesOnQueries := aBoolean',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1305' ],		#self : OmReference [ '1306' ],		#time : DateAndTime [ '2018-08-16T16:44:18.337282+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'ensuringCurrentOnSave:',			#protocol : #accessing,			#sourceCode : 'ensuringCurrentOnSave: aBoolean\r\tensuringCurrentOnSave := aBoolean ',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1306' ],		#self : OmReference [ '1307' ],		#time : DateAndTime [ '2018-08-16T16:44:18.339116+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #enableReplication,			#protocol : #accessing,			#sourceCode : 'enableReplication \r\tself mongoUrlResolverClass: VOMongoReplicationUrlResolver',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1307' ],		#self : OmReference [ '1308' ],		#time : DateAndTime [ '2018-08-16T16:44:18.340994+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #disableReplication,			#protocol : #accessing,			#sourceCode : 'disableReplication \r\tself mongoUrlResolverClass: VOMongoNoReplicationUrlResolver',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1308' ],		#self : OmReference [ '1309' ],		#time : DateAndTime [ '2018-08-16T16:44:18.342929+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoRepository class',				#isMetaSide : true			},			#name : #'mongoUrls:database:username:password:',			#protocol : #'instance creation',			#sourceCode : 'mongoUrls: aCollection database: databaseString username: aUserName password: aPassword\r\t^self basicNew \r\t\tinitializeMongoUrls: (aCollection collect: #asMongoUrl)\r\t\t\tdatabase: databaseString\r\t\t\tusername: aUserName\r\t\t\tpassword: aPassword;\r\t\tyourself',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1309' ],		#self : OmReference [ '1310' ],		#time : DateAndTime [ '2018-08-16T16:44:18.344706+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoRepository class',				#isMetaSide : true			},			#name : #'mongoUrls:database:',			#protocol : #'instance creation',			#sourceCode : 'mongoUrls: aCollection database: databaseString\r\t^self \r\t\tmongoUrls: aCollection \r\t\tdatabase: databaseString \r\t\tusername: \'\' \r\t\tpassword: \'\'',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1310' ],		#self : OmReference [ '1311' ],		#time : DateAndTime [ '2018-08-16T16:44:18.346453+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoRepository class',				#isMetaSide : true			},			#name : #defaultVersionGenerator,			#protocol : #defaults,			#sourceCode : 'defaultVersionGenerator\r\t^ VOVersionGenerator newDefault',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1311' ],		#self : OmReference [ '1312' ],		#time : DateAndTime [ '2018-08-16T16:44:18.348219+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoRepository class',				#isMetaSide : true			},			#name : #defaultReplicaSetLookupTimeout,			#protocol : #defaults,			#sourceCode : 'defaultReplicaSetLookupTimeout\r\t^ 2 seconds',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1312' ],		#self : OmReference [ '1313' ],		#time : DateAndTime [ '2018-08-16T16:44:18.353201+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MongoReplicaSetStatusMember,				#isMetaSide : false			},			#name : #mongoUrl,			#protocol : #'*Voyage-Mongo-Core-Extensions',			#sourceCode : 'mongoUrl\r\t^ self name asMongoUrl',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1313' ],		#self : OmReference [ '1314' ],		#time : DateAndTime [ '2018-08-16T16:44:18.355548+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MongoReplicaSetStatusMember\r\tinstanceVariableNames: \'status\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Core-Replication\''			},			#name : #MongoReplicaSetStatusMember,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MongoReplicaSetStatusMember,						#isMetaSide : false					},					#name : #status,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MongoReplicaSetStatusMember class\r\tinstanceVariableNames: \'\''				},				#name : #'MongoReplicaSetStatusMember class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MongoReplicaSetStatusMember,					#isMetaSide : false				},				#parent : @8,				#content : 'I represent a member of a Mongo Replica Set status. More concretely, I reify part of the result of status command (https://docs.mongodb.com/v3.0/reference/command/replSetGetStatus)',				#stamp : 'MartinDias 5/12/2016 01:32'			},			#classVariables : OrderedCollection [ ],			#category : #Mongo-Core-Replication,			#package : #Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*Voyage-Mongo-Core-Extensions'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1314' ],		#self : OmReference [ '1315' ],		#time : DateAndTime [ '2018-08-16T16:44:18.356279+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoExecuteStrategy,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\t \r\thandledErrorsByTimestamp := SmallDictionary new',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1315' ],		#self : OmReference [ '1316' ],		#time : DateAndTime [ '2018-08-16T16:44:18.358249+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOMongoExecuteStrategy\r\tinstanceVariableNames: \'resolver blockClosure retriesLeft\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Utilities\''			},			#name : #VOMongoExecuteStrategy,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoExecuteStrategy,						#isMetaSide : false					},					#name : #resolver,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoExecuteStrategy,						#isMetaSide : false					},					#name : #blockClosure,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoExecuteStrategy,						#isMetaSide : false					},					#name : #retriesLeft,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoExecuteStrategy class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoExecuteStrategy class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoExecuteStrategy,					#isMetaSide : false				},				#parent : @8,				#content : 'I know how to execute a mongo repository operation, which implies not only execute but also retrying on error.',				#stamp : 'MartinDias 6/22/2016 12:30'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Utilities,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #initialization	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1316' ],		#self : OmReference [ '1317' ],		#time : DateAndTime [ '2018-08-16T16:44:18.361448+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoError',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoError subclass: #VOMongoReplicaSetError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Core-Exceptions\''			},			#name : #VOMongoReplicaSetError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoReplicaSetError class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoReplicaSetError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoReplicaSetError,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Exceptions,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1317' ],		#self : OmReference [ '1318' ],		#time : DateAndTime [ '2018-08-16T16:44:18.365171+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoError',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoError subclass: #VOMongoNotCurrentError\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Core-Exceptions\''			},			#name : #VOMongoNotCurrentError,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoNotCurrentError class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoNotCurrentError class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoNotCurrentError,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Exceptions,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1318' ],		#self : OmReference [ '1319' ],		#time : DateAndTime [ '2018-08-16T16:44:18.366112+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoUrlResolver,				#isMetaSide : false			},			#name : #resolver,			#protocol : #accessing,			#sourceCode : 'resolver\r\t^ resolver',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1319' ],		#self : OmReference [ '1320' ],		#time : DateAndTime [ '2018-08-16T16:44:18.368332+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoUrlResolver,				#isMetaSide : false			},			#name : #reset,			#protocol : #accessing,			#sourceCode : 'reset\r\t',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1320' ],		#self : OmReference [ '1321' ],		#time : DateAndTime [ '2018-08-16T16:44:18.370314+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoUrlResolver,				#isMetaSide : false			},			#name : #repository,			#protocol : #accessing,			#sourceCode : 'repository\r\t^ repository',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1321' ],		#self : OmReference [ '1322' ],		#time : DateAndTime [ '2018-08-16T16:44:18.372129+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoUrlResolver,				#isMetaSide : false			},			#name : #primaryMongoUrl,			#protocol : #accessing,			#sourceCode : 'primaryMongoUrl\r\t^ self subclassResponsibility',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1322' ],		#self : OmReference [ '1323' ],		#time : DateAndTime [ '2018-08-16T16:44:18.374016+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoUrlResolver,				#isMetaSide : false			},			#name : #knownMongoUrls,			#protocol : #accessing,			#sourceCode : 'knownMongoUrls\r\t^ self subclassResponsibility',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1323' ],		#self : OmReference [ '1324' ],		#time : DateAndTime [ '2018-08-16T16:44:18.377019+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOMongoUrlResolver\r\tinstanceVariableNames: \'repository resolver\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoUrlResolver,						#isMetaSide : false					},					#name : #repository,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoUrlResolver,						#isMetaSide : false					},					#name : #resolver,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'I am responsible of determining the primary mongoUrl and the known mongoUrls. My subclsases implement concrete ways of doing so.',				#stamp : 'MartinDias 6/24/2016 00:56'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1324' ],		#self : OmReference [ '1325' ],		#time : DateAndTime [ '2018-08-16T16:44:18.377493+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoUrlResolver,				#isMetaSide : false			},			#name : #'initializeRepository:resolver:',			#protocol : #initialization,			#sourceCode : 'initializeRepository: aRepository resolver: aResolver\r\trepository := aRepository.\r\tresolver := aResolver.\r\r\tself initialize.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1325' ],		#self : OmReference [ '1326' ],		#time : DateAndTime [ '2018-08-16T16:44:18.37948+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOMongoUrlResolver\r\tinstanceVariableNames: \'repository resolver\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoUrlResolver,						#isMetaSide : false					},					#name : #repository,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoUrlResolver,						#isMetaSide : false					},					#name : #resolver,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'I am responsible of determining the primary mongoUrl and the known mongoUrls. My subclsases implement concrete ways of doing so.',				#stamp : 'MartinDias 6/24/2016 00:56'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #initialization	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1326' ],		#self : OmReference [ '1327' ],		#time : DateAndTime [ '2018-08-16T16:44:18.379854+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoUrlResolver,				#isMetaSide : false			},			#name : #'checkLastError:',			#protocol : #api,			#sourceCode : 'checkLastError: db\r\t"Check last error after a persistence mongodb operation (if necessary)"\r\t\r\t^ self subclassResponsibility',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1327' ],		#self : OmReference [ '1328' ],		#time : DateAndTime [ '2018-08-16T16:44:18.381636+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOMongoUrlResolver\r\tinstanceVariableNames: \'repository resolver\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoUrlResolver,						#isMetaSide : false					},					#name : #repository,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoUrlResolver,						#isMetaSide : false					},					#name : #resolver,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'I am responsible of determining the primary mongoUrl and the known mongoUrls. My subclsases implement concrete ways of doing so.',				#stamp : 'MartinDias 6/24/2016 00:56'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #api	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1328' ],		#self : OmReference [ '1329' ],		#time : DateAndTime [ '2018-08-16T16:44:18.382015+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoUrlResolver class',				#isMetaSide : true			},			#name : #'repository:resolver:',			#protocol : #'instance creation',			#sourceCode : 'repository: aRepository resolver: aResolver\r\t^ self basicNew\r\t\tinitializeRepository: aRepository resolver: aResolver;\r\t\tyourself',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1329' ],		#self : OmReference [ '1330' ],		#time : DateAndTime [ '2018-08-16T16:44:18.383757+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoUrlResolver class\r\tinstanceVariableNames: \'\''			},			#name : #'VOMongoUrlResolver class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Object',					#traitCompositionSource : '{}',					#definitionSource : 'Object subclass: #VOMongoUrlResolver\r\tinstanceVariableNames: \'repository resolver\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''				},				#name : #VOMongoUrlResolver,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #VOMongoUrlResolver,							#isMetaSide : false						},						#name : #repository,						#parent : @13					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #VOMongoUrlResolver,							#isMetaSide : false						},						#name : #resolver,						#parent : @13					}				],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoUrlResolver,						#isMetaSide : false					},					#parent : @13,					#content : 'I am responsible of determining the primary mongoUrl and the known mongoUrls. My subclsases implement concrete ways of doing so.',					#stamp : 'MartinDias 6/24/2016 00:56'				},				#classVariables : OrderedCollection [ ],				#category : #Voyage-Mongo-Core-Base,				#package : #Voyage-Mongo-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #'instance creation'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1330' ],		#self : OmReference [ '1331' ],		#time : DateAndTime [ '2018-08-16T16:44:18.384159+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationUrlResolver,				#isMetaSide : false			},			#name : #'resetIfCurrent:',			#protocol : #private,			#sourceCode : 'resetIfCurrent: token\r\t"Reset mongo urls, only if token is still current."\r\t\r\tmutex critical: [\r\t\tcurrentToken == token ifTrue: [ \r\t\t\tself basicReset.\r\t\t\tcurrentToken := Object new ]]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1331' ],		#self : OmReference [ '1332' ],		#time : DateAndTime [ '2018-08-16T16:44:18.386203+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationUrlResolver,				#isMetaSide : false			},			#name : #reset,			#protocol : #api,			#sourceCode : 'reset\r\t"Reset mongo urls. If a reset is already in execution (by other process), just wait it finishes."\r\t\r\tself resetIfCurrent: currentToken.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1332' ],		#self : OmReference [ '1333' ],		#time : DateAndTime [ '2018-08-16T16:44:18.388072+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationUrlResolver,				#isMetaSide : false			},			#name : #primaryMongoUrl,			#protocol : #accessing,			#sourceCode : 'primaryMongoUrl\r\t^ primaryMongoUrl',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1333' ],		#self : OmReference [ '1334' ],		#time : DateAndTime [ '2018-08-16T16:44:18.389966+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationUrlResolver,				#isMetaSide : false			},			#name : #'lookupReplicaSetStatusIfFound:',			#protocol : #private,			#sourceCode : 'lookupReplicaSetStatusIfFound: foundBlock\r\r\t| timeout |\r\ttimeout := DateAndTime now + repository replicaSetLookupTimeout.\r\tresolver debugLog: \'lookup available mongo to get replica set status\'.\r\r\t[[ DateAndTime now < timeout ] whileTrue: [ \r\t\tself basicLookupReplicaSetStatusIfFound: [ :status | ^ foundBlock value: status ]]]\r\t\ton: MongoCommandError do: [:error | \r\t\t\tresolver debugLog: \'no replica set: \', error asString ].\r\r\tresolver debugLog: \'no replica set\'.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1334' ],		#self : OmReference [ '1335' ],		#time : DateAndTime [ '2018-08-16T16:44:18.392291+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationUrlResolver,				#isMetaSide : false			},			#name : #knownMongoUrls,			#protocol : #accessing,			#sourceCode : 'knownMongoUrls\r\t^ knownMongoUrls',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1335' ],		#self : OmReference [ '1336' ],		#time : DateAndTime [ '2018-08-16T16:44:18.394133+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoUrlResolver',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoUrlResolver subclass: #VOMongoReplicationUrlResolver\r\tinstanceVariableNames: \'primaryMongoUrl mutex knownMongoUrls currentToken\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoReplicationUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #primaryMongoUrl,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #knownMongoUrls,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #currentToken,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoReplicationUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoReplicationUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoReplicationUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'I am responsible of determining the primary mongoUrl and the known mongoUrls using replication support, but that adapts no replica-set is available.',				#stamp : 'MartinDias 6/24/2016 00:55'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1336' ],		#self : OmReference [ '1337' ],		#time : DateAndTime [ '2018-08-16T16:44:18.394968+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationUrlResolver,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\t\r\tmutex := Semaphore forMutualExclusion.\r\t\t\r\t"Initially all known mongo urls are the ones configured in repository"\r\tknownMongoUrls := repository mongoUrls.\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1337' ],		#self : OmReference [ '1338' ],		#time : DateAndTime [ '2018-08-16T16:44:18.396826+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoUrlResolver',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoUrlResolver subclass: #VOMongoReplicationUrlResolver\r\tinstanceVariableNames: \'primaryMongoUrl mutex knownMongoUrls currentToken\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoReplicationUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #primaryMongoUrl,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #knownMongoUrls,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #currentToken,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoReplicationUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoReplicationUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoReplicationUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'I am responsible of determining the primary mongoUrl and the known mongoUrls using replication support, but that adapts no replica-set is available.',				#stamp : 'MartinDias 6/24/2016 00:55'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #initialization	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1338' ],		#self : OmReference [ '1339' ],		#time : DateAndTime [ '2018-08-16T16:44:18.3972+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationUrlResolver,				#isMetaSide : false			},			#name : #'checkLastError:',			#protocol : #api,			#sourceCode : 'checkLastError: db\r\t| lastError |\r\tlastError := db lastError.\r\tlastError\r\t\tcodeIfPresent: [ lastError signal ] \r\t\tifAbsent: [].',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1339' ],		#self : OmReference [ '1340' ],		#time : DateAndTime [ '2018-08-16T16:44:18.398912+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoUrlResolver',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoUrlResolver subclass: #VOMongoReplicationUrlResolver\r\tinstanceVariableNames: \'primaryMongoUrl mutex knownMongoUrls currentToken\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoReplicationUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #primaryMongoUrl,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #knownMongoUrls,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #currentToken,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoReplicationUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoReplicationUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoReplicationUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'I am responsible of determining the primary mongoUrl and the known mongoUrls using replication support, but that adapts no replica-set is available.',				#stamp : 'MartinDias 6/24/2016 00:55'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #api	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1340' ],		#self : OmReference [ '1341' ],		#time : DateAndTime [ '2018-08-16T16:44:18.39927+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationUrlResolver,				#isMetaSide : false			},			#name : #basicReset,			#protocol : #private,			#sourceCode : 'basicReset\r\r\tself lookupReplicaSetStatusIfFound: [ :status |\r\t\t"Lookup primary member"\r\t\tstatus members \r\t\t\tdetect: #isPrimary\r\t\t\tifFound: [ :aMember |\r\t\t\t\tprimaryMongoUrl := aMember mongoUrl.\r\t\t\t\tknownMongoUrls := (status members collect: #mongoUrl) asArray.\r\t\t\t\tresolver debugLog: \'replica set primary member found: \', primaryMongoUrl asString.\r\t\t\t\t^ self ]].\r\r\tprimaryMongoUrl := repository mongoUrls first.\r\tknownMongoUrls := repository mongoUrls.\r\tresolver debugLog: \'replica set primary *not* found\'.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1341' ],		#self : OmReference [ '1342' ],		#time : DateAndTime [ '2018-08-16T16:44:18.40131+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationUrlResolver,				#isMetaSide : false			},			#name : #'basicLookupReplicaSetStatusIfFound:',			#protocol : #private,			#sourceCode : 'basicLookupReplicaSetStatusIfFound: callbackBlock\r\r\t| mongo |\r\tknownMongoUrls do: [ :each | [[ \r\t\tmongo := Mongo host: each host port: each port.\r\t\tmongo open.\r\t\t^ callbackBlock value: mongo replicaSetStatus ]\r\t\t\ton: NetworkError "Unavailable member => skip"\r\t\t\tdo: [ :error | \tresolver debugLog: each asString , \'->\' , error asString ]]\r\t\t\tensure: [ mongo isOpen ifTrue: [ mongo close ]]]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1342' ],		#self : OmReference [ '1343' ],		#time : DateAndTime [ '2018-08-16T16:44:18.4031+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoUrlResolver',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoUrlResolver subclass: #VOMongoReplicationUrlResolver\r\tinstanceVariableNames: \'primaryMongoUrl mutex knownMongoUrls currentToken\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoReplicationUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #primaryMongoUrl,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #knownMongoUrls,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #currentToken,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoReplicationUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoReplicationUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoReplicationUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'I am responsible of determining the primary mongoUrl and the known mongoUrls using replication support, but that adapts no replica-set is available.',				#stamp : 'MartinDias 6/24/2016 00:55'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #private	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1343' ],		#self : OmReference [ '1344' ],		#time : DateAndTime [ '2018-08-16T16:44:18.406036+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoUrlResolver',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoUrlResolver subclass: #VOMongoReplicationUrlResolver\r\tinstanceVariableNames: \'primaryMongoUrl mutex knownMongoUrls currentToken\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoReplicationUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #primaryMongoUrl,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #mutex,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #knownMongoUrls,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOMongoReplicationUrlResolver,						#isMetaSide : false					},					#name : #currentToken,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoReplicationUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoReplicationUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoReplicationUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1344' ],		#self : OmReference [ '1345' ],		#time : DateAndTime [ '2018-08-16T16:44:18.406865+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoNoReplicationUrlResolver,				#isMetaSide : false			},			#name : #primaryMongoUrl,			#protocol : #accessing,			#sourceCode : 'primaryMongoUrl\r\t^ repository mongoUrls first',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1345' ],		#self : OmReference [ '1346' ],		#time : DateAndTime [ '2018-08-16T16:44:18.408755+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoNoReplicationUrlResolver,				#isMetaSide : false			},			#name : #knownMongoUrls,			#protocol : #accessing,			#sourceCode : 'knownMongoUrls\r\t^ repository mongoUrls\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1346' ],		#self : OmReference [ '1347' ],		#time : DateAndTime [ '2018-08-16T16:44:18.411438+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoUrlResolver',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoUrlResolver subclass: #VOMongoNoReplicationUrlResolver\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoNoReplicationUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoNoReplicationUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoNoReplicationUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoNoReplicationUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'I am responsible of determining the primary mongoUrl and the known mongoUrls using initial data provided in the repository.',				#stamp : 'MartinDias 6/24/2016 00:56'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1347' ],		#self : OmReference [ '1348' ],		#time : DateAndTime [ '2018-08-16T16:44:18.411863+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoNoReplicationUrlResolver,				#isMetaSide : false			},			#name : #'checkLastError:',			#protocol : #api,			#sourceCode : 'checkLastError: db\r\t"It isn\'t necessary to check persistence errors when replication is disabled."',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1348' ],		#self : OmReference [ '1349' ],		#time : DateAndTime [ '2018-08-16T16:44:18.413765+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoUrlResolver',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoUrlResolver subclass: #VOMongoNoReplicationUrlResolver\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoNoReplicationUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoNoReplicationUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoNoReplicationUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoNoReplicationUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : 'I am responsible of determining the primary mongoUrl and the known mongoUrls using initial data provided in the repository.',				#stamp : 'MartinDias 6/24/2016 00:56'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #api	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1349' ],		#self : OmReference [ '1350' ],		#time : DateAndTime [ '2018-08-16T16:44:18.418905+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoUrlResolver',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoUrlResolver subclass: #VOMongoNoReplicationUrlResolver\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoNoReplicationUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoNoReplicationUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoNoReplicationUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoNoReplicationUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1350' ],		#self : OmReference [ '1351' ],		#time : DateAndTime [ '2018-08-16T16:44:18.423819+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #VOMongoUrlResolver\r\tinstanceVariableNames: \'repository resolver\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Core-Base\''			},			#name : #VOMongoUrlResolver,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOMongoUrlResolver,						#isMetaSide : false					},					#name : #repository,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOMongoUrlResolver,						#isMetaSide : false					},					#name : #resolver,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoUrlResolver class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoUrlResolver class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoUrlResolver,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Core-Base,			#package : #Voyage-Mongo-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1351' ],		#self : OmReference [ '1352' ],		#time : DateAndTime [ '2018-08-16T16:44:18.432481+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicCount:',			#protocol : #'private persistence',			#sourceCode : 'basicCount: aClass \r\t^self readingPool withDatabase: [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) size ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicCount:',			#protocol : #'private persistence',			#sourceCode : 'basicCount: aClass \r\t^self pool withDatabase: [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) size ]',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1352' ],		#self : OmReference [ '1353' ],		#time : DateAndTime [ '2018-08-16T16:44:18.434199+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicCount:where:',			#protocol : #'private persistence',			#sourceCode : 'basicCount: aClass where: aDictionary\r\t^self readingPool withDatabase: [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) sizeForQuery: aDictionary asMongoQuery ]\r\t',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicCount:where:',			#protocol : #'private persistence',			#sourceCode : 'basicCount: aClass where: aDictionary\r\t^self pool withDatabase: [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) sizeForQuery: aDictionary asMongoQuery ]\r\t',			#stamp : 'EstebanLorenzano 8/3/2016 17:15',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1353' ],		#self : OmReference [ '1354' ],		#time : DateAndTime [ '2018-08-16T16:44:18.435538+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #basicDropDatabase,			#protocol : #'private persistence',			#sourceCode : 'basicDropDatabase\r\tself writingPool withDatabase:  [ :db | db drop ].',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #basicDropDatabase,			#protocol : #'private persistence',			#sourceCode : 'basicDropDatabase\r\tself pool withDatabase:  [ :db | db drop ].',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1354' ],		#self : OmReference [ '1355' ],		#time : DateAndTime [ '2018-08-16T16:44:18.436754+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRawSelectMany:where:limit:offset:',			#protocol : #'private persistence',			#sourceCode : 'basicRawSelectMany: aClass where: aDictionary limit: limit offset: offset\r\t^self readingPool withDatabase: [ :db |\r\t\t(self collectionAt: aClass inDatabase: db) \r\t\t\tselect: aDictionary \r\t\t\tlimit: limit \r\t\t\toffset: offset ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRawSelectMany:where:limit:offset:',			#protocol : #'private persistence',			#sourceCode : 'basicRawSelectMany: aClass where: aDictionary limit: limit offset: offset\r\t^self pool withDatabase: [ :db | | collection | \r\t\t(self collectionAt: aClass inDatabase: db) \r\t\t\tselect: aDictionary \r\t\t\tlimit: limit \r\t\t\toffset: offset ]',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1355' ],		#self : OmReference [ '1356' ],		#time : DateAndTime [ '2018-08-16T16:44:18.438465+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRawSelectMany:where:order:limit:offset:',			#protocol : #'private persistence',			#sourceCode : 'basicRawSelectMany: aClass where: aDictionary order: anotherDictionary limit: limit offset: offset\r\t^self readingPool withDatabase: [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) \r\t\t\tselect: aDictionary\r\t\t\tlimit: limit\r\t\t\toffset: offset\r\t\t\torder: anotherDictionary ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRawSelectMany:where:order:limit:offset:',			#protocol : #'private persistence',			#sourceCode : 'basicRawSelectMany: aClass where: aDictionary order: anotherDictionary limit: limit offset: offset\r\t^self pool withDatabase: [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) \r\t\t\tselect: aDictionary\r\t\t\tlimit: limit\r\t\t\toffset: offset\r\t\t\torder: anotherDictionary ]',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1356' ],		#self : OmReference [ '1357' ],		#time : DateAndTime [ '2018-08-16T16:44:18.440665+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRawSelectOne:where:',			#protocol : #'private persistence',			#sourceCode : 'basicRawSelectOne: aClass where: aDictionary\r\t^self readingPool withDatabase: [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) detect: aDictionary ]\r\t',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRawSelectOne:where:',			#protocol : #'private persistence',			#sourceCode : 'basicRawSelectOne: aClass where: aDictionary\r\t^self pool withDatabase: [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) detect: aDictionary ]\r\t',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1357' ],		#self : OmReference [ '1358' ],		#time : DateAndTime [ '2018-08-16T16:44:18.441986+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRemove:',			#protocol : #'private persistence',			#sourceCode : 'basicRemove: anObject \r\tself writingPool withDatabase: [ :db |\r\t\t(self collectionAt: anObject class inDatabase: db) \r\t\t\tdelete: { \'_id\'->(self keyOf: anObject)} asDictionary.\r\t\t\t\r\t\tmongoUrlResolver checkLastError: db ]\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRemove:',			#protocol : #'private persistence',			#sourceCode : 'basicRemove: anObject \r\tself pool withDatabase: [ :db |\r\t\t(self collectionAt: anObject class inDatabase: db) \r\t\t\tdelete: { \'_id\'->(self keyOf: anObject)} asDictionary ]\r',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1358' ],		#self : OmReference [ '1359' ],		#time : DateAndTime [ '2018-08-16T16:44:18.443319+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRemoveAll:',			#protocol : #'private persistence',			#sourceCode : 'basicRemoveAll: aClass\r\tself writingPool withDatabase: [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) remove: Dictionary new.\r\t\t\r\t\tmongoUrlResolver checkLastError: db ].',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRemoveAll:',			#protocol : #'private persistence',			#sourceCode : 'basicRemoveAll: aClass\r\tself pool withDatabase:  [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) remove: Dictionary new ].',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1359' ],		#self : OmReference [ '1360' ],		#time : DateAndTime [ '2018-08-16T16:44:18.44448+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRemoveCollection:',			#protocol : #private,			#sourceCode : 'basicRemoveCollection: aClass\r\tself writingPool withDatabase:  [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) drop.\r\t\t\r\t\tmongoUrlResolver checkLastError: db ].\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicRemoveCollection:',			#protocol : #private,			#sourceCode : 'basicRemoveCollection: aClass\r\tself pool withDatabase:  [ :db | \r\t\t(self collectionAt: aClass inDatabase: db) drop ].\r',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1360' ],		#self : OmReference [ '1361' ],		#time : DateAndTime [ '2018-08-16T16:44:18.445738+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicSave:id:',			#protocol : #'private persistence',			#sourceCode : 'basicSave: anObject id: idObject\r\t| futures |\r\t\r\tfutures := self serialize: anObject id: idObject.\r\t"first object is always root"\r\tself futureInsertOrUpdate: futures first id: idObject.\r\t"... and I know that all extra objects will be inserted"\r\tfutures allButFirstDo: [ :each | self futureInsert: each ].',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1361' ],		#self : OmReference [ '1362' ],		#time : DateAndTime [ '2018-08-16T16:44:18.446893+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicSelectMany:where:limit:offset:',			#protocol : #'private persistence',			#sourceCode : 'basicSelectMany: aClass where: aDictionary limit: limit offset: offset\r\t"Selecting instances of aClass should be done in the mongo query, not here"\r\tself flag: #todo.\r\t\r\t^((self basicRawSelectMany:  aClass where: aDictionary limit: limit offset: offset)\r\t\tcollect: [ :each | self retrieveQueriedInstanceOf: aClass json: each ]\r\t\tas: repository collectionClass)\r\t\t\tselect: [ :each | each isKindOf: aClass ]\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicSelectMany:where:limit:offset:',			#protocol : #'private persistence',			#sourceCode : 'basicSelectMany: aClass where: aDictionary limit: limit offset: offset\r\t"Selecting instances of aClass should be done in the mongo query, not here"\r\tself flag: #todo.\r\t\r\t^((self basicRawSelectMany:  aClass where: aDictionary limit: limit offset: offset)\r\t\tcollect: [ :each | self retrieveObjectOf: aClass json: each ]\r\t\tas: repository collectionClass)\r\t\t\tselect: [ :each | each isKindOf: aClass ]\r',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1362' ],		#self : OmReference [ '1363' ],		#time : DateAndTime [ '2018-08-16T16:44:18.448111+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicSelectMany:where:order:limit:offset:',			#protocol : #'private persistence',			#sourceCode : 'basicSelectMany: aClass where: aDictionary order: orderDictionary limit: limit offset: offset\r\t"Selecting instances of aClass should be done in the mongo query, not here"\r\tself flag: #todo.\r\t\r\t^((self basicRawSelectMany:  aClass where: aDictionary order: orderDictionary limit: limit offset: offset)\r\t\tcollect: [ :each | self retrieveQueriedInstanceOf: aClass json: each ]\r\t\tas: repository collectionClass)\r\t\t\tselect: [ :each | each isKindOf: aClass ]\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicSelectMany:where:order:limit:offset:',			#protocol : #'private persistence',			#sourceCode : 'basicSelectMany: aClass where: aDictionary order: orderDictionary limit: limit offset: offset\r\t"Selecting instances of aClass should be done in the mongo query, not here"\r\tself flag: #todo.\r\t\r\t^((self basicRawSelectMany:  aClass where: aDictionary order: orderDictionary limit: limit offset: offset)\r\t\tcollect: [ :each | self retrieveObjectOf: aClass json: each ]\r\t\tas: repository collectionClass)\r\t\t\tselect: [ :each | each isKindOf: aClass ]\r',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1363' ],		#self : OmReference [ '1364' ],		#time : DateAndTime [ '2018-08-16T16:44:18.449976+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicSelectOne:where:',			#protocol : #'private persistence',			#sourceCode : 'basicSelectOne: aClass where: aDictionary\r\t| json result |\r\t\r\t"Selecting an instance of aClass should be done in the Mongo query, not here.\r\tIn the meantime, this is working. Slow, but working."\r\tself flag: #todo.\r\t\r\tjson := self basicRawSelectOne: aClass where: aDictionary.\r\tjson isEmptyOrNil \r\t\tifFalse: [ result := self retrieveQueriedInstanceOf: aClass json: json ].\r\t\t\t\r\t^(result isKindOf: aClass) \r\t\tifTrue: [ result ]\r\t\tifFalse: [ nil ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'basicSelectOne:where:',			#protocol : #'private persistence',			#sourceCode : 'basicSelectOne: aClass where: aDictionary\r\t| json result |\r\t\r\t"Selecting an instance of aClass should be done in the Mongo query, not here.\r\tIn the meantime, this is working. Slow, but working."\r\tself flag: #todo.\r\t\r\tjson := self basicRawSelectOne: aClass where: aDictionary.\r\tjson isEmptyOrNil \r\t\tifFalse: [ result := self retrieveObjectOf: aClass json: json ].\r\t\t\t\r\t^(result isKindOf: aClass) \r\t\tifTrue: [ result ]\r\t\tifFalse: [ nil ]',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1364' ],		#self : OmReference [ '1365' ],		#time : DateAndTime [ '2018-08-16T16:44:18.451212+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'futureInsertOrUpdate:',			#protocol : #'private persistence',			#sourceCode : 'futureInsertOrUpdate: aFuture \r\t(self keyOf: aFuture realObject)\r\t\tifNotNil: [ self futureUpdate: aFuture ]\r\t\tifNil: [ self futureInsert: aFuture ]',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1365' ],		#self : OmReference [ '1366' ],		#time : DateAndTime [ '2018-08-16T16:44:18.452253+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'futureInsertOrUpdate:id:',			#protocol : #'private persistence',			#sourceCode : 'futureInsertOrUpdate: aFuture id: idObject\r\tidObject == aFuture futureId\r\t\tifTrue: [ self futureUpdate: aFuture ]\r\t\tifFalse: [ self futureInsert: aFuture ]',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1366' ],		#self : OmReference [ '1367' ],		#time : DateAndTime [ '2018-08-16T16:44:18.453282+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'futureUpdate:',			#protocol : #'private persistence',			#sourceCode : 'futureUpdate: aFuture\r\tself \r\t\tfutureWithNewVersion: aFuture \r\t\tdo: [ :id :object :serialized | \r\t\t\tself \r\t\t\t\tupdate: object \r\t\t\t\tserialized: serialized \r\t\t\t\twithId: id ]\r',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1367' ],		#self : OmReference [ '1368' ],		#time : DateAndTime [ '2018-08-16T16:44:18.454242+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #host,			#protocol : #'private accessing',			#sourceCode : 'host \r\t^repository host',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1368' ],		#self : OmReference [ '1369' ],		#time : DateAndTime [ '2018-08-16T16:44:18.455318+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'insert:serialized:withId:',			#protocol : #'private persistence',			#sourceCode : 'insert: anObject serialized: jsonDictionary withId: aOID\r\tself writingPool withDatabase: [ :db | \r\t\t(self collectionAt: anObject class inDatabase: db) \r\t\t\tadd: (jsonDictionary\r\t\t\t\tat: \'_id\' put: aOID;\r\t\t\t\tyourself).\r\r\t\tmongoUrlResolver checkLastError: db.\r\t].\r\r\t^aOID',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'insert:serialized:withId:',			#protocol : #'private persistence',			#sourceCode : 'insert: anObject serialized: jsonDictionary withId: aOID\r\tself pool withDatabase: [ :db | \r\t\t(self collectionAt: anObject class inDatabase: db) \r\t\t\tadd: (jsonDictionary\r\t\t\t\tat: \'_id\' put: aOID;\r\t\t\t\tyourself) ].\r\r\t^aOID',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1369' ],		#self : OmReference [ '1370' ],		#time : DateAndTime [ '2018-08-16T16:44:18.456382+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #pool,			#protocol : #accessing,			#sourceCode : 'pool \r\t^pool',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1370' ],		#self : OmReference [ '1371' ],		#time : DateAndTime [ '2018-08-16T16:44:18.457327+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #port,			#protocol : #'private accessing',			#sourceCode : 'port \r\t^repository port',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1371' ],		#self : OmReference [ '1372' ],		#time : DateAndTime [ '2018-08-16T16:44:18.459183+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #reset,			#protocol : #accessing,			#sourceCode : 'reset\r\tself mongoUrlResolver reset.\r\tself resetPool.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #reset,			#protocol : #accessing,			#sourceCode : 'reset\r\tself resetPool',			#stamp : 'EstebanLorenzano 8/3/2016 16:36:38',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1372' ],		#self : OmReference [ '1373' ],		#time : DateAndTime [ '2018-08-16T16:44:18.460386+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #resetPool,			#protocol : #accessing,			#sourceCode : 'resetPool\r\t"Assume primaryMember is up-to-date"\r\tpool ifNotNil: [ pool flush ].\r\tpool := VOMongoSessionPool\r\t\thost: self mongoUrlResolver primaryMongoUrl host \r\t\tport: self mongoUrlResolver primaryMongoUrl port\r\t\tdatabase: repository databaseName\r\t\tusername: repository username \r\t\tpassword: repository password.\r\tpool size: repository poolSize.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #resetPool,			#protocol : #accessing,			#sourceCode : 'resetPool\r\tpool ifNotNil: [ pool flush ].\r\tpool := VOMongoSessionPool \r\t\thost: repository host \r\t\tport: repository port \r\t\tdatabase: repository databaseName\r\t\tusername: repository username\r\t\tpassword: repository password.\r\tpool size: repository poolSize.',			#stamp : 'MartinDias 8/11/2016 03:20',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1373' ],		#self : OmReference [ '1374' ],		#time : DateAndTime [ '2018-08-16T16:44:18.461677+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'retrieveClassOf:json:',			#protocol : #private,			#sourceCode : 'retrieveClassOf: aClass json: aDictionary\r\t| retrievedClass |\r\r\taDictionary \r\t\tat: VOMongoJSONSerializer fieldType \r\t\tifPresent: [ :type | \r\t\t\tretrievedClass :=  Smalltalk globals at: type asSymbol.\r\t\t\t(retrievedClass = aClass or: [ retrievedClass inheritsFrom: aClass persistentClass ])\r\t\t\t\tifFalse: [ \r\t\t\t\t\tVOMongoError signal: (\'Bad object requested ({1} does not inherits from {2})\' format: {retrievedClass name. aClass name })] ].\r\t\t\t\r\t^retrievedClass ifNil: [ aClass ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'retrieveClassOf:json:',			#protocol : #private,			#sourceCode : 'retrieveClassOf: aClass json: aDictionary\r\t| retrievedClass |\r\r\taDictionary \r\t\tat: VOMongoJSONSerializer fieldType \r\t\tifPresent: [ :type | \r\t\t\tretrievedClass :=  Smalltalk globals at: type asSymbol.\r\t\t\t(retrievedClass = aClass or: [ retrievedClass inheritsFrom: aClass persistentClass ])\r\t\t\t\tifFalse: [ \r\t\t\t\t\tVOMongoError signal: (\'Bad object requested ({1} does not inherits from {2})\' format: {retrievedClass name. aClass name })] ].\r\t\t\t\r\t^retrievedClass ifNil: [ aClass ]',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1374' ],		#self : OmReference [ '1375' ],		#time : DateAndTime [ '2018-08-16T16:44:18.462927+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'retrieveClassOf:json:',			#protocol : #'private retrieving',			#sourceCode : 'retrieveClassOf: aClass json: aDictionary\r\t| retrievedClass |\r\r\taDictionary \r\t\tat: VOMongoJSONSerializer fieldType \r\t\tifPresent: [ :type | \r\t\t\tretrievedClass :=  Smalltalk globals at: type asSymbol.\r\t\t\t(retrievedClass = aClass or: [ retrievedClass inheritsFrom: aClass persistentClass ])\r\t\t\t\tifFalse: [ \r\t\t\t\t\tVOMongoError signal: (\'Bad object requested ({1} does not inherits from {2})\' format: {retrievedClass name. aClass name })] ].\r\t\t\t\r\t^retrievedClass ifNil: [ aClass ]',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'retrieveClassOf:json:',			#protocol : #private,			#sourceCode : 'retrieveClassOf: aClass json: aDictionary\r\t| retrievedClass |\r\r\taDictionary \r\t\tat: VOMongoJSONSerializer fieldType \r\t\tifPresent: [ :type | \r\t\t\tretrievedClass :=  Smalltalk globals at: type asSymbol.\r\t\t\t(retrievedClass = aClass or: [ retrievedClass inheritsFrom: aClass persistentClass ])\r\t\t\t\tifFalse: [ \r\t\t\t\t\tVOMongoError signal: (\'Bad object requested ({1} does not inherits from {2})\' format: {retrievedClass name. aClass name })] ].\r\t\t\t\r\t^retrievedClass ifNil: [ aClass ]',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1375' ],		#self : OmReference [ '1376' ],		#time : DateAndTime [ '2018-08-16T16:44:18.464228+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'retrieveObjectOf:json:',			#protocol : #private,			#sourceCode : 'retrieveObjectOf: aClass json: aDictionary\r\t| id cachedVersion retrievedVersion object | \r\t\r\tid := aDictionary at: \'_id\'.\r\tobject := self cacheAt: id.\r\tcachedVersion := self cacheVersionAt: id.\r\tretrievedVersion := aDictionary \r\t\tat: VOMongoJSONSerializer fieldVersion\r\t\tifAbsent: [ 0 ].\r\t(object isNil or: [ cachedVersion ~= retrievedVersion ])\r\t\tifTrue: [\r\t\t\tobject ifNil: [ \r\t\t\t\tobject := (self retrieveClassOf: aClass json: aDictionary) basicNew.\r\t\t\t\tself cacheAt: id put: object ].\r\t\t\tself cacheAt: id putVersion: retrievedVersion.\r\t\t\tself materialize: object fromJSON: aDictionary ].\r\t^object',			#stamp : 'EstebanLorenzano 8/3/2016 16:36:38',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1376' ],		#self : OmReference [ '1377' ],		#time : DateAndTime [ '2018-08-16T16:44:18.465296+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'save:id:',			#protocol : #persistence,			#sourceCode : 'save: anObject id: anId\r\tself execute: [ self basicSave: anObject id: anId ]',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1377' ],		#self : OmReference [ '1378' ],		#time : DateAndTime [ '2018-08-16T16:44:18.466336+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepositoryResolver,				#isMetaSide : false			},			#name : #'update:serialized:withId:',			#protocol : #'private persistence',			#sourceCode : 'update: anObject serialized: jsonDictionary withId: aOID\r\tself pool withDatabase: [ :db |\r\t\t(self collectionAt: anObject class inDatabase: db) \r\t\t\treplace: {\'_id\'->aOID} asDictionary\r\t\t\twith: (jsonDictionary\r\t\t\t\tat: \'_id\' put: aOID;\r\t\t\t\tyourself) ].\r\r\t^aOID',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1378' ],		#self : OmReference [ '1379' ],		#time : DateAndTime [ '2018-08-16T16:44:18.468398+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoExecuteStrategy,				#isMetaSide : false			},			#name : #'visitMongoCommandError:',			#protocol : #'private - visiting',			#sourceCode : 'visitMongoCommandError: aMongoCommandError\r\r\t(aMongoCommandError isNotMaster or: [ aMongoCommandError isNotMasterAndSlaveOkIsFalse ])\r\t\tifTrue: [ resolver reset ]\r\t\tifFalse: [ resolver resetPool ].\r\r\t^ self retryOrResignal: aMongoCommandError',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoExecuteStrategy,				#isMetaSide : false			},			#name : #'visitMongoCommandError:',			#protocol : #'private - visiting',			#sourceCode : 'visitMongoCommandError: aMongoCommandError\r\r\tresolver resetPool.\r\t^ self retryOrResignal: aMongoCommandError',			#stamp : 'MartinDias 8/2/2016 08:49',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1379' ],		#self : OmReference [ '1380' ],		#time : DateAndTime [ '2018-08-16T16:44:18.469674+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoExecuteStrategy,				#isMetaSide : false			},			#name : #'visitMongoLastError:',			#protocol : #'private - visiting',			#sourceCode : 'visitMongoLastError: aMongoLastError\r\r\t(aMongoLastError isNotMaster or: [ aMongoLastError isNotPrimary ]) \r\t\tifTrue: [ resolver reset ]\r\t\tifFalse: [ resolver resetPool ].\r\r\t^ self retryOrResignal: aMongoLastError.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoExecuteStrategy,				#isMetaSide : false			},			#name : #'visitMongoLastError:',			#protocol : #'private - visiting',			#sourceCode : 'visitMongoLastError: aMongoLastError\r\r\tresolver resetPool.\r\t^ self retryOrResignal: aMongoLastError.',			#stamp : 'MartinDias 8/6/2016 02:13',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1380' ],		#self : OmReference [ '1381' ],		#time : DateAndTime [ '2018-08-16T16:44:18.470847+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoExecuteStrategy,				#isMetaSide : false			},			#name : #'visitMongoQueryError:',			#protocol : #'private - visiting',			#sourceCode : 'visitMongoQueryError: aMongoQueryError\r\r\t^ aMongoQueryError isNotMasterAndSlaveOkIsFalse\r\t\tifTrue: [\r\t\t\tresolver reset.\r\t\t\tself retryOrResignal: aMongoQueryError ]\r\t\tifFalse: [ "Unrecoverable error"\r\t\t\tVOMongoError signal: aMongoQueryError errorMessage ]',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoExecuteStrategy,				#isMetaSide : false			},			#name : #'visitMongoQueryError:',			#protocol : #'private - visiting',			#sourceCode : 'visitMongoQueryError: aMongoQueryError\r\t"Unrecoverable error"\r\t\r\t^ VOMongoError signal: aMongoQueryError errorMessage\r',			#stamp : 'MartinDias 8/6/2016 02:11',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1381' ],		#self : OmReference [ '1382' ],		#time : DateAndTime [ '2018-08-16T16:44:18.472005+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoRepository class',				#isMetaSide : true			},			#name : #'host:port:database:',			#protocol : #'instance creation',			#sourceCode : 'host: hostString port: portNumber database: databaseString\r\t^self \r\t\thost: hostString \r\t\tport: portNumber\r\t\tdatabase: databaseString\r\t\tusername: nil \r\t\tpassword: nil\r\t\t',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoRepository class',				#isMetaSide : true			},			#name : #'host:port:database:',			#protocol : #'instance creation',			#sourceCode : 'host: hostString port: portNumber database: databaseString\r\t^self \r\t\thost: hostString \r\t\tport: self defaultPort\r\t\tdatabase: databaseString\r\t\tusername: nil \r\t\tpassword: nil\r\t\t',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1382' ],		#self : OmReference [ '1383' ],		#time : DateAndTime [ '2018-08-16T16:44:18.473109+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoRepository class',				#isMetaSide : true			},			#name : #'host:port:database:username:password:',			#protocol : #'instance creation',			#sourceCode : 'host: hostString port: portNumber database: databaseString username: aUserName password: aPassword\r\t^ self\r\t\tmongoUrls: { \'mongodb://\', hostString, \':\', portNumber asString }\r\t\tdatabase: databaseString\r\t\tusername: aUserName\r\t\tpassword: aPassword',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoRepository class',				#isMetaSide : true			},			#name : #'host:port:database:username:password:',			#protocol : #'instance creation',			#sourceCode : 'host: hostString port: portNumber database: databaseString username: aUserName password: aPassword\r\t^self basicNew \r\t\tinitializeHost: hostString \r\t\t\tport: portNumber \r\t\t\tdatabase: databaseString\r\t\t\tusername: aUserName\r\t\t\tpassword: aPassword\r\t\tyourself',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1383' ],		#self : OmReference [ '1384' ],		#time : DateAndTime [ '2018-08-16T16:44:18.475878+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #flush,			#protocol : #reseting,			#sourceCode : 'flush\r\tself cache flush.\r\tself descriptionBuilder flush.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #flush,			#protocol : #reseting,			#sourceCode : 'flush\r\tself cache flush.\r\tself descriptionBuilder flush.',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1384' ],		#self : OmReference [ '1385' ],		#time : DateAndTime [ '2018-08-16T16:44:18.477367+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #flush,			#protocol : #accessing,			#sourceCode : 'flush\r\tself cache flush.\r\tself descriptionBuilder flush.',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #flush,			#protocol : #reseting,			#sourceCode : 'flush\r\tself cache flush.\r\tself descriptionBuilder flush.',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1385' ],		#self : OmReference [ '1386' ],		#time : DateAndTime [ '2018-08-16T16:44:18.478516+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #host,			#protocol : #accessing,			#sourceCode : 'host \r\t^host',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1386' ],		#self : OmReference [ '1387' ],		#time : DateAndTime [ '2018-08-16T16:44:18.480527+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \r\tsuper initialize.\r\tself forceEager: false.\r\tself wireProtocolEnabled: true.\r\tself ensuringCurrentOnSave: false.\r\tself ensuringCurrentReferencesOnQueries: false.\r\tself lazySynchronize: true.\r\tself versionGenerator: self class defaultVersionGenerator.\r\r\tself initializeCache.\r\tself initializeResolver.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \r\tsuper initialize.\r\tself forceEager: false.\r\tself versionGenerator: VOSeedVersionGenerator new.\r\tself initializeCache.\r\tself initializeResolver.\r',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1387' ],		#self : OmReference [ '1388' ],		#time : DateAndTime [ '2018-08-16T16:44:18.481629+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'initializeHost:port:database:username:password:',			#protocol : #initialization,			#sourceCode : 'initializeHost: hostString port: portNumber database: databaseString username: aUserName password: aPassword\r\thost := hostString.\r\tport := portNumber.\r\tdatabaseName := databaseString.\r\tusername := aUserName.\r\tpassword := aPassword.\r\tself initialize',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1388' ],		#self : OmReference [ '1389' ],		#time : DateAndTime [ '2018-08-16T16:44:18.482596+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #port,			#protocol : #accessing,			#sourceCode : 'port \r\t^port',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1389' ],		#self : OmReference [ '1390' ],		#time : DateAndTime [ '2018-08-16T16:44:18.483687+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\tsuper printOn: aStream.\r\r\taStream\r\t\tnextPut: $(.\r\tmongoUrls do: [:element | aStream print: element; space ].\r\taStream\r\t\tnextPut: $/;\r\t\tnextPutAll: databaseName asString;\r\t\tnextPut: $).\r',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\tsuper printOn: aStream.\r\r\taStream\r\t\tnextPut: $(;\r\t\tnextPutAll: host asString;\r\t\tnextPut: $:;\r\t\tnextPutAll: port asString;\r\t\tnextPut: $/;\r\t\tnextPutAll: databaseName asString;\r\t\tnextPut: $)',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1390' ],		#self : OmReference [ '1391' ],		#time : DateAndTime [ '2018-08-16T16:44:18.484772+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #reset,			#protocol : #reseting,			#sourceCode : 'reset\r\tresolver reset.\r\tself flush.',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #reset,			#protocol : #reseting,			#sourceCode : 'reset\r\tresolver reset.\r\tself flush.',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1391' ],		#self : OmReference [ '1392' ],		#time : DateAndTime [ '2018-08-16T16:44:18.485746+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #reset,			#protocol : #accessing,			#sourceCode : 'reset\r\tresolver reset.\r\tself flush.',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #reset,			#protocol : #reseting,			#sourceCode : 'reset\r\tresolver reset.\r\tself flush.',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1392' ],		#self : OmReference [ '1393' ],		#time : DateAndTime [ '2018-08-16T16:44:18.48684+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'resetDescriptionForClass:',			#protocol : #reseting,			#sourceCode : 'resetDescriptionForClass: aClass\r\tself descriptionBuilder removeDescriptionOf: aClass',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'resetDescriptionForClass:',			#protocol : #reseting,			#sourceCode : 'resetDescriptionForClass: aClass\r\tself descriptionBuilder removeDescriptionOf: aClass',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1393' ],		#self : OmReference [ '1394' ],		#time : DateAndTime [ '2018-08-16T16:44:18.487771+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'resetDescriptionForClass:',			#protocol : #accessing,			#sourceCode : 'resetDescriptionForClass: aClass\r\tself descriptionBuilder removeDescriptionOf: aClass',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'resetDescriptionForClass:',			#protocol : #reseting,			#sourceCode : 'resetDescriptionForClass: aClass\r\tself descriptionBuilder removeDescriptionOf: aClass',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1394' ],		#self : OmReference [ '1395' ],		#time : DateAndTime [ '2018-08-16T16:44:18.489684+02:00' ],		#trigger : OmReference [ '1218' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'save:id:',			#protocol : #persistence,			#sourceCode : 'save: anObject id: idObject\r\tself \r\t\tsave: anObject \r\t\tid: idObject \r\t\tensuringCurrent: self isEnsuringCurrentOnSave',			#stamp : ' 8/16/2018 00:08:54',			#package : #Voyage-Mongo-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoRepository,				#isMetaSide : false			},			#name : #'save:id:',			#protocol : #persistence,			#sourceCode : 'save: anObject id: idObject\r\tresolver save: anObject id: idObject',			#stamp : 'EstebanLorenzano 8/3/2016 14:02:26',			#package : #Voyage-Mongo-Core		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:18.613625+02:00' ],		#prior : OmReference [ '1395' ],		#self : OmReference [ '1396' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Voyage-Mongo-Tests-EstebanLorenzano.1471364195'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1396' ],		#self : OmReference [ '1397' ],		#time : DateAndTime [ '2018-08-16T16:44:18.717038+02:00' ],		#trigger : @3	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VORepositoryTest',				#traitCompositionSource : '{}',				#definitionSource : 'VORepositoryTest subclass: #VOMongoTest\r\tinstanceVariableNames: \'repository\'\r\tclassVariableNames: \'MongoHost\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests-Core\''			},			#name : #VOMongoTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoTest,						#isMetaSide : false					},					#name : #repository,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoTest,					#isMetaSide : false				},				#parent : @7,				#content : 'These tests hits a real MongoDB database. ',				#stamp : 'EstebanLorenzano 8/3/2016 17:43'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoTest,						#isMetaSide : false					},					#name : #MongoHost,					#parent : @7				}			],			#category : #Voyage-Mongo-Tests-Core,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VORepositoryTest',				#traitCompositionSource : '{}',				#definitionSource : 'VORepositoryTest subclass: #VOMongoTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'MongoHost\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests-Core\''			},			#name : #VOMongoTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoTest,					#isMetaSide : false				},				#parent : @25,				#content : 'These tests hits a real MongoDB database. ',				#stamp : 'EstebanLorenzano 8/3/2016 17:43'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoTest,						#isMetaSide : false					},					#name : #MongoHost,					#parent : @25				}			],			#category : #Voyage-Mongo-Tests-Core,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1397' ],		#self : OmReference [ '1398' ],		#time : DateAndTime [ '2018-08-16T16:44:19.103085+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Voyage-Mongo-Tests-Core,		#newCategory : 'Voyage-Mongo-Tests',		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VORepositoryTest',				#traitCompositionSource : '{}',				#definitionSource : 'VORepositoryTest subclass: #VOMongoTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests\''			},			#name : #VOMongoTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoTest,					#isMetaSide : false				},				#parent : @8,				#content : 'These tests hits a real MongoDB database. ',				#stamp : 'EstebanLorenzano 8/3/2016 17:43'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1398' ],		#self : OmReference [ '1399' ],		#time : DateAndTime [ '2018-08-16T16:44:19.152328+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Voyage-Mongo-Tests-Core,		#newCategory : 'Voyage-Mongo-Tests',		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOJSONSerializerTest',				#traitCompositionSource : '{}',				#definitionSource : 'VOJSONSerializerTest subclass: #VOMongoSerializerTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests\''			},			#name : #VOMongoSerializerTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoSerializerTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoSerializerTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoSerializerTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1399' ],		#self : OmReference [ '1400' ],		#time : DateAndTime [ '2018-08-16T16:44:19.156856+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Voyage-Mongo-Tests-Core,		#newCategory : 'Voyage-Mongo-Tests',		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOJSONMaterializerTest',				#traitCompositionSource : '{}',				#definitionSource : 'VOJSONMaterializerTest subclass: #VOMongoMaterializerTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests\''			},			#name : #VOMongoMaterializerTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoMaterializerTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoMaterializerTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoMaterializerTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1400' ],		#self : OmReference [ '1401' ],		#time : DateAndTime [ '2018-08-16T16:44:19.163257+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestResource',				#traitCompositionSource : '{}',				#definitionSource : 'TestResource subclass: #VOMongoTestResource\r\tinstanceVariableNames: \'repository\'\r\tclassVariableNames: \'MongoHost\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #VOMongoTestResource,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoTestResource,						#isMetaSide : false					},					#name : #repository,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoTestResource class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoTestResource class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoTestResource,					#isMetaSide : false				},				#parent : @8,				#content : 'An SUnit test resource for testing a voyage mongo repository to be used for the different tests.\r\rInstance Variables\r\trepository:\t\t<VOMongoRepository>\r\rrepository\r\t- a repository\r',				#stamp : 'TorstenBergmann 3/4/2015 20:43'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoTestResource,						#isMetaSide : false					},					#name : #MongoHost,					#parent : @8				}			],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'An SUnit test resource for testing a voyage mongo repository to be used for the different tests.\r\rInstance Variables\r\trepository:\t\t<VOMongoRepository>\r\rrepository\r\t- a repository\r',		#newStamp : 'TorstenBergmann 3/4/2015 20:43'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1401' ],		#self : OmReference [ '1402' ],		#time : DateAndTime [ '2018-08-16T16:44:19.166422+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestResource',				#traitCompositionSource : '{}',				#definitionSource : 'TestResource subclass: #VOMongoTestResource\r\tinstanceVariableNames: \'repository\'\r\tclassVariableNames: \'MongoHost\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests\''			},			#name : #VOMongoTestResource,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoTestResource,						#isMetaSide : false					},					#name : #repository,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoTestResource class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoTestResource class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoTestResource,					#isMetaSide : false				},				#parent : @8,				#content : 'An SUnit test resource for testing a voyage mongo repository to be used for the different tests.\r\rInstance Variables\r\trepository:\t\t<VOMongoRepository>\r\rrepository\r\t- a repository\r',				#stamp : 'TorstenBergmann 3/4/2015 20:43'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoTestResource,						#isMetaSide : false					},					#name : #MongoHost,					#parent : @8				}			],			#category : #Voyage-Mongo-Tests,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1402' ],		#self : OmReference [ '1403' ],		#time : DateAndTime [ '2018-08-16T16:44:19.195934+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoReplicationTestResources class',				#isMetaSide : true			},			#name : #newRepositoryOnOffline,			#protocol : #'*Voyage-Mongo-Tests-Extensions',			#sourceCode : 'newRepositoryOnOffline\r\r\t^ self newRepositoryOn: { self mongoUrlOffline }',			#stamp : 'MartinDias 6/25/2016 21:19',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1403' ],		#self : OmReference [ '1404' ],		#time : DateAndTime [ '2018-08-16T16:44:19.200401+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoReplicationTestResources class',				#isMetaSide : true			},			#name : #newRepositoryOnC,			#protocol : #'*Voyage-Mongo-Tests-Extensions',			#sourceCode : 'newRepositoryOnC\r\r\t^ self newRepositoryOn: { self mongoUrlC }',			#stamp : 'MartinDias 6/25/2016 21:19',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1404' ],		#self : OmReference [ '1405' ],		#time : DateAndTime [ '2018-08-16T16:44:19.203032+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoReplicationTestResources class',				#isMetaSide : true			},			#name : #newRepositoryOnB,			#protocol : #'*Voyage-Mongo-Tests-Extensions',			#sourceCode : 'newRepositoryOnB\r\r\t^ self newRepositoryOn: { self mongoUrlB }',			#stamp : 'MartinDias 6/25/2016 21:19',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1405' ],		#self : OmReference [ '1406' ],		#time : DateAndTime [ '2018-08-16T16:44:19.205287+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoReplicationTestResources class',				#isMetaSide : true			},			#name : #newRepositoryOnAll,			#protocol : #'*Voyage-Mongo-Tests-Extensions',			#sourceCode : 'newRepositoryOnAll\r\r\t^ self newRepositoryOn: self allMongoUrls',			#stamp : 'MartinDias 6/25/2016 21:18',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1406' ],		#self : OmReference [ '1407' ],		#time : DateAndTime [ '2018-08-16T16:44:19.207632+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoReplicationTestResources class',				#isMetaSide : true			},			#name : #newRepositoryOnA,			#protocol : #'*Voyage-Mongo-Tests-Extensions',			#sourceCode : 'newRepositoryOnA\r\r\t^ self newRepositoryOn: { self mongoUrlA }',			#stamp : 'MartinDias 6/25/2016 21:19',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1407' ],		#self : OmReference [ '1408' ],		#time : DateAndTime [ '2018-08-16T16:44:19.210472+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MongoReplicationTestResources class',				#isMetaSide : true			},			#name : #'newRepositoryOn:',			#protocol : #'*Voyage-Mongo-Tests-Extensions',			#sourceCode : 'newRepositoryOn: mongoUrls\r\r\t^ (VOMongoRepository \r\t\tmongoUrls: mongoUrls\r\t\tdatabase: self databaseName)\r\t\tenableReplication;\r\t\tyourself\r\t\t',			#stamp : 'MartinDias 6/25/2016 21:23',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1408' ],		#self : OmReference [ '1409' ],		#time : DateAndTime [ '2018-08-16T16:44:19.212221+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MongoReplicationTestResources class\r\tinstanceVariableNames: \'isTestScenarioAvailable\''			},			#name : #'MongoReplicationTestResources class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGClassInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #'MongoReplicationTestResources class',						#isMetaSide : true					},					#name : #isTestScenarioAvailable,					#parent : @8				}			],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Object',					#traitCompositionSource : '{}',					#definitionSource : 'Object subclass: #MongoReplicationTestResources\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Mongo-Tests-Core-Replication\''				},				#name : #MongoReplicationTestResources,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #MongoReplicationTestResources,						#isMetaSide : false					},					#parent : @15,					#content : 'I provide methods that are useful to  set up and manage the replica set test resources.  Follow my guide to prepare replication tests scenario. See my class-side methods.',					#stamp : 'MartinDias 6/17/2016 01:04'				},				#classVariables : OrderedCollection [ ],				#category : #Mongo-Tests-Core-Replication,				#package : #Mongo-Tests-Core,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #'*Voyage-Mongo-Tests-Extensions'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1409' ],		#self : OmReference [ '1410' ],		#time : DateAndTime [ '2018-08-16T16:44:19.213426+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollectorTest,				#isMetaSide : false			},			#name : #testAllRootsFromAnOwnerWithTwoDogs,			#protocol : #tests,			#sourceCode : 'testAllRootsFromAnOwnerWithTwoDogs\r\t"Note the owner hasn\'t a one-to-many relation to pets"\r\t\r\t| owner results aDog anotherDog |\r\taDog := VOTestDog new name: \'cometa\'; yourself.\r\tanotherDog := VOTestDog new name: \'eli\'; yourself.\r\towner := \r\t\tVOTestOwner new \r\t\t\tname: \'foo\'; \r\t\t\taddPet: aDog;\r\t\t\taddPet: anotherDog;\r\t\t\tyourself.\r\r\tresults := VOCollector allRootsFrom: owner in: repository.\r\t\r\tself assert: results asBag equals: {owner} asBag.',			#stamp : 'MartinDias 10/14/2016 20:30',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1410' ],		#self : OmReference [ '1411' ],		#time : DateAndTime [ '2018-08-16T16:44:19.215499+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollectorTest,				#isMetaSide : false			},			#name : #testAllRootsFromAPilotWithPastPets,			#protocol : #tests,			#sourceCode : 'testAllRootsFromAPilotWithPastPets\r\t"The pilot has a one-to-many relation to pastPets"\r\r\t| pilot results dog cat |\r\tdog := VOTestDog new name: \'cometa\'; yourself.\r\tcat := VOTestCat new name: \'maus\'; yourself.\r\tpilot := \r\t\tVOTestPilot new \r\t\t\tname: \'foo\'; \r\t\t\tpastPets: {dog. cat};\r\t\t\tyourself.\r\r\tresults := VOCollector allRootsFrom: pilot in: repository.\r\t\r\tself assert: results asBag equals: {pilot. dog. cat} asBag.',			#stamp : 'MartinDias 10/14/2016 20:30',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1411' ],		#self : OmReference [ '1412' ],		#time : DateAndTime [ '2018-08-16T16:44:19.217365+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollectorTest,				#isMetaSide : false			},			#name : #testAllRootsFromAPilot,			#protocol : #tests,			#sourceCode : 'testAllRootsFromAPilot\r\t"Test that VOMongoShadowDescription is not collected"\r\r\t| pilot results |\t\r\tpilot := VOTestPilot new.\r\tpilot keywords add: \'Smalltalk\'.\r\tpilot keywords add: \'Seaside\'.\r\r\tresults := VOCollector allRootsFrom: pilot in: repository.\r\t\r\tself assert: results asBag equals: {pilot} asBag.',			#stamp : 'MartinDias 10/14/2016 20:28',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1412' ],		#self : OmReference [ '1413' ],		#time : DateAndTime [ '2018-08-16T16:44:19.220187+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollectorTest,				#isMetaSide : false			},			#name : #testAllRootsFromADogWithAnOwnerAndAnotherDog,			#protocol : #tests,			#sourceCode : 'testAllRootsFromADogWithAnOwnerAndAnotherDog\r\t"Note that dog has a one-to-one relation to the owner, BUT the owner hasn\'t a one-to-many relation to pets."\r\r\t| owner results aDog anotherDog |\r\taDog := VOTestDog new name: \'cometa\'; yourself.\r\tanotherDog := VOTestCat new name: \'maus\'; yourself.\r\towner := \r\t\tVOTestOwner new \r\t\t\tname: \'foo\'; \r\t\t\taddPet: aDog;\r\t\t\taddPet: anotherDog;\r\t\t\tyourself.\r\r\tresults := VOCollector allRootsFrom: aDog in: repository.\r\t\r\tself assert: results asBag equals: {aDog. owner} asBag.',			#stamp : 'MartinDias 10/14/2016 20:28',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1413' ],		#self : OmReference [ '1414' ],		#time : DateAndTime [ '2018-08-16T16:44:19.221994+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollectorTest,				#isMetaSide : false			},			#name : #testAllRootsFromADogWithAnOwner,			#protocol : #tests,			#sourceCode : 'testAllRootsFromADogWithAnOwner\r\t"Note that dog has a one-to-one relation to the owner."\r\r\t| dog owner results |\r\tdog := VOTestDog new name: \'cometa\'; yourself.\r\towner := \r\t\tVOTestOwner new \r\t\t\tname: \'foo\'; \r\t\t\taddPet: dog;\r\t\t\tyourself.\r\r\tresults := VOCollector allRootsFrom: dog in: repository.\r\t\r\tself assert: results asBag equals: {dog. owner} asBag.',			#stamp : 'MartinDias 10/14/2016 20:28',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1414' ],		#self : OmReference [ '1415' ],		#time : DateAndTime [ '2018-08-16T16:44:19.223906+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollectorTest,				#isMetaSide : false			},			#name : #testAllRootsFromADogChain,			#protocol : #tests,			#sourceCode : 'testAllRootsFromADogChain\r\t"The dog has a one-to-one relation to the owner."\r\t\r\t| aDog anotherDog yetAnotherDog results |\r\taDog := VOTestDog new name: \'cometa\'; yourself.\r\tanotherDog := VOTestDog new name: \'eli\'; yourself.\r\tyetAnotherDog := VOTestDog new name: \'pepe\'; yourself.\r\r\t"create the chain of dogs"\r\tanotherDog owner: aDog.\r\tyetAnotherDog owner: anotherDog.\r\r\tresults := VOCollector allRootsFrom: yetAnotherDog in: repository.\r\t\r\tself assert: results asBag equals: {aDog. anotherDog. yetAnotherDog} asBag.',			#stamp : 'MartinDias 10/14/2016 21:36',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1415' ],		#self : OmReference [ '1416' ],		#time : DateAndTime [ '2018-08-16T16:44:19.225733+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollectorTest,				#isMetaSide : false			},			#name : #testAllRootsFromACyclicGraph,			#protocol : #tests,			#sourceCode : 'testAllRootsFromACyclicGraph\r\t"The dog has a one-to-one relation to the owner (a pilot), and the pilot has a one-to-many relation to pets (the dog)."\r\t\r\t| pilot results dog |\r\tdog := VOTestDog new name: \'cometa\'; yourself.\r\tpilot := \r\t\tVOTestPilot new \r\t\t\tname: \'foo\'; \r\t\t\tpastPets: {dog};\r\t\t\tyourself.\r\tdog owner: pilot.\t"Well, pilot is not an owner... but this way the cycle is created."\r\r\tresults := VOCollector allRootsFrom: dog in: repository.\r\t\r\tself assert: results asBag equals: {pilot. dog} asBag.',			#stamp : 'MartinDias 10/14/2016 21:28',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1416' ],		#self : OmReference [ '1417' ],		#time : DateAndTime [ '2018-08-16T16:44:19.227559+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollectorTest,				#isMetaSide : false			},			#name : #testAllOtherRootsFromADogChain,			#protocol : #tests,			#sourceCode : 'testAllOtherRootsFromADogChain\r\t"The dog has a one-to-one relation to the owner."\r\t\r\t| aDog anotherDog yetAnotherDog results |\r\taDog := VOTestDog new name: \'cometa\'; yourself.\r\tanotherDog := VOTestDog new name: \'eli\'; yourself.\r\tyetAnotherDog := VOTestDog new name: \'pepe\'; yourself.\r\r\t"create the chain of dogs"\r\tanotherDog owner: aDog.\r\tyetAnotherDog owner: anotherDog.\r\r\tresults := VOCollector allOtherRootsFrom: yetAnotherDog in: repository.\r\t\r\tself assert: results asBag equals: {aDog. anotherDog} asBag.',			#stamp : 'MartinDias 10/17/2016 18:44',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1417' ],		#self : OmReference [ '1418' ],		#time : DateAndTime [ '2018-08-16T16:44:19.229528+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOJSONVisitorTest',				#traitCompositionSource : '{}',				#definitionSource : 'VOJSONVisitorTest subclass: #VOCollectorTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests-Core\''			},			#name : #VOCollectorTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOCollectorTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOCollectorTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOCollectorTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Core,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1418' ],		#self : OmReference [ '1419' ],		#time : DateAndTime [ '2018-08-16T16:44:19.229942+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOCollectorTest,				#isMetaSide : false			},			#name : #newRepository,			#protocol : #private,			#sourceCode : 'newRepository\r\t^ VOMongoRepository basicNew initializeCache',			#stamp : 'MartinDias 10/14/2016 19:45',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1419' ],		#self : OmReference [ '1420' ],		#time : DateAndTime [ '2018-08-16T16:44:19.232081+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOJSONVisitorTest',				#traitCompositionSource : '{}',				#definitionSource : 'VOJSONVisitorTest subclass: #VOCollectorTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests-Core\''			},			#name : #VOCollectorTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOCollectorTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOCollectorTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOCollectorTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Core,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #private	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1420' ],		#self : OmReference [ '1421' ],		#time : DateAndTime [ '2018-08-16T16:44:19.235963+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOJSONVisitorTest',				#traitCompositionSource : '{}',				#definitionSource : 'VOJSONVisitorTest subclass: #VOCollectorTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Tests-Core\''			},			#name : #VOCollectorTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOCollectorTest class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOCollectorTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOCollectorTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Core,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1421' ],		#self : OmReference [ '1422' ],		#time : DateAndTime [ '2018-08-16T16:44:19.237412+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #testUpdate,			#protocol : #tests,			#sourceCode : 'testUpdate\r\t"Test update after stepping down the primary node. Note save operation is implemented directly with a Mongo wired protocol"\r\r\t| cat |\r\tcat := VOTestCat new.\r\trepository save: cat.\r\t\r\tself testOn: [ \r\t\tcat name: \'charly\', UUID new asString36.\r\t\trepository save: cat ]\r',			#stamp : 'MartinDias 6/15/2016 09:57',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1422' ],		#self : OmReference [ '1423' ],		#time : DateAndTime [ '2018-08-16T16:44:19.240081+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #testSelectOneWhere,			#protocol : #tests,			#sourceCode : 'testSelectOneWhere\r\tself testOn: [ repository selectOne: VOTestCat where: Dictionary new ]',			#stamp : 'MartinDias 6/25/2016 00:17',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1423' ],		#self : OmReference [ '1424' ],		#time : DateAndTime [ '2018-08-16T16:44:19.241912+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #testSelectManyWhere,			#protocol : #tests,			#sourceCode : 'testSelectManyWhere\r\tself testOn: [ repository selectMany: VOTestCat where: Dictionary new ]',			#stamp : 'MartinDias 6/25/2016 00:59',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1424' ],		#self : OmReference [ '1425' ],		#time : DateAndTime [ '2018-08-16T16:44:19.243739+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #testSelectAll,			#protocol : #tests,			#sourceCode : 'testSelectAll\r\tself testOn: [ repository selectAll: VOTestCat ]',			#stamp : 'MartinDias 6/24/2016 20:24',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1425' ],		#self : OmReference [ '1426' ],		#time : DateAndTime [ '2018-08-16T16:44:19.245894+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #testRemoveCollection,			#protocol : #tests,			#sourceCode : 'testRemoveCollection\r\r\t| cat |\r\tself \r\t\tsetUpWith: [ \t\t\t\r\t\t\tcat := VOTestCat new.\r\t\t\trepository save: cat ]\r\t\ttestOn: [ \r\t\t\trepository removeCollection: VOTestCat ]\r\t\tacceptableTimeToFail:  self acceptableTimeToFail',			#stamp : 'MartinDias 8/17/2016 01:13',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1426' ],		#self : OmReference [ '1427' ],		#time : DateAndTime [ '2018-08-16T16:44:19.247761+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #testRemoveAll,			#protocol : #tests,			#sourceCode : 'testRemoveAll\r\t"Test removeAll after stepping down the primary node."\r\r\t| cat |\r\tself \r\t\tsetUpWith: [ \t\t\t\r\t\t\tcat := VOTestCat new.\r\t\t\trepository save: cat ]\r\t\ttestOn: [ \r\t\t\trepository removeAll: VOTestCat ]\r\t\tacceptableTimeToFail:  self acceptableTimeToFail ',			#stamp : 'MartinDias 8/17/2016 01:13',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1427' ],		#self : OmReference [ '1428' ],		#time : DateAndTime [ '2018-08-16T16:44:19.249569+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\t"Test remove after stepping down the primary node."\r\r\t| cat |\r\tself \r\t\tsetUpWith: [ \t\t\t\r\t\t\tcat := VOTestCat new.\r\t\t\trepository save: cat ]\r\t\ttestOn: [ \r\t\t\trepository remove: cat ]\r\t\tacceptableTimeToFail:  self acceptableTimeToFail ',			#stamp : 'MartinDias 8/17/2016 01:12',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1428' ],		#self : OmReference [ '1429' ],		#time : DateAndTime [ '2018-08-16T16:44:19.25142+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #'testOn:acceptableTimeToFail:',			#protocol : #tests,			#sourceCode : 'testOn: block acceptableTimeToFail: acceptableTimeToFail\r\tself \r\t\tsetUpWith: [  ] \r\t\ttestOn: block \r\t\tacceptableTimeToFail: acceptableTimeToFail',			#stamp : 'MartinDias 8/17/2016 01:15',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1429' ],		#self : OmReference [ '1430' ],		#time : DateAndTime [ '2018-08-16T16:44:19.253216+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #'testOn:',			#protocol : #tests,			#sourceCode : 'testOn: block\r\tself \r\t\ttestOn: block \r\t\tacceptableTimeToFail: self acceptableTimeToFail',			#stamp : 'MartinDias 6/25/2016 01:48',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1430' ],		#self : OmReference [ '1431' ],		#time : DateAndTime [ '2018-08-16T16:44:19.26083+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #testInsert,			#protocol : #tests,			#sourceCode : 'testInsert\r\t"Test insert after stepping down the primary node. Note save operation is implemented directly with a Mongo wired protocol"\r\r\tself testOn: [ repository save: VOTestCat new ]\r',			#stamp : 'MartinDias 6/15/2016 09:52',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1431' ],		#self : OmReference [ '1432' ],		#time : DateAndTime [ '2018-08-16T16:44:19.262939+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #testDropDatabase,			#protocol : #tests,			#sourceCode : 'testDropDatabase\r\r\tself \r\t\tsetUpWith: [ repository save: VOTestCat new ]\r\t\ttestOn: [ repository dropDatabase ]\r\t\tacceptableTimeToFail: self acceptableTimeToFail * 2 "this operation takes longer than others"',			#stamp : 'MartinDias 8/17/2016 01:07',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1432' ],		#self : OmReference [ '1433' ],		#time : DateAndTime [ '2018-08-16T16:44:19.264982+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #testCountWhere,			#protocol : #tests,			#sourceCode : 'testCountWhere\r\tself testOn: [ repository count: VOTestCat where: Dictionary new ]',			#stamp : 'MartinDias 6/25/2016 01:44',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1433' ],		#self : OmReference [ '1434' ],		#time : DateAndTime [ '2018-08-16T16:44:19.266745+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #testCount,			#protocol : #tests,			#sourceCode : 'testCount\r\t"Test count after stepping down the primary node. Note count operation is implemented with a Mongo>>command:"\r\r\tself testOn: [ repository count: VOTestCat ]',			#stamp : 'MartinDias 6/15/2016 09:52',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1434' ],		#self : OmReference [ '1435' ],		#time : DateAndTime [ '2018-08-16T16:44:19.268524+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #'setUpWith:testOn:acceptableTimeToFail:',			#protocol : #tests,			#sourceCode : 'setUpWith: setUpBlock testOn: block acceptableTimeToFail: acceptableTimeToFail\r\r\t"It will use A as primary, given the replica set configuration"\r\t| timeToFail |\r\tself assertPrimaryMongoIsA.\r\tsetUpBlock value.\r\tblock value.\r\tself assertPrimaryMongoIsA.\r\tsetUpBlock value.\r\r\t"Now, step down member A, current primary."\r\tMongoReplicationTestResources stepDownA: 15 seconds.\r\r\t"At this point, any operation should fail since there is no primary member until elections are performed."\t\r\t1 second wait.\r\tself assertPrimaryMongoIsA.\r\ttimeToFail := [self should: block raise: VOMongoConnectionError] timeToRun.\t\r\tself assertPrimaryMongoIsC. "There is no primary then repository chooses the initial url, used in #setUp."\r\tself\r\t\tassert: timeToFail <= acceptableTimeToFail\r\t\tdescription: timeToFail asString, \': too much time to signal error when there is no available mongo instance.\'.\r\r\t"Member B is elected as primary"\r\t14 seconds wait.\r\tself assertPrimaryMongoIsC.\r\tblock value.\r\tself assertPrimaryMongoIsB.\r\tsetUpBlock value.\r\r\t"Now, wait a bit and then check A is up again and the new primary (it has higher priority than B)."\r\t10 seconds wait.\r\tself assertPrimaryMongoIsB.\r\tblock value.\r\tself assertPrimaryMongoIsA.\r',			#stamp : 'MartinDias 8/17/2016 01:05',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1435' ],		#self : OmReference [ '1436' ],		#time : DateAndTime [ '2018-08-16T16:44:19.270315+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #tests,			#sourceCode : 'setUp\r\tsuper setUp.\r\t\r\trepository := MongoReplicationTestResources newRepositoryOnC.\r\trepository debug: true.\r',			#stamp : 'MartinDias 6/24/2016 18:18',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1436' ],		#self : OmReference [ '1437' ],		#time : DateAndTime [ '2018-08-16T16:44:19.274008+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : 'TMongoReplicationTestCase',				#definitionSource : 'TestCase subclass: #VOMongoReplicationStepDownScenarioTest\r\tuses: TMongoReplicationTestCase\r\tinstanceVariableNames: \'collection repository\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests-Replication\''			},			#name : #VOMongoReplicationStepDownScenarioTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationStepDownScenarioTest,						#isMetaSide : false					},					#name : #collection,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationStepDownScenarioTest,						#isMetaSide : false					},					#name : #repository,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : 'TMongoReplicationTestCase classTrait',					#definitionSource : 'VOMongoReplicationStepDownScenarioTest class\r\tuses: TMongoReplicationTestCase classTrait\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoReplicationStepDownScenarioTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoReplicationStepDownScenarioTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Replication,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1437' ],		#self : OmReference [ '1438' ],		#time : DateAndTime [ '2018-08-16T16:44:19.276051+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #assertPrimaryMongoIsC,			#protocol : #running,			#sourceCode : 'assertPrimaryMongoIsC\r\tself \r\t\tassert: repository primaryMongoUrl \r\t\tequals: MongoReplicationTestResources mongoUrlC',			#stamp : 'MartinDias 6/25/2016 01:16',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1438' ],		#self : OmReference [ '1439' ],		#time : DateAndTime [ '2018-08-16T16:44:19.278575+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #assertPrimaryMongoIsB,			#protocol : #running,			#sourceCode : 'assertPrimaryMongoIsB\r\tself \r\t\tassert: repository primaryMongoUrl \r\t\tequals: MongoReplicationTestResources mongoUrlB',			#stamp : 'MartinDias 6/16/2016 22:44',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1439' ],		#self : OmReference [ '1440' ],		#time : DateAndTime [ '2018-08-16T16:44:19.280534+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #assertPrimaryMongoIsA,			#protocol : #running,			#sourceCode : 'assertPrimaryMongoIsA\r\tself \r\t\tassert: repository primaryMongoUrl \r\t\tequals: MongoReplicationTestResources mongoUrlA',			#stamp : 'MartinDias 6/16/2016 22:44',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1440' ],		#self : OmReference [ '1441' ],		#time : DateAndTime [ '2018-08-16T16:44:19.282455+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationStepDownScenarioTest,				#isMetaSide : false			},			#name : #acceptableTimeToFail,			#protocol : #running,			#sourceCode : 'acceptableTimeToFail\r\t^ 4 seconds',			#stamp : 'MartinDias 6/25/2016 01:05',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1441' ],		#self : OmReference [ '1442' ],		#time : DateAndTime [ '2018-08-16T16:44:19.288065+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : 'TMongoReplicationTestCase',				#definitionSource : 'TestCase subclass: #VOMongoReplicationStepDownScenarioTest\r\tuses: TMongoReplicationTestCase\r\tinstanceVariableNames: \'collection repository\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Tests-Replication\''			},			#name : #VOMongoReplicationStepDownScenarioTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOMongoReplicationStepDownScenarioTest,						#isMetaSide : false					},					#name : #collection,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOMongoReplicationStepDownScenarioTest,						#isMetaSide : false					},					#name : #repository,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : 'TMongoReplicationTestCase classTrait',					#definitionSource : 'VOMongoReplicationStepDownScenarioTest class\r\tuses: TMongoReplicationTestCase classTrait\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoReplicationStepDownScenarioTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoReplicationStepDownScenarioTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Replication,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1442' ],		#self : OmReference [ '1443' ],		#time : DateAndTime [ '2018-08-16T16:44:19.289014+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationBasicTest,				#isMetaSide : false			},			#name : #testInitialMongoOffline,			#protocol : #tests,			#sourceCode : 'testInitialMongoOffline\r\t"The repository shouldn\'t error at creation time but only on an operation that couldn\'t complete."\r\t\r\tself \r\t\tshouldnt: [ \r\t\t\trepository := MongoReplicationTestResources newRepositoryOnOffline.\r\t\t\t5 seconds wait ]\r\t\traise: Error.\r\t\r\tself should: [ repository save: VOTestCat new ] raise: VOMongoConnectionError.\r',			#stamp : 'MartinDias 6/16/2016 22:44',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1443' ],		#self : OmReference [ '1444' ],		#time : DateAndTime [ '2018-08-16T16:44:19.290899+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationBasicTest,				#isMetaSide : false			},			#name : #testDiscoverMongoUrls,			#protocol : #tests,			#sourceCode : 'testDiscoverMongoUrls\r\t"The repository can discover replica-set mongodb connections that were not specified explicitely in the initial list of mongoUrls."\r\r\trepository := MongoReplicationTestResources newRepositoryOnB.\r\r\t"Write operations fail on initial member since it\'s secondary, but the error is catched and primary member is discovered."\r\trepository save: VOTestCat new.\r\tself assert: repository primaryMongoUrl equals: MongoReplicationTestResources mongoUrlA.\r\t\r\tself \r\t\tassert: repository knownMongoUrls asSet\r\t\tequals: MongoReplicationTestResources allMongoUrls asSet.',			#stamp : 'MartinDias 6/24/2016 00:49',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1444' ],		#self : OmReference [ '1445' ],		#time : DateAndTime [ '2018-08-16T16:44:19.292689+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationBasicTest,				#isMetaSide : false			},			#name : #testCreateWithMongoUrls,			#protocol : #tests,			#sourceCode : 'testCreateWithMongoUrls\r\t"The repository can be created with a list of initial mongodb\'s urls."\r\r\t| arrayOfMongoUrls |\r\tarrayOfMongoUrls := MongoReplicationTestResources allMongoUrls.\r\r\trepository := VOMongoRepository \r\t\tmongoUrls: arrayOfMongoUrls\r\t\tdatabase: \'Voyage-Tests\'.\r\t\r\t"read operation"\r\trepository selectAll: VOTestCat.',			#stamp : 'MartinDias 6/24/2016 00:49',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1445' ],		#self : OmReference [ '1446' ],		#time : DateAndTime [ '2018-08-16T16:44:19.294415+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationBasicTest,				#isMetaSide : false			},			#name : #testConcurrentReset,			#protocol : #tests,			#sourceCode : 'testConcurrentReset\r\r\t| numberOfResets timeToSerialResets semaphores timeToConcurrentResets |\r\tnumberOfResets := 7.\r\tsemaphores := (1 to: numberOfResets) collect: [:i | Semaphore new].\r\trepository := MongoReplicationTestResources newRepositoryOnA.\r\trepository debug: true.\r\r\t"Measure time to concurrently reset."\r\ttimeToConcurrentResets := [\r\t\tsemaphores do: [ :each | [ [repository reset] ensure: [each signal] ] fork ].\t\r\t\tsemaphores do: [ :each | each waitTimeoutSeconds: 1 ].\r\t\t] timeToRun.\r\r\t"Measure time to serially reset."\r\ttimeToSerialResets := [\r\t\tsemaphores do: [ :each | [repository reset] ensure: [each signal] ].\r\t\tsemaphores do: [ :each | each waitTimeoutSeconds: 1 ].\r\t\t] timeToRun.\r\t\r\t"Concurrent resets should be visibly faster since basicReset is executed only once (ideally)."\r\tself assert: timeToSerialResets asMilliSeconds > timeToConcurrentResets asMilliSeconds.',			#stamp : 'MartinDias 6/24/2016 17:47',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1446' ],		#self : OmReference [ '1447' ],		#time : DateAndTime [ '2018-08-16T16:44:19.29768+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : 'TMongoReplicationTestCase',				#definitionSource : 'TestCase subclass: #VOMongoReplicationBasicTest\r\tuses: TMongoReplicationTestCase\r\tinstanceVariableNames: \'collection repository\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests-Replication\''			},			#name : #VOMongoReplicationBasicTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationBasicTest,						#isMetaSide : false					},					#name : #collection,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoReplicationBasicTest,						#isMetaSide : false					},					#name : #repository,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : 'TMongoReplicationTestCase classTrait',					#definitionSource : 'VOMongoReplicationBasicTest class\r\tuses: TMongoReplicationTestCase classTrait\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoReplicationBasicTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoReplicationBasicTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Replication,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1447' ],		#self : OmReference [ '1448' ],		#time : DateAndTime [ '2018-08-16T16:44:19.3017+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : 'TMongoReplicationTestCase',				#definitionSource : 'TestCase subclass: #VOMongoReplicationBasicTest\r\tuses: TMongoReplicationTestCase\r\tinstanceVariableNames: \'collection repository\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Tests-Replication\''			},			#name : #VOMongoReplicationBasicTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOMongoReplicationBasicTest,						#isMetaSide : false					},					#name : #collection,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteVOMongoReplicationBasicTest,						#isMetaSide : false					},					#name : #repository,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : 'TMongoReplicationTestCase classTrait',					#definitionSource : 'VOMongoReplicationBasicTest class\r\tuses: TMongoReplicationTestCase classTrait\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoReplicationBasicTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoReplicationBasicTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Replication,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1448' ],		#self : OmReference [ '1449' ],		#time : DateAndTime [ '2018-08-16T16:44:19.302866+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoWireProtocolTest,				#isMetaSide : false			},			#name : #setUpRepository,			#protocol : #running,			#sourceCode : 'setUpRepository\r\tsuper setUpRepository.\r\r\trepository wireProtocolEnabled: true.',			#stamp : 'MartinDias 9/21/2016 17:00',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1449' ],		#self : OmReference [ '1450' ],		#time : DateAndTime [ '2018-08-16T16:44:19.305012+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoTest',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoTest subclass: #VOMongoWireProtocolTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests-Core\''			},			#name : #VOMongoWireProtocolTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoWireProtocolTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoWireProtocolTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoWireProtocolTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Core,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #running	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1450' ],		#self : OmReference [ '1451' ],		#time : DateAndTime [ '2018-08-16T16:44:19.308423+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoTest',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoTest subclass: #VOMongoWireProtocolTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Tests-Core\''			},			#name : #VOMongoWireProtocolTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoWireProtocolTest class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoWireProtocolTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoWireProtocolTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Core,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1451' ],		#self : OmReference [ '1452' ],		#time : DateAndTime [ '2018-08-16T16:44:19.309291+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTest,				#isMetaSide : false			},			#name : #waitForWriteOperation,			#protocol : #running,			#sourceCode : 'waitForWriteOperation\r\t"Write operations can be performed in a fire-and-forget mode, and it\'s convenient to wait a bit to ensure mongodb performed it before asserting on the results."\r\r\t50 milliSeconds wait',			#stamp : 'MartinDias 9/21/2016 16:04',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1452' ],		#self : OmReference [ '1453' ],		#time : DateAndTime [ '2018-08-16T16:44:19.311124+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTest,				#isMetaSide : false			},			#name : #testSaveEnsuringCurrent,			#protocol : #tests,			#sourceCode : 'testSaveEnsuringCurrent\r\tself repository saveEnsuringCurrent: VOTestPilot new.\r\tself waitForWriteOperation.\r\r\tself assert: (self repository count: VOTestPilot) equals: 1.',			#stamp : 'MartinDias 9/19/2016 15:02',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1453' ],		#self : OmReference [ '1454' ],		#time : DateAndTime [ '2018-08-16T16:44:19.312822+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTest,				#isMetaSide : false			},			#name : #testDefaultOfEnsuringCurrentOnSave,			#protocol : #tests,			#sourceCode : 'testDefaultOfEnsuringCurrentOnSave\r\tself deny: self repository isEnsuringCurrentOnSave',			#stamp : 'MartinDias 9/19/2016 15:17',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1454' ],		#self : OmReference [ '1455' ],		#time : DateAndTime [ '2018-08-16T16:44:19.314702+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VORepositoryTest',				#traitCompositionSource : '{}',				#definitionSource : 'VORepositoryTest subclass: #VOMongoTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests\''			},			#name : #VOMongoTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoTest,					#isMetaSide : false				},				#parent : @8,				#content : 'These tests hits a real MongoDB database. ',				#stamp : 'EstebanLorenzano 8/3/2016 17:43'			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1455' ],		#self : OmReference [ '1456' ],		#time : DateAndTime [ '2018-08-16T16:44:19.315131+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTest,				#isMetaSide : false			},			#name : #setUpRepository,			#protocol : #running,			#sourceCode : 'setUpRepository\r\t"Hook: subclasses can override with special ways of building the test repository"\r\r\trepository := VOMongoRepository \r\t\thost: self class mongoHost\r\t\tdatabase: \'Voyage-Tests\'.\r\trepository debug: true.',			#stamp : 'MartinDias 9/19/2016 20:06',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1456' ],		#self : OmReference [ '1457' ],		#time : DateAndTime [ '2018-08-16T16:44:19.316936+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tself setUpRepository.',			#stamp : 'MartinDias 9/19/2016 20:05',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1457' ],		#self : OmReference [ '1458' ],		#time : DateAndTime [ '2018-08-16T16:44:19.319542+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoTest class',				#isMetaSide : true			},			#name : #'mongoHost:',			#protocol : #accessing,			#sourceCode : 'mongoHost: aString\r\tMongoHost := aString',			#stamp : 'MartinDias 9/19/2016 19:34',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1458' ],		#self : OmReference [ '1459' ],		#time : DateAndTime [ '2018-08-16T16:44:19.323407+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoTest class',				#isMetaSide : true			},			#name : #mongoHost,			#protocol : #accessing,			#sourceCode : 'mongoHost\r\t^ MongoHost ifNil: [ VOMongoRepository defaultHost ]',			#stamp : 'MartinDias 9/19/2016 19:33',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1459' ],		#self : OmReference [ '1460' ],		#time : DateAndTime [ '2018-08-16T16:44:19.325639+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoTest class\r\tinstanceVariableNames: \'\''			},			#name : #'VOMongoTest class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'VORepositoryTest',					#traitCompositionSource : '{}',					#definitionSource : 'VORepositoryTest subclass: #VOMongoTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests\''				},				#name : #VOMongoTest,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoTest,						#isMetaSide : false					},					#parent : @13,					#content : 'These tests hits a real MongoDB database. ',					#stamp : 'EstebanLorenzano 8/3/2016 17:43'				},				#classVariables : OrderedCollection [ ],				#category : #Voyage-Mongo-Tests,				#package : #Voyage-Mongo-Tests,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1460' ],		#self : OmReference [ '1461' ],		#time : DateAndTime [ '2018-08-16T16:44:19.326044+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoTest class',				#isMetaSide : true			},			#name : #isAbstract,			#protocol : #testing,			#sourceCode : 'isAbstract\r\t^ super isAbstract or: [ self name = #VOMongoTest ]',			#stamp : 'MartinDias 9/5/2016 16:03',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1461' ],		#self : OmReference [ '1462' ],		#time : DateAndTime [ '2018-08-16T16:44:19.328244+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoTest class\r\tinstanceVariableNames: \'\''			},			#name : #'VOMongoTest class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'VORepositoryTest',					#traitCompositionSource : '{}',					#definitionSource : 'VORepositoryTest subclass: #VOMongoTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests\''				},				#name : #VOMongoTest,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #VOMongoTest,						#isMetaSide : false					},					#parent : @13,					#content : 'These tests hits a real MongoDB database. ',					#stamp : 'EstebanLorenzano 8/3/2016 17:43'				},				#classVariables : OrderedCollection [ ],				#category : #Voyage-Mongo-Tests,				#package : #Voyage-Mongo-Tests,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #testing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1462' ],		#self : OmReference [ '1463' ],		#time : DateAndTime [ '2018-08-16T16:44:19.328811+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationSimplestScenarioTest,				#isMetaSide : false			},			#name : #setUpRepository,			#protocol : #running,			#sourceCode : 'setUpRepository\r\t"Simplest scenario: Specify primary member in the replica set."\r\r\trepository := MongoReplicationTestResources newRepositoryOnA',			#stamp : 'MartinDias 9/19/2016 20:04',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1463' ],		#self : OmReference [ '1464' ],		#time : DateAndTime [ '2018-08-16T16:44:19.33362+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoTest',				#traitCompositionSource : 'TMongoReplicationTestCase + TVOMongoRepositoryTestFix',				#definitionSource : 'VOMongoTest subclass: #VOMongoReplicationSimplestScenarioTest\r\tuses: TMongoReplicationTestCase + TVOMongoRepositoryTestFix\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Tests-Replication\''			},			#name : #VOMongoReplicationSimplestScenarioTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : 'TMongoReplicationTestCase classTrait + TVOMongoRepositoryTestFix classTrait',					#definitionSource : 'VOMongoReplicationSimplestScenarioTest class\r\tuses: TMongoReplicationTestCase classTrait + TVOMongoRepositoryTestFix classTrait\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoReplicationSimplestScenarioTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoReplicationSimplestScenarioTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Replication,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1464' ],		#self : OmReference [ '1465' ],		#time : DateAndTime [ '2018-08-16T16:44:19.334528+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoReplicationDiscoverPrimaryScenarioTest,				#isMetaSide : false			},			#name : #setUpRepository,			#protocol : #running,			#sourceCode : 'setUpRepository\r\t"Note that `mongo B` is a secondary member, then the repository must figure out this fact, and discover the primary member in the replica set."\r\r\trepository := MongoReplicationTestResources newRepositoryOnB',			#stamp : 'MartinDias 9/19/2016 20:04',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1465' ],		#self : OmReference [ '1466' ],		#time : DateAndTime [ '2018-08-16T16:44:19.339724+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoTest',				#traitCompositionSource : 'TMongoReplicationTestCase + TVOMongoRepositoryTestFix',				#definitionSource : 'VOMongoTest subclass: #VOMongoReplicationDiscoverPrimaryScenarioTest\r\tuses: TMongoReplicationTestCase + TVOMongoRepositoryTestFix\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Tests-Replication\''			},			#name : #VOMongoReplicationDiscoverPrimaryScenarioTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : 'TMongoReplicationTestCase classTrait + TVOMongoRepositoryTestFix classTrait',					#definitionSource : 'VOMongoReplicationDiscoverPrimaryScenarioTest class\r\tuses: TMongoReplicationTestCase classTrait + TVOMongoRepositoryTestFix classTrait\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoReplicationDiscoverPrimaryScenarioTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoReplicationDiscoverPrimaryScenarioTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Replication,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1466' ],		#self : OmReference [ '1467' ],		#time : DateAndTime [ '2018-08-16T16:44:19.340756+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoCommandTest,				#isMetaSide : false			},			#name : #setUpRepository,			#protocol : #running,			#sourceCode : 'setUpRepository\r\tsuper setUpRepository.\r\r\trepository wireProtocolEnabled: false.',			#stamp : 'MartinDias 9/21/2016 17:00',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1467' ],		#self : OmReference [ '1468' ],		#time : DateAndTime [ '2018-08-16T16:44:19.34264+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoTest',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoTest subclass: #VOMongoCommandTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Voyage-Mongo-Tests-Core\''			},			#name : #VOMongoCommandTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoCommandTest class\r\tinstanceVariableNames: \'\''				},				#name : #'VOMongoCommandTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #VOMongoCommandTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Core,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		},		#protocol : #running	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1468' ],		#self : OmReference [ '1469' ],		#time : DateAndTime [ '2018-08-16T16:44:19.34602+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'VOMongoTest',				#traitCompositionSource : '{}',				#definitionSource : 'VOMongoTest subclass: #VOMongoCommandTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Voyage-Mongo-Tests-Core\''			},			#name : #VOMongoCommandTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'VOMongoCommandTest class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVOMongoCommandTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVOMongoCommandTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Voyage-Mongo-Tests-Core,			#package : #Voyage-Mongo-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1469' ],		#self : OmReference [ '1470' ],		#time : DateAndTime [ '2018-08-16T16:44:19.347116+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TVOMongoRepositoryTestFix classTrait',				#isMetaSide : true			},			#name : #shouldInheritSelectors,			#protocol : #testing,			#sourceCode : 'shouldInheritSelectors \r\t"Workaround ot avoid running tests when replication testing scenario isn\'t available."\r\r\t^ MongoReplicationTestResources isTestScenarioAvailable',			#stamp : 'MartinDias 6/17/2016 15:33',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1470' ],		#self : OmReference [ '1471' ],		#time : DateAndTime [ '2018-08-16T16:44:19.350011+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TVOMongoRepositoryTestFix classTrait',				#isMetaSide : true			},			#name : #resources,			#protocol : #testing,			#sourceCode : 'resources\r\t^ #()',			#stamp : 'MartinDias 6/17/2016 15:35',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1471' ],		#self : OmReference [ '1472' ],		#time : DateAndTime [ '2018-08-16T16:44:19.351858+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetatraitDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'TVOMongoRepositoryTestFix classTrait\r\tuses: {}'			},			#name : #'TVOMongoRepositoryTestFix classTrait',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#baseClass : RGTraitDefinition {				#annotations : IdentityDictionary {					#superclassName : #Trait,					#traitCompositionSource : '{}',					#definitionSource : 'Trait named: #TVOMongoRepositoryTestFix\r\tuses: {}\r\tcategory: \'Voyage-Mongo-Tests-Replication\''				},				#name : #TVOMongoRepositoryTestFix,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #TVOMongoRepositoryTestFix,						#isMetaSide : false					},					#parent : @12,					#content : 'I patch replication test that are subclasses of VOMongoRepositoryTest.',					#stamp : 'MartinDias 6/17/2016 13:50'				},				#category : #Voyage-Mongo-Tests-Replication,				#package : #Voyage-Mongo-Tests			}		},		#protocol : #testing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1472' ],		#self : OmReference [ '1473' ],		#time : DateAndTime [ '2018-08-16T16:44:19.355842+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpTraitRemoval {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#superclassName : #Trait,				#traitCompositionSource : '{}',				#definitionSource : 'Trait named: #TVOMongoRepositoryTestFix\r\tuses: {}\r\tcategory: #\'Voyage-Mongo-Tests-Replication\''			},			#name : #TVOMongoRepositoryTestFix,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TVOMongoRepositoryTestFix classTrait\r\tuses: {}'				},				#name : #'AnObsoleteTVOMongoRepositoryTestFix classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteTVOMongoRepositoryTestFix,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #Voyage-Mongo-Tests-Replication,			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1473' ],		#self : OmReference [ '1474' ],		#time : DateAndTime [ '2018-08-16T16:44:19.356834+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TMongoReplicationTestCase,				#isMetaSide : false			},			#name : #_manual_set_up_,			#protocol : #running,			#sourceCode : '_manual_set_up_\r\t"\r\t---------------------------------------------------------------\r\tIMPORTANT: See MongoReplicationTestResources>>_manual_set_up_\r\t---------------------------------------------------------------\r\t"',			#stamp : 'MartinDias 6/24/2016 16:56',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1474' ],		#self : OmReference [ '1475' ],		#time : DateAndTime [ '2018-08-16T16:44:19.35866+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGTraitDefinition {			#annotations : IdentityDictionary {				#superclassName : #Trait,				#traitCompositionSource : '{}',				#definitionSource : 'Trait named: #TMongoReplicationTestCase\r\tuses: {}\r\tcategory: \'Voyage-Mongo-Tests-Replication\''			},			#name : #TMongoReplicationTestCase,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TMongoReplicationTestCase classTrait\r\tuses: {}'				},				#name : #'TMongoReplicationTestCase classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TMongoReplicationTestCase,					#isMetaSide : false				},				#parent : @8,				#content : 'I gather common contents for replication tests',				#stamp : 'MartinDias 6/17/2016 13:22'			},			#category : #Voyage-Mongo-Tests-Replication,			#package : #Voyage-Mongo-Tests		},		#protocol : #running	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1475' ],		#self : OmReference [ '1476' ],		#time : DateAndTime [ '2018-08-16T16:44:19.359113+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TMongoReplicationTestCase classTrait',				#isMetaSide : true			},			#name : #testSelectors,			#protocol : #testing,			#sourceCode : 'testSelectors\r\t"Workaround ot avoid running tests when replication testing scenario isn\'t available."\r\r\t^ MongoReplicationTestResources isTestScenarioAvailable\r\t\tifTrue: [ super testSelectors ]\r\t\tifFalse: [ #() ]',			#stamp : 'MartinDias 6/17/2016 15:48',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1476' ],		#self : OmReference [ '1477' ],		#time : DateAndTime [ '2018-08-16T16:44:19.360965+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TMongoReplicationTestCase classTrait',				#isMetaSide : true			},			#name : #allTestSelectors,			#protocol : #testing,			#sourceCode : 'allTestSelectors\r\t"Workaround ot avoid running tests when replication testing scenario isn\'t available."\r\r\t^ MongoReplicationTestResources isTestScenarioAvailable\r\t\tifTrue: [ super allTestSelectors ]\r\t\tifFalse: [ #() ]',			#stamp : 'MartinDias 6/17/2016 15:48',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1477' ],		#self : OmReference [ '1478' ],		#time : DateAndTime [ '2018-08-16T16:44:19.362743+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetatraitDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'TMongoReplicationTestCase classTrait\r\tuses: {}'			},			#name : #'TMongoReplicationTestCase classTrait',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#baseClass : RGTraitDefinition {				#annotations : IdentityDictionary {					#superclassName : #Trait,					#traitCompositionSource : '{}',					#definitionSource : 'Trait named: #TMongoReplicationTestCase\r\tuses: {}\r\tcategory: \'Voyage-Mongo-Tests-Replication\''				},				#name : #TMongoReplicationTestCase,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#metaClass : @8,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #TMongoReplicationTestCase,						#isMetaSide : false					},					#parent : @12,					#content : 'I gather common contents for replication tests',					#stamp : 'MartinDias 6/17/2016 13:22'				},				#category : #Voyage-Mongo-Tests-Replication,				#package : #Voyage-Mongo-Tests			}		},		#protocol : #testing	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1478' ],		#self : OmReference [ '1479' ],		#time : DateAndTime [ '2018-08-16T16:44:19.366386+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpTraitRemoval {		#trait : RGTraitDefinition {			#annotations : IdentityDictionary {				#superclassName : #Trait,				#traitCompositionSource : '{}',				#definitionSource : 'Trait named: #TMongoReplicationTestCase\r\tuses: {}\r\tcategory: #\'Voyage-Mongo-Tests-Replication\''			},			#name : #TMongoReplicationTestCase,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#metaClass : RGMetatraitDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TMongoReplicationTestCase classTrait\r\tuses: {}'				},				#name : #'AnObsoleteTMongoReplicationTestCase classTrait',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteTMongoReplicationTestCase,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#category : #Voyage-Mongo-Tests-Replication,			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1479' ],		#self : OmReference [ '1480' ],		#time : DateAndTime [ '2018-08-16T16:44:19.367818+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpCategoryRemoval {		#classCategoryName : 'Voyage-Mongo-Tests-Core',		#affectedPackageName : #Voyage-Mongo-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1480' ],		#self : OmReference [ '1481' ],		#time : DateAndTime [ '2018-08-16T16:44:19.368534+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpCategoryRemoval {		#classCategoryName : 'Voyage-Mongo-Tests-Replication',		#affectedPackageName : #Voyage-Mongo-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1481' ],		#self : OmReference [ '1482' ],		#time : DateAndTime [ '2018-08-16T16:44:19.374842+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoTest class',				#isMetaSide : true			},			#name : #resources,			#protocol : #accessing,			#sourceCode : 'resources\r\t^{ VOMongoTestResource }',			#stamp : 'FrancoisStephany 8/8/2012 15:03',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1482' ],		#self : OmReference [ '1483' ],		#time : DateAndTime [ '2018-08-16T16:44:19.377716+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTest,				#isMetaSide : false			},			#name : #repository,			#protocol : #accessing,			#sourceCode : 'repository \r\t^ repository',			#stamp : 'MartinDias 9/19/2016 19:26',			#package : #Voyage-Mongo-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTest,				#isMetaSide : false			},			#name : #repository,			#protocol : #accessing,			#sourceCode : 'repository \r\t^ VOMongoTestResource current repository',			#stamp : 'EstebanLorenzano 4/21/2015 16:43',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1483' ],		#self : OmReference [ '1484' ],		#time : DateAndTime [ '2018-08-16T16:44:19.37934+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\t"Reset the DB after each test"\r\t"self repository dropDatabase"\r\r\tsuper tearDown.\r\r\t(VOTestObject allSubclasses\r\t\tcollect: [ :each | each persistentClass ] as: Set)\r\t\tdo: [ :each | repository removeAll: each ].\r\t\t\r\tSmalltalk garbageCollect.\r\r\tself waitForWriteOperation.\r',			#stamp : 'MartinDias 9/19/2016 19:32',			#package : #Voyage-Mongo-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\t"Reset the DB after each test"\r\t"self repository dropDatabase --> this works but it\'s slow and... leaks open Sockets!"\r\r\tself repository\r\t\tremoveAll: VOTestPet;\r\t\tremoveAll: VOTestPilot;\r\t\tflush.\r\tSmalltalk garbageCollect.\r\r\t800 milliseconds asDelay wait. "Wait to reduce the probability of a concurrency conflict"',			#stamp : 'MartinDias 3/29/2016 13:02',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1484' ],		#self : OmReference [ '1485' ],		#time : DateAndTime [ '2018-08-16T16:44:19.380668+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoTestResource class',				#isMetaSide : true			},			#name : #mongoHost,			#protocol : #accessing,			#sourceCode : 'mongoHost\r\t^ MongoHost ifNil: [ VOMongoRepository defaultHost ]',			#stamp : 'EstebanLorenzano 4/21/2015 16:25',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1485' ],		#self : OmReference [ '1486' ],		#time : DateAndTime [ '2018-08-16T16:44:19.381918+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'VOMongoTestResource class',				#isMetaSide : true			},			#name : #'mongoHost:',			#protocol : #accessing,			#sourceCode : 'mongoHost: aString\r\tMongoHost := aString',			#stamp : 'EstebanLorenzano 4/21/2015 16:25',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1486' ],		#self : OmReference [ '1487' ],		#time : DateAndTime [ '2018-08-16T16:44:19.383017+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTestResource,				#isMetaSide : false			},			#name : #repository,			#protocol : #accessing,			#sourceCode : 'repository\r\t^ repository',			#stamp : 'FrancoisStephany 8/8/2012 15:03',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1487' ],		#self : OmReference [ '1488' ],		#time : DateAndTime [ '2018-08-16T16:44:19.384129+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTestResource,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\trepository := VOMongoRepository \r\t\thost: self class mongoHost\r\t\tdatabase: \'Voyage-Tests\'.\r\trepository debug: true.',			#stamp : 'MartinDias 7/13/2016 01:05',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1488' ],		#self : OmReference [ '1489' ],		#time : DateAndTime [ '2018-08-16T16:44:19.385186+02:00' ],		#trigger : OmReference [ '1396' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #VOMongoTestResource,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\tsuper tearDown.\r\t(VOTestObject allSubclasses \r\t\tcollect: [ :each | each persistentClass ] as: Set)\r\t\tdo: [ :each | repository removeAll: each ].\r\trepository := nil.',			#stamp : 'EstebanLorenzano 2/11/2016 18:28',			#package : #Voyage-Mongo-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:19.523648+02:00' ],		#prior : OmReference [ '1489' ],		#self : OmReference [ '1490' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Voyage-Mongo-Utils-EstebanLorenzano.1471364195'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-08-16T16:44:20.532496+02:00' ],		#prior : OmReference [ '1490' ],		#self : OmReference [ '1491' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'TinyBlog-LucFabresse.chap6_v2'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1491' ],		#self : OmReference [ '1492' ],		#time : DateAndTime [ '2018-08-16T16:44:20.778444+02:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #TinyBlog-Tests,		#affectedPackageName : #TinyBlog	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1492' ],		#self : OmReference [ '1493' ],		#time : DateAndTime [ '2018-08-16T16:44:20.846569+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #TBBlogTest\r\tinstanceVariableNames: \'blog post first previousRepository\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Tests\''			},			#name : #TBBlogTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBBlogTest,						#isMetaSide : false					},					#name : #blog,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBBlogTest,						#isMetaSide : false					},					#name : #post,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBBlogTest,						#isMetaSide : false					},					#name : #first,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBBlogTest,						#isMetaSide : false					},					#name : #previousRepository,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBBlogTest class\r\tinstanceVariableNames: \'\''				},				#name : #'TBBlogTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBBlogTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Tests,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1493' ],		#self : OmReference [ '1494' ],		#time : DateAndTime [ '2018-08-16T16:44:20.953557+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #TBPostTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Tests\''			},			#name : #TBPostTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostTest class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Tests,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1494' ],		#self : OmReference [ '1495' ],		#time : DateAndTime [ '2018-08-16T16:44:20.95849+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #TBBlog\r\tinstanceVariableNames: \'posts\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #TBBlog,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBBlog,						#isMetaSide : false					},					#name : #posts,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBBlog class\r\tinstanceVariableNames: \'uniqueInstance\''				},				#name : #'TBBlog class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'TBBlog class',							#isMetaSide : true						},						#name : #uniqueInstance,						#parent : @15					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBBlog,					#isMetaSide : false				},				#parent : @8,				#content : 'a TBBlog represents a blog that contains posts.\r\rTBBlog is a Voyage root.\rThe singleton blog object is stored in a Voyage repository that can be attached to a memory or a Mongo backend.\r\rHow to reset the database:\r\r\tTBBlog reset.\r\tTBBlog createDemoPosts',				#stamp : 'LucFabresse 8/6/2018 16:03'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'a TBBlog represents a blog that contains posts.\r\rTBBlog is a Voyage root.\rThe singleton blog object is stored in a Voyage repository that can be attached to a memory or a Mongo backend.\r\rHow to reset the database:\r\r\tTBBlog reset.\r\tTBBlog createDemoPosts',		#newStamp : 'LucFabresse 8/6/2018 16:03'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1495' ],		#self : OmReference [ '1496' ],		#time : DateAndTime [ '2018-08-16T16:44:20.959707+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpCategoryAddition {		#classCategoryName : #TinyBlog,		#affectedPackageName : #TinyBlog	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1496' ],		#self : OmReference [ '1497' ],		#time : DateAndTime [ '2018-08-16T16:44:20.96354+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #TBBlog\r\tinstanceVariableNames: \'posts\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog\''			},			#name : #TBBlog,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBBlog,						#isMetaSide : false					},					#name : #posts,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBBlog class\r\tinstanceVariableNames: \'uniqueInstance\''				},				#name : #'TBBlog class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'TBBlog class',							#isMetaSide : true						},						#name : #uniqueInstance,						#parent : @15					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBBlog,					#isMetaSide : false				},				#parent : @8,				#content : 'a TBBlog represents a blog that contains posts.\r\rTBBlog is a Voyage root.\rThe singleton blog object is stored in a Voyage repository that can be attached to a memory or a Mongo backend.\r\rHow to reset the database:\r\r\tTBBlog reset.\r\tTBBlog createDemoPosts',				#stamp : 'LucFabresse 8/6/2018 16:03'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1497' ],		#self : OmReference [ '1498' ],		#time : DateAndTime [ '2018-08-16T16:44:20.968492+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #TBPost\r\tinstanceVariableNames: \'category date text title visible\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #TBPost,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPost,						#isMetaSide : false					},					#name : #category,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPost,						#isMetaSide : false					},					#name : #date,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPost,						#isMetaSide : false					},					#name : #text,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPost,						#isMetaSide : false					},					#name : #title,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPost,						#isMetaSide : false					},					#name : #visible,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPost class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPost class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPost,					#isMetaSide : false				},				#parent : @8,				#content : 'A  TBPost is a blog post.\r\r',				#stamp : 'StephaneDucasse 12/4/2015 14:51'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A  TBPost is a blog post.\r\r',		#newStamp : 'StephaneDucasse 12/4/2015 14:51'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1498' ],		#self : OmReference [ '1499' ],		#time : DateAndTime [ '2018-08-16T16:44:20.971058+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #TBPost\r\tinstanceVariableNames: \'category date text title visible\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog\''			},			#name : #TBPost,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPost,						#isMetaSide : false					},					#name : #category,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPost,						#isMetaSide : false					},					#name : #date,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPost,						#isMetaSide : false					},					#name : #text,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPost,						#isMetaSide : false					},					#name : #title,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPost,						#isMetaSide : false					},					#name : #visible,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPost class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPost class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPost,					#isMetaSide : false				},				#parent : @8,				#content : 'A  TBPost is a blog post.\r\r',				#stamp : 'StephaneDucasse 12/4/2015 14:51'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1499' ],		#self : OmReference [ '1500' ],		#time : DateAndTime [ '2018-08-16T16:44:20.976494+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WAComponent',				#traitCompositionSource : '{}',				#definitionSource : 'WAComponent subclass: #TBApplicationRootComponent\r\tinstanceVariableNames: \'main\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #TBApplicationRootComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBApplicationRootComponent,						#isMetaSide : false					},					#name : #main,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBApplicationRootComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBApplicationRootComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBApplicationRootComponent,					#isMetaSide : false				},				#parent : @8,				#content : 'A simple class to register the application to the Seaside application server.\rI\'m the entry point of the application. \r\rPoint your browser to \r\thttp://localhost:8080/TinyBlog\r\rIf it does not work, check that the server is running\r\r\tZnZincServerAdaptor startOn: 8080.\r\t\rI point to my main element that is an instance of a subclass of ScreenComponent ',				#stamp : 'Luc 8/10/2018 11:59'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A simple class to register the application to the Seaside application server.\rI\'m the entry point of the application. \r\rPoint your browser to \r\thttp://localhost:8080/TinyBlog\r\rIf it does not work, check that the server is running\r\r\tZnZincServerAdaptor startOn: 8080.\r\t\rI point to my main element that is an instance of a subclass of ScreenComponent ',		#newStamp : 'Luc 8/10/2018 11:59'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1500' ],		#self : OmReference [ '1501' ],		#time : DateAndTime [ '2018-08-16T16:44:20.978337+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpCategoryAddition {		#classCategoryName : #TinyBlog-Components,		#affectedPackageName : #TinyBlog	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1501' ],		#self : OmReference [ '1502' ],		#time : DateAndTime [ '2018-08-16T16:44:20.982421+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WAComponent',				#traitCompositionSource : '{}',				#definitionSource : 'WAComponent subclass: #TBApplicationRootComponent\r\tinstanceVariableNames: \'main\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBApplicationRootComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBApplicationRootComponent,						#isMetaSide : false					},					#name : #main,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBApplicationRootComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBApplicationRootComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBApplicationRootComponent,					#isMetaSide : false				},				#parent : @8,				#content : 'A simple class to register the application to the Seaside application server.\rI\'m the entry point of the application. \r\rPoint your browser to \r\thttp://localhost:8080/TinyBlog\r\rIf it does not work, check that the server is running\r\r\tZnZincServerAdaptor startOn: 8080.\r\t\rI point to my main element that is an instance of a subclass of ScreenComponent ',				#stamp : 'Luc 8/10/2018 11:59'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1502' ],		#self : OmReference [ '1503' ],		#time : DateAndTime [ '2018-08-16T16:44:20.986761+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WAComponent',				#traitCompositionSource : '{}',				#definitionSource : 'WAComponent subclass: #TBHeaderComponent\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #TBHeaderComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBHeaderComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBHeaderComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBHeaderComponent,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a simple component to manage the default header.\rI am factorised on ScreenComponent.\r ',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I am a simple component to manage the default header.\rI am factorised on ScreenComponent.\r ',		#newStamp : 'Luc 8/10/2018 12:01'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1503' ],		#self : OmReference [ '1504' ],		#time : DateAndTime [ '2018-08-16T16:44:20.989315+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WAComponent',				#traitCompositionSource : '{}',				#definitionSource : 'WAComponent subclass: #TBHeaderComponent\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBHeaderComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBHeaderComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBHeaderComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBHeaderComponent,					#isMetaSide : false				},				#parent : @8,				#content : 'I am a simple component to manage the default header.\rI am factorised on ScreenComponent.\r ',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1504' ],		#self : OmReference [ '1505' ],		#time : DateAndTime [ '2018-08-16T16:44:21.013354+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WAComponent',				#traitCompositionSource : '{}',				#definitionSource : 'WAComponent subclass: #TBPostComponent\r\tinstanceVariableNames: \'post\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #TBPostComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostComponent,						#isMetaSide : false					},					#name : #post,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostComponent,					#isMetaSide : false				},				#parent : @8,				#content : 'A simple component to display a post.',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A simple component to display a post.',		#newStamp : 'Luc 8/10/2018 12:01'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1505' ],		#self : OmReference [ '1506' ],		#time : DateAndTime [ '2018-08-16T16:44:21.016176+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WAComponent',				#traitCompositionSource : '{}',				#definitionSource : 'WAComponent subclass: #TBPostComponent\r\tinstanceVariableNames: \'post\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBPostComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostComponent,						#isMetaSide : false					},					#name : #post,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostComponent,					#isMetaSide : false				},				#parent : @8,				#content : 'A simple component to display a post.',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1506' ],		#self : OmReference [ '1507' ],		#time : DateAndTime [ '2018-08-16T16:44:21.020512+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WAComponent',				#traitCompositionSource : '{}',				#definitionSource : 'WAComponent subclass: #TBScreenComponent\r\tinstanceVariableNames: \'header\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #TBScreenComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBScreenComponent,						#isMetaSide : false					},					#name : #header,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBScreenComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBScreenComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBScreenComponent,					#isMetaSide : false				},				#parent : @8,				#content : 'Root of the elements that are represented inside the application root component. \rSubclasses are \r\t- the user visible components such as list of blog posts\r\t- the admin components',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Root of the elements that are represented inside the application root component. \rSubclasses are \r\t- the user visible components such as list of blog posts\r\t- the admin components',		#newStamp : 'Luc 8/10/2018 12:01'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1507' ],		#self : OmReference [ '1508' ],		#time : DateAndTime [ '2018-08-16T16:44:21.026272+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'WAComponent',				#traitCompositionSource : '{}',				#definitionSource : 'WAComponent subclass: #TBScreenComponent\r\tinstanceVariableNames: \'header\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBScreenComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBScreenComponent,						#isMetaSide : false					},					#name : #header,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBScreenComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBScreenComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBScreenComponent,					#isMetaSide : false				},				#parent : @8,				#content : 'Root of the elements that are represented inside the application root component. \rSubclasses are \r\t- the user visible components such as list of blog posts\r\t- the admin components',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1508' ],		#self : OmReference [ '1509' ],		#time : DateAndTime [ '2018-08-16T16:44:21.031318+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBScreenComponent',				#traitCompositionSource : '{}',				#definitionSource : 'TBScreenComponent subclass: #TBPostsListComponent\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #TBPostsListComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostsListComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostsListComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostsListComponent,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m responsible for displaying a list of posts. I delegare to the post component the display of a single post.\rI\'m in the contact with a category component. ',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m responsible for displaying a list of posts. I delegare to the post component the display of a single post.\rI\'m in the contact with a category component. ',		#newStamp : 'Luc 8/10/2018 12:01'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1509' ],		#self : OmReference [ '1510' ],		#time : DateAndTime [ '2018-08-16T16:44:21.034185+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TBScreenComponent',				#traitCompositionSource : '{}',				#definitionSource : 'TBScreenComponent subclass: #TBPostsListComponent\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TinyBlog-Components\''			},			#name : #TBPostsListComponent,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TBPostsListComponent class\r\tinstanceVariableNames: \'\''				},				#name : #'TBPostsListComponent class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostsListComponent,					#isMetaSide : false				},				#parent : @8,				#content : 'I\'m responsible for displaying a list of posts. I delegare to the post component the display of a single post.\rI\'m in the contact with a category component. ',				#stamp : 'Luc 8/10/2018 12:01'			},			#classVariables : OrderedCollection [ ],			#category : #TinyBlog-Components,			#package : #TinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1510' ],		#self : OmReference [ '1511' ],		#time : DateAndTime [ '2018-08-16T16:44:21.120606+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #setup,			#sourceCode : 'setUp\r\tpreviousRepository := VORepository current.\r   VORepository setRepository: VOMemoryRepository new.\r\r\tblog := TBBlog current.\r\tblog removeAllPosts.\r\t\r\tfirst := (TBPost title: \'A title\' text: \'A text\' category: \'First Category\').\r\tblog writeBlogPost: first.\r\t\r \tpost := (TBPost title: \'Another title\' text: \'Another text\' category: \'Second Category\') beVisible',			#stamp : 'StephaneDucasse 8/5/2018 22:14',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1511' ],		#self : OmReference [ '1512' ],		#time : DateAndTime [ '2018-08-16T16:44:21.123756+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #setup,			#sourceCode : 'tearDown\r\tVORepository setRepository: previousRepository',			#stamp : 'StephaneDucasse 8/5/2018 22:14',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1512' ],		#self : OmReference [ '1513' ],		#time : DateAndTime [ '2018-08-16T16:44:21.126375+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #testAddBlogPost,			#protocol : #tests,			#sourceCode : 'testAddBlogPost\r\tblog writeBlogPost: post.\r\tself assert: blog size equals: 2',			#stamp : 'StephaneDucasse 12/4/2015 15:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1513' ],		#self : OmReference [ '1514' ],		#time : DateAndTime [ '2018-08-16T16:44:21.128027+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #testAllBlogPosts,			#protocol : #tests,			#sourceCode : 'testAllBlogPosts\r   blog writeBlogPost: post.\r   self assert: blog allBlogPosts size equals: 2.',			#stamp : 'StephaneDucasse 8/5/2018 21:30',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1514' ],		#self : OmReference [ '1515' ],		#time : DateAndTime [ '2018-08-16T16:44:21.128987+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #testAllBlogPostsFromCategory,			#protocol : #tests,			#sourceCode : 'testAllBlogPostsFromCategory\r   self assert: (blog allBlogPostsFromCategory: \'First Category\') size equals: 1',			#stamp : 'StephaneDucasse 12/4/2015 15:48',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1515' ],		#self : OmReference [ '1516' ],		#time : DateAndTime [ '2018-08-16T16:44:21.129845+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #testAllCategories,			#protocol : #tests,			#sourceCode : 'testAllCategories\r   blog writeBlogPost: post.\r   self assert: (blog allCategories) size equals: 2.',			#stamp : 'StephaneDucasse 12/4/2015 15:48',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1516' ],		#self : OmReference [ '1517' ],		#time : DateAndTime [ '2018-08-16T16:44:21.130658+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #testAllVisibleBlogPosts,			#protocol : #tests,			#sourceCode : 'testAllVisibleBlogPosts\r   blog writeBlogPost: post.\r   self assert: blog allVisibleBlogPosts size equals: 1.',			#stamp : 'StephaneDucasse 8/5/2018 21:32',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1517' ],		#self : OmReference [ '1518' ],		#time : DateAndTime [ '2018-08-16T16:44:21.131441+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #testAllVisibleBlogPostsFromCategory,			#protocol : #tests,			#sourceCode : 'testAllVisibleBlogPostsFromCategory\r   blog writeBlogPost: post.\r   self \r\t\tassert: (blog allVisibleBlogPostsFromCategory: \'First Category\') size \r\t\tequals: 0.\r   self \r\t\tassert: (blog allVisibleBlogPostsFromCategory: \'Second Category\') size \r\t\tequals: 1.',			#stamp : 'StephaneDucasse 8/5/2018 21:33',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1518' ],		#self : OmReference [ '1519' ],		#time : DateAndTime [ '2018-08-16T16:44:21.132227+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #testRemoveAllBlogPosts,			#protocol : #tests,			#sourceCode : 'testRemoveAllBlogPosts\r   blog removeAllPosts.\r   self assert: blog size equals: 0.',			#stamp : 'LucFabresse 3/18/2016 14:58',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1519' ],		#self : OmReference [ '1520' ],		#time : DateAndTime [ '2018-08-16T16:44:21.133859+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #testSize,			#protocol : #tests,			#sourceCode : 'testSize\r   self assert: blog size equals: 1',			#stamp : 'StephaneDucasse 12/4/2015 15:40',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1520' ],		#self : OmReference [ '1521' ],		#time : DateAndTime [ '2018-08-16T16:44:21.135525+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlogTest,				#isMetaSide : false			},			#name : #testUnclassifiedBlogPosts,			#protocol : #tests,			#sourceCode : 'testUnclassifiedBlogPosts\r   self assert: (blog allBlogPosts select: [ :p | p isUnclassified ]) size equals: 0.',			#stamp : 'StephaneDucasse 12/4/2015 15:51',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1521' ],		#self : OmReference [ '1522' ],		#time : DateAndTime [ '2018-08-16T16:44:21.137111+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostTest,				#isMetaSide : false			},			#name : #testPostIsCreatedCorrectly,			#protocol : #tests,			#sourceCode : 'testPostIsCreatedCorrectly\r\r\t| post |\r\tpost := TBPost \r\t\ttitle: \'Welcome to TinyBlog\' \r\t\ttext: \'TinyBlog is a small blog engine made with Pharo.\' \r\t\tcategory: \'TinyBlog\'.\r\tself assert: post title equals: \'Welcome to TinyBlog\' .\r\tself assert: post text equals: \'TinyBlog is a small blog engine made with Pharo.\' .',			#stamp : 'LucFabresse 8/6/2018 14:41',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1522' ],		#self : OmReference [ '1523' ],		#time : DateAndTime [ '2018-08-16T16:44:21.138087+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostTest,				#isMetaSide : false			},			#name : #testWithoutCategoryIsUnclassified,			#protocol : #tests,			#sourceCode : 'testWithoutCategoryIsUnclassified\r\r\t| post |\r\tpost := TBPost \r\t\ttitle: \'Welcome to TinyBlog\' \r\t\ttext: \'TinyBlog is a small blog engine made with Pharo.\'.\r\tself assert: post title equals: \'Welcome to TinyBlog\' .\r\tself assert: post isUnclassified.\r\tself deny: post isVisible',			#stamp : 'StephaneDucasse 8/5/2018 18:55',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1523' ],		#self : OmReference [ '1524' ],		#time : DateAndTime [ '2018-08-16T16:44:21.139155+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBBlog class',				#isMetaSide : true			},			#name : #createDemoPosts,			#protocol : #'data sample',			#sourceCode : 'createDemoPosts\r   "TBBlog createDemoPosts"\r   self current \r      writeBlogPost: ((TBPost title: \'Welcome in TinyBlog\' text: \'TinyBlog is a small blog engine made with Pharo.\' category: \'TinyBlog\') visible: true);\r      writeBlogPost: ((TBPost title: \'Report Pharo Sprint\' text: \'Friday, June 12 there was a Pharo sprint / Moose dojo. It was a nice event with more than 15 motivated sprinters. With the help of candies, cakes and chocolate, huge work has been done\' category: \'Pharo\') visible: true);\r      writeBlogPost: ((TBPost title: \'Brick on top of Bloc - Preview\' text: \'We are happy to announce the first preview version of Brick, a new widget set created from scratch on top of Bloc. Brick is being developed primarily by Alex Syrel (together with Alain Plantec, Andrei Chis and myself), and the work is sponsored by ESUG. \r      Brick is part of the Glamorous Toolkit effort and will provide the basis for the new versions of the development tools.\' category: \'Pharo\') visible: true);\r      writeBlogPost: ((TBPost title: \'The sad story of unclassified blog posts\' text: \'So sad that I can read this.\') visible: true);\r      writeBlogPost: ((TBPost title: \'Working with Pharo on the Raspberry Pi\' text: \'Hardware is getting cheaper and many new small devices like the famous Raspberry Pi provide new computation power that was one once only available on regular desktop computers.\' category: \'Pharo\') visible: true)',			#stamp : 'LucFabresse 3/18/2016 15:11',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1524' ],		#self : OmReference [ '1525' ],		#time : DateAndTime [ '2018-08-16T16:44:21.140088+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBBlog class',				#isMetaSide : true			},			#name : #current,			#protocol : #accessing,			#sourceCode : 'current\r\t^ self selectAll\r\t\tifNotEmpty: [ :x | x anyOne ]\r\t\tifEmpty: [ self new save ]',			#stamp : 'StephaneDucasse 8/5/2018 22:12',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1525' ],		#self : OmReference [ '1526' ],		#time : DateAndTime [ '2018-08-16T16:44:21.141011+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBBlog class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize \r\tself reset',			#stamp : 'LucFabresse 3/18/2016 14:49',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1526' ],		#self : OmReference [ '1527' ],		#time : DateAndTime [ '2018-08-16T16:44:21.141935+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBBlog class',				#isMetaSide : true			},			#name : #initializeLocalhostMongoDB,			#protocol : #voyage,			#sourceCode : 'initializeLocalhostMongoDB\r   | repository |\r   repository := VOMongoRepository database: \'tinyblog\'.\r   repository enableSingleton.',			#stamp : 'LucFabresse 8/6/2018 15:58',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1527' ],		#self : OmReference [ '1528' ],		#time : DateAndTime [ '2018-08-16T16:44:21.143629+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBBlog class',				#isMetaSide : true			},			#name : #initializeVoyageOnMemoryDB,			#protocol : #voyage,			#sourceCode : 'initializeVoyageOnMemoryDB\r   VOMemoryRepository new enableSingleton',			#stamp : 'StephaneDucasse 8/5/2018 22:09',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1528' ],		#self : OmReference [ '1529' ],		#time : DateAndTime [ '2018-08-16T16:44:21.144571+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBBlog class',				#isMetaSide : true			},			#name : #isVoyageRoot,			#protocol : #voyage,			#sourceCode : 'isVoyageRoot\r   "Indicates that instances of this class are top level documents\r    in noSQL databases"\r   ^ true',			#stamp : 'StephaneDucasse 8/5/2018 22:08',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1529' ],		#self : OmReference [ '1530' ],		#time : DateAndTime [ '2018-08-16T16:44:21.145437+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBBlog class',				#isMetaSide : true			},			#name : #reset,			#protocol : #accessing,			#sourceCode : 'reset\r\tself initializeVoyageOnMemoryDB',			#stamp : 'StephaneDucasse 8/5/2018 22:09',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1530' ],		#self : OmReference [ '1531' ],		#time : DateAndTime [ '2018-08-16T16:44:21.146317+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #allBlogPosts,			#protocol : #accessing,			#sourceCode : 'allBlogPosts\r   ^ posts',			#stamp : 'LucFabresse 3/18/2016 15:08',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1531' ],		#self : OmReference [ '1532' ],		#time : DateAndTime [ '2018-08-16T16:44:21.147215+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #'allBlogPostsFromCategory:',			#protocol : #accessing,			#sourceCode : 'allBlogPostsFromCategory: aCategory\r   ^ self allBlogPosts select: [ :p | p category = aCategory ]',			#stamp : 'LucFabresse 3/18/2016 15:09',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1532' ],		#self : OmReference [ '1533' ],		#time : DateAndTime [ '2018-08-16T16:44:21.148062+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #allCategories,			#protocol : #accessing,			#sourceCode : 'allCategories\r   ^(self allBlogPosts collect: [ :p | p category ]) asSet',			#stamp : 'StephaneDucasse 12/4/2015 15:49',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1533' ],		#self : OmReference [ '1534' ],		#time : DateAndTime [ '2018-08-16T16:44:21.148946+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #allVisibleBlogPosts,			#protocol : #accessing,			#sourceCode : 'allVisibleBlogPosts\r   ^ self allBlogPosts select: [ :p | p isVisible ]',			#stamp : 'LucFabresse 3/18/2016 15:09',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1534' ],		#self : OmReference [ '1535' ],		#time : DateAndTime [ '2018-08-16T16:44:21.14983+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #'allVisibleBlogPostsFromCategory:',			#protocol : #accessing,			#sourceCode : 'allVisibleBlogPostsFromCategory: aCategory\r   ^ self allBlogPosts select: [ :p | p category = aCategory and: [ p isVisible ] ]',			#stamp : 'LucFabresse 3/18/2016 15:09',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1535' ],		#self : OmReference [ '1536' ],		#time : DateAndTime [ '2018-08-16T16:44:21.151482+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\tposts := OrderedCollection new',			#stamp : 'LucFabresse 3/18/2016 14:47',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1536' ],		#self : OmReference [ '1537' ],		#time : DateAndTime [ '2018-08-16T16:44:21.152419+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #removeAllPosts,			#protocol : #operations,			#sourceCode : 'removeAllPosts\r\tposts := OrderedCollection new.\r\tself save.',			#stamp : 'StephaneDucasse 8/5/2018 22:13',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1537' ],		#self : OmReference [ '1538' ],		#time : DateAndTime [ '2018-08-16T16:44:21.153256+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #size,			#protocol : #accessing,			#sourceCode : 'size\r\t ^ posts size',			#stamp : 'StephaneDucasse 8/5/2018 21:29',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1538' ],		#self : OmReference [ '1539' ],		#time : DateAndTime [ '2018-08-16T16:44:21.154121+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBBlog,				#isMetaSide : false			},			#name : #'writeBlogPost:',			#protocol : #operations,			#sourceCode : 'writeBlogPost: aPost\r\t"Write the blog post in database"\r\tposts add: aPost.\r\tself save',			#stamp : 'StephaneDucasse 8/5/2018 22:12',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1539' ],		#self : OmReference [ '1540' ],		#time : DateAndTime [ '2018-08-16T16:44:21.155071+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #'title:text:',			#protocol : #'instance creation',			#sourceCode : 'title: aTitle text: aText \r\t^ self new\r\t\ttitle: aTitle;\r\t\ttext: aText;\r\t\tyourself',			#stamp : 'StephaneDucasse 12/4/2015 14:44',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1540' ],		#self : OmReference [ '1541' ],		#time : DateAndTime [ '2018-08-16T16:44:21.15595+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #'title:text:category:',			#protocol : #'instance creation',			#sourceCode : 'title: aTitle text: aText category: aCategory\r\t^ (self title: aTitle text: aText)\r\t\t\tcategory: aCategory;\r\t\t\tyourself',			#stamp : 'StephaneDucasse 12/4/2015 14:45',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1541' ],		#self : OmReference [ '1542' ],		#time : DateAndTime [ '2018-08-16T16:44:21.15681+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPost class',				#isMetaSide : true			},			#name : #unclassifiedTag,			#protocol : #constants,			#sourceCode : 'unclassifiedTag\r\t^ \'Unclassified\'',			#stamp : 'StephaneDucasse 12/4/2015 14:36',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1542' ],		#self : OmReference [ '1543' ],		#time : DateAndTime [ '2018-08-16T16:44:21.15768+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #beVisible,			#protocol : #action,			#sourceCode : 'beVisible\r   self visible: true',			#stamp : 'StephaneDucasse 12/4/2015 14:35',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1543' ],		#self : OmReference [ '1544' ],		#time : DateAndTime [ '2018-08-16T16:44:21.159422+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #category,			#protocol : #accessing,			#sourceCode : 'category\r\t^ category',			#stamp : 'StephaneDucasse 12/4/2015 14:32',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1544' ],		#self : OmReference [ '1545' ],		#time : DateAndTime [ '2018-08-16T16:44:21.160304+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #'category:',			#protocol : #accessing,			#sourceCode : 'category: anObject\r\tcategory := anObject\r',			#stamp : 'StephaneDucasse 12/4/2015 14:33',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1545' ],		#self : OmReference [ '1546' ],		#time : DateAndTime [ '2018-08-16T16:44:21.161335+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #date,			#protocol : #accessing,			#sourceCode : 'date\r\t^ date',			#stamp : 'StephaneDucasse 12/4/2015 14:33',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1546' ],		#self : OmReference [ '1547' ],		#time : DateAndTime [ '2018-08-16T16:44:21.162206+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #'date:',			#protocol : #accessing,			#sourceCode : 'date: anObject\r\tdate := anObject',			#stamp : 'StephaneDucasse 12/4/2015 14:33',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1547' ],		#self : OmReference [ '1548' ],		#time : DateAndTime [ '2018-08-16T16:44:21.163093+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself category: self class unclassifiedTag.\r\tself date: Date today.\r\tself notVisible',			#stamp : 'LucFabresse 8/6/2018 10:03',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1548' ],		#self : OmReference [ '1549' ],		#time : DateAndTime [ '2018-08-16T16:44:21.163962+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #isUnclassified,			#protocol : #testing,			#sourceCode : 'isUnclassified\r   ^ self category = self class unclassifiedTag',			#stamp : 'StephaneDucasse 12/4/2015 14:48',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1549' ],		#self : OmReference [ '1550' ],		#time : DateAndTime [ '2018-08-16T16:44:21.164805+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #isVisible,			#protocol : #testing,			#sourceCode : 'isVisible\r   ^ self visible',			#stamp : 'StephaneDucasse 12/4/2015 14:35',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1550' ],		#self : OmReference [ '1551' ],		#time : DateAndTime [ '2018-08-16T16:44:21.165647+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #notVisible,			#protocol : #action,			#sourceCode : 'notVisible\r   self visible: false',			#stamp : 'StephaneDucasse 12/4/2015 14:35',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1551' ],		#self : OmReference [ '1552' ],		#time : DateAndTime [ '2018-08-16T16:44:21.167348+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #text,			#protocol : #accessing,			#sourceCode : 'text\r\t^ text',			#stamp : 'StephaneDucasse 12/4/2015 14:33',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1552' ],		#self : OmReference [ '1553' ],		#time : DateAndTime [ '2018-08-16T16:44:21.168223+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #'text:',			#protocol : #accessing,			#sourceCode : 'text: anObject\r\ttext := anObject',			#stamp : 'StephaneDucasse 12/4/2015 14:33',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1553' ],		#self : OmReference [ '1554' ],		#time : DateAndTime [ '2018-08-16T16:44:21.169076+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #title,			#protocol : #accessing,			#sourceCode : 'title\r\t^ title',			#stamp : 'StephaneDucasse 12/4/2015 14:33',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1554' ],		#self : OmReference [ '1555' ],		#time : DateAndTime [ '2018-08-16T16:44:21.169902+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #'title:',			#protocol : #accessing,			#sourceCode : 'title: anObject\r\ttitle := anObject',			#stamp : 'StephaneDucasse 12/4/2015 14:33',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1555' ],		#self : OmReference [ '1556' ],		#time : DateAndTime [ '2018-08-16T16:44:21.170729+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #visible,			#protocol : #accessing,			#sourceCode : 'visible\r\t^ visible',			#stamp : 'StephaneDucasse 12/4/2015 14:33',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1556' ],		#self : OmReference [ '1557' ],		#time : DateAndTime [ '2018-08-16T16:44:21.17157+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPost,				#isMetaSide : false			},			#name : #'visible:',			#protocol : #accessing,			#sourceCode : 'visible: anObject\r\tvisible := anObject',			#stamp : 'StephaneDucasse 12/4/2015 14:33',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1557' ],		#self : OmReference [ '1558' ],		#time : DateAndTime [ '2018-08-16T16:44:21.17242+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBApplicationRootComponent class',				#isMetaSide : true			},			#name : #canBeRoot,			#protocol : #testing,			#sourceCode : 'canBeRoot\r   ^ true',			#stamp : 'LucFabresse 8/6/2018 16:07',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1558' ],		#self : OmReference [ '1559' ],		#time : DateAndTime [ '2018-08-16T16:44:21.173361+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBApplicationRootComponent class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r   "self initialize"\r   | app |\r   app := WAAdmin register: self asApplicationAt: \'TinyBlog\'.\r   app\r      addLibrary: JQDeploymentLibrary;\r      addLibrary: JQUiDeploymentLibrary;\r      addLibrary: TBSDeploymentLibrary',			#stamp : 'LucFabresse 8/6/2018 16:07',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1559' ],		#self : OmReference [ '1560' ],		#time : DateAndTime [ '2018-08-16T16:44:21.175153+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBApplicationRootComponent,				#isMetaSide : false			},			#name : #children,			#protocol : #hooks,			#sourceCode : 'children\r\t^ { main }',			#stamp : 'Luc 8/10/2018 11:55',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1560' ],		#self : OmReference [ '1561' ],		#time : DateAndTime [ '2018-08-16T16:44:21.17609+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBApplicationRootComponent,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\tmain := TBPostsListComponent new',			#stamp : 'Luc 8/10/2018 11:55',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1561' ],		#self : OmReference [ '1562' ],		#time : DateAndTime [ '2018-08-16T16:44:21.176953+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBApplicationRootComponent,				#isMetaSide : false			},			#name : #'main:',			#protocol : #accessing,			#sourceCode : 'main: aComponent\r\tmain := aComponent',			#stamp : 'Luc 8/10/2018 11:55',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1562' ],		#self : OmReference [ '1563' ],		#time : DateAndTime [ '2018-08-16T16:44:21.177859+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBApplicationRootComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\thtml render: main',			#stamp : 'Luc 8/10/2018 11:55',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1563' ],		#self : OmReference [ '1564' ],		#time : DateAndTime [ '2018-08-16T16:44:21.178718+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBApplicationRootComponent,				#isMetaSide : false			},			#name : #'updateRoot:',			#protocol : #updating,			#sourceCode : 'updateRoot: anHtmlRoot\r\tsuper updateRoot: anHtmlRoot.\r\tanHtmlRoot beHtml5.\r\tanHtmlRoot title: \'TinyBlog\'',			#stamp : 'LucFabresse 8/6/2018 16:08',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1564' ],		#self : OmReference [ '1565' ],		#time : DateAndTime [ '2018-08-16T16:44:21.179678+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'renderBrandOn:',			#protocol : #rendering,			#sourceCode : 'renderBrandOn: html\r   html tbsNavbarHeader: [\r      html tbsNavbarBrand\r         url: self application url;\r         with: \'TinyBlog\' ]',			#stamp : 'Luc 8/10/2018 11:46',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1565' ],		#self : OmReference [ '1566' ],		#time : DateAndTime [ '2018-08-16T16:44:21.180601+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBHeaderComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\thtml tbsNavbar beDefault; with: [\r\t\thtml tbsContainer: [\r\t\t\tself renderBrandOn: html ]]',			#stamp : 'Luc 8/10/2018 11:56',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1566' ],		#self : OmReference [ '1567' ],		#time : DateAndTime [ '2018-08-16T16:44:21.181486+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostComponent,				#isMetaSide : false			},			#name : #date,			#protocol : #accessing,			#sourceCode : 'date\r   ^ post date',			#stamp : 'Luc 8/10/2018 11:50',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1567' ],		#self : OmReference [ '1568' ],		#time : DateAndTime [ '2018-08-16T16:44:21.183635+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostComponent,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\tpost := TBPost new',			#stamp : 'Luc 8/10/2018 11:50',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1568' ],		#self : OmReference [ '1569' ],		#time : DateAndTime [ '2018-08-16T16:44:21.184586+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostComponent,				#isMetaSide : false			},			#name : #'post:',			#protocol : #accessing,			#sourceCode : 'post: aPost\r\tpost := aPost\r',			#stamp : 'Luc 8/10/2018 11:56',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1569' ],		#self : OmReference [ '1570' ],		#time : DateAndTime [ '2018-08-16T16:44:21.18557+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\thtml heading level: 2; with: self title.\r\thtml heading level: 6; with: self date.\r\thtml text: self text',			#stamp : 'Luc 8/10/2018 11:56',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1570' ],		#self : OmReference [ '1571' ],		#time : DateAndTime [ '2018-08-16T16:44:21.186464+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostComponent,				#isMetaSide : false			},			#name : #text,			#protocol : #accessing,			#sourceCode : 'text\r   ^ post text',			#stamp : 'Luc 8/10/2018 11:50',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1571' ],		#self : OmReference [ '1572' ],		#time : DateAndTime [ '2018-08-16T16:44:21.187352+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostComponent,				#isMetaSide : false			},			#name : #title,			#protocol : #accessing,			#sourceCode : 'title\r   ^ post title',			#stamp : 'Luc 8/10/2018 11:50',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1572' ],		#self : OmReference [ '1573' ],		#time : DateAndTime [ '2018-08-16T16:44:21.188326+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostsListComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\tsuper renderContentOn: html.\r\thtml tbsContainer: [\r\t\tself blog allVisibleBlogPosts do: [ :p |\r\t\t\thtml render: (TBPostComponent new post: p) ] ]',			#stamp : 'Luc 8/10/2018 11:57',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1573' ],		#self : OmReference [ '1574' ],		#time : DateAndTime [ '2018-08-16T16:44:21.189253+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBScreenComponent,				#isMetaSide : false			},			#name : #blog,			#protocol : #accessing,			#sourceCode : 'blog\r\t"Return the current blog. In the future we will ask the session to return the blog of the currently logged in user."\r\t^ TBBlog current',			#stamp : 'Luc 8/10/2018 11:57',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1574' ],		#self : OmReference [ '1575' ],		#time : DateAndTime [ '2018-08-16T16:44:21.190976+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBScreenComponent,				#isMetaSide : false			},			#name : #children,			#protocol : #hooks,			#sourceCode : 'children\r   ^ { header }',			#stamp : 'Luc 8/10/2018 15:16',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1575' ],		#self : OmReference [ '1576' ],		#time : DateAndTime [ '2018-08-16T16:44:21.191914+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBScreenComponent,				#isMetaSide : false			},			#name : #createHeaderComponent,			#protocol : #initialization,			#sourceCode : 'createHeaderComponent\r\t^ TBHeaderComponent new',			#stamp : 'Luc 8/10/2018 11:57',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1576' ],		#self : OmReference [ '1577' ],		#time : DateAndTime [ '2018-08-16T16:44:21.192827+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBScreenComponent,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsuper initialize.\r\theader := self createHeaderComponent\r',			#stamp : 'Luc 8/10/2018 11:57',			#package : #TinyBlog		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1577' ],		#self : OmReference [ '1578' ],		#time : DateAndTime [ '2018-08-16T16:44:21.193724+02:00' ],		#trigger : OmReference [ '1491' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBScreenComponent,				#isMetaSide : false			},			#name : #'renderContentOn:',			#protocol : #rendering,			#sourceCode : 'renderContentOn: html\r\thtml render: header',			#stamp : 'Luc 8/10/2018 11:57',			#package : #TinyBlog		}	}}